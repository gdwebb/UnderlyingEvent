//
// File generated by rootcint at Wed Jan  6 14:45:10 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOsl64_gcc482dIobjdIStRootdIStSpinPooldIStSpinTreedIStSpinTree_Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "StSpinTree_Cint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void StGlobalElectron_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StGlobalElectron(void *p = 0);
   static void *newArray_StGlobalElectron(Long_t size, void *p);
   static void delete_StGlobalElectron(void *p);
   static void deleteArray_StGlobalElectron(void *p);
   static void destruct_StGlobalElectron(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StGlobalElectron*)
   {
      ::StGlobalElectron *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StGlobalElectron >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StGlobalElectron", ::StGlobalElectron::Class_Version(), ".sl64_gcc482/obj/StRoot/StSpinPool/StSpinTree/StGlobalElectron.h", 10,
                  typeid(::StGlobalElectron), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StGlobalElectron::Dictionary, isa_proxy, 4,
                  sizeof(::StGlobalElectron) );
      instance.SetNew(&new_StGlobalElectron);
      instance.SetNewArray(&newArray_StGlobalElectron);
      instance.SetDelete(&delete_StGlobalElectron);
      instance.SetDeleteArray(&deleteArray_StGlobalElectron);
      instance.SetDestructor(&destruct_StGlobalElectron);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StGlobalElectron*)
   {
      return GenerateInitInstanceLocal((::StGlobalElectron*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StGlobalElectron*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StPrimaryElectron_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StPrimaryElectron(void *p = 0);
   static void *newArray_StPrimaryElectron(Long_t size, void *p);
   static void delete_StPrimaryElectron(void *p);
   static void deleteArray_StPrimaryElectron(void *p);
   static void destruct_StPrimaryElectron(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StPrimaryElectron*)
   {
      ::StPrimaryElectron *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StPrimaryElectron >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StPrimaryElectron", ::StPrimaryElectron::Class_Version(), ".sl64_gcc482/obj/StRoot/StSpinPool/StSpinTree/StPrimaryElectron.h", 11,
                  typeid(::StPrimaryElectron), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StPrimaryElectron::Dictionary, isa_proxy, 4,
                  sizeof(::StPrimaryElectron) );
      instance.SetNew(&new_StPrimaryElectron);
      instance.SetNewArray(&newArray_StPrimaryElectron);
      instance.SetDelete(&delete_StPrimaryElectron);
      instance.SetDeleteArray(&deleteArray_StPrimaryElectron);
      instance.SetDestructor(&destruct_StPrimaryElectron);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StPrimaryElectron*)
   {
      return GenerateInitInstanceLocal((::StPrimaryElectron*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StPrimaryElectron*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TPi0Candidate_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TPi0Candidate(void *p = 0);
   static void *newArray_TPi0Candidate(Long_t size, void *p);
   static void delete_TPi0Candidate(void *p);
   static void deleteArray_TPi0Candidate(void *p);
   static void destruct_TPi0Candidate(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TPi0Candidate*)
   {
      ::TPi0Candidate *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TPi0Candidate >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TPi0Candidate", ::TPi0Candidate::Class_Version(), ".sl64_gcc482/obj/StRoot/StSpinPool/StSpinTree/TPi0Event.h", 16,
                  typeid(::TPi0Candidate), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TPi0Candidate::Dictionary, isa_proxy, 4,
                  sizeof(::TPi0Candidate) );
      instance.SetNew(&new_TPi0Candidate);
      instance.SetNewArray(&newArray_TPi0Candidate);
      instance.SetDelete(&delete_TPi0Candidate);
      instance.SetDeleteArray(&deleteArray_TPi0Candidate);
      instance.SetDestructor(&destruct_TPi0Candidate);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TPi0Candidate*)
   {
      return GenerateInitInstanceLocal((::TPi0Candidate*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPi0Candidate*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_THit(void *p = 0);
   static void *newArray_THit(Long_t size, void *p);
   static void delete_THit(void *p);
   static void deleteArray_THit(void *p);
   static void destruct_THit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THit*)
   {
      ::THit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THit", ::THit::Class_Version(), ".sl64_gcc482/obj/StRoot/StSpinPool/StSpinTree/TPi0Event.h", 94,
                  typeid(::THit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THit::Dictionary, isa_proxy, 4,
                  sizeof(::THit) );
      instance.SetNew(&new_THit);
      instance.SetNewArray(&newArray_THit);
      instance.SetDelete(&delete_THit);
      instance.SetDeleteArray(&deleteArray_THit);
      instance.SetDestructor(&destruct_THit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THit*)
   {
      return GenerateInitInstanceLocal((::THit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TMCPi0_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TMCPi0(void *p = 0);
   static void *newArray_TMCPi0(Long_t size, void *p);
   static void delete_TMCPi0(void *p);
   static void deleteArray_TMCPi0(void *p);
   static void destruct_TMCPi0(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TMCPi0*)
   {
      ::TMCPi0 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMCPi0 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMCPi0", ::TMCPi0::Class_Version(), ".sl64_gcc482/obj/StRoot/StSpinPool/StSpinTree/TPi0Event.h", 139,
                  typeid(::TMCPi0), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TMCPi0::Dictionary, isa_proxy, 4,
                  sizeof(::TMCPi0) );
      instance.SetNew(&new_TMCPi0);
      instance.SetNewArray(&newArray_TMCPi0);
      instance.SetDelete(&delete_TMCPi0);
      instance.SetDeleteArray(&deleteArray_TMCPi0);
      instance.SetDestructor(&destruct_TMCPi0);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TMCPi0*)
   {
      return GenerateInitInstanceLocal((::TMCPi0*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMCPi0*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TMCEta_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TMCEta(void *p = 0);
   static void *newArray_TMCEta(Long_t size, void *p);
   static void delete_TMCEta(void *p);
   static void deleteArray_TMCEta(void *p);
   static void destruct_TMCEta(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TMCEta*)
   {
      ::TMCEta *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMCEta >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMCEta", ::TMCEta::Class_Version(), ".sl64_gcc482/obj/StRoot/StSpinPool/StSpinTree/TPi0Event.h", 178,
                  typeid(::TMCEta), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TMCEta::Dictionary, isa_proxy, 4,
                  sizeof(::TMCEta) );
      instance.SetNew(&new_TMCEta);
      instance.SetNewArray(&newArray_TMCEta);
      instance.SetDelete(&delete_TMCEta);
      instance.SetDeleteArray(&deleteArray_TMCEta);
      instance.SetDestructor(&destruct_TMCEta);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TMCEta*)
   {
      return GenerateInitInstanceLocal((::TMCEta*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMCEta*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TPi0Event_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TPi0Event(void *p = 0);
   static void *newArray_TPi0Event(Long_t size, void *p);
   static void delete_TPi0Event(void *p);
   static void deleteArray_TPi0Event(void *p);
   static void destruct_TPi0Event(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TPi0Event*)
   {
      ::TPi0Event *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TPi0Event >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TPi0Event", ::TPi0Event::Class_Version(), ".sl64_gcc482/obj/StRoot/StSpinPool/StSpinTree/TPi0Event.h", 239,
                  typeid(::TPi0Event), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TPi0Event::Dictionary, isa_proxy, 4,
                  sizeof(::TPi0Event) );
      instance.SetNew(&new_TPi0Event);
      instance.SetNewArray(&newArray_TPi0Event);
      instance.SetDelete(&delete_TPi0Event);
      instance.SetDeleteArray(&deleteArray_TPi0Event);
      instance.SetDestructor(&destruct_TPi0Event);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TPi0Event*)
   {
      return GenerateInitInstanceLocal((::TPi0Event*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPi0Event*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StSpinTreeReader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StSpinTreeReader(void *p = 0);
   static void *newArray_StSpinTreeReader(Long_t size, void *p);
   static void delete_StSpinTreeReader(void *p);
   static void deleteArray_StSpinTreeReader(void *p);
   static void destruct_StSpinTreeReader(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StSpinTreeReader*)
   {
      ::StSpinTreeReader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StSpinTreeReader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StSpinTreeReader", ::StSpinTreeReader::Class_Version(), ".sl64_gcc482/obj/StRoot/StSpinPool/StSpinTree/StSpinTreeReader.h", 26,
                  typeid(::StSpinTreeReader), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StSpinTreeReader::Dictionary, isa_proxy, 4,
                  sizeof(::StSpinTreeReader) );
      instance.SetNew(&new_StSpinTreeReader);
      instance.SetNewArray(&newArray_StSpinTreeReader);
      instance.SetDelete(&delete_StSpinTreeReader);
      instance.SetDeleteArray(&deleteArray_StSpinTreeReader);
      instance.SetDestructor(&destruct_StSpinTreeReader);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StSpinTreeReader*)
   {
      return GenerateInitInstanceLocal((::StSpinTreeReader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StSpinTreeReader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr StGlobalElectron::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StGlobalElectron::Class_Name()
{
   return "StGlobalElectron";
}

//______________________________________________________________________________
const char *StGlobalElectron::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StGlobalElectron*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StGlobalElectron::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StGlobalElectron*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StGlobalElectron::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StGlobalElectron*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StGlobalElectron::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StGlobalElectron*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StPrimaryElectron::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StPrimaryElectron::Class_Name()
{
   return "StPrimaryElectron";
}

//______________________________________________________________________________
const char *StPrimaryElectron::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StPrimaryElectron*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StPrimaryElectron::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StPrimaryElectron*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StPrimaryElectron::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StPrimaryElectron*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StPrimaryElectron::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StPrimaryElectron*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TPi0Candidate::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TPi0Candidate::Class_Name()
{
   return "TPi0Candidate";
}

//______________________________________________________________________________
const char *TPi0Candidate::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TPi0Candidate*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPi0Candidate::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TPi0Candidate*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPi0Candidate::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TPi0Candidate*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPi0Candidate::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TPi0Candidate*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THit::Class_Name()
{
   return "THit";
}

//______________________________________________________________________________
const char *THit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TMCPi0::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TMCPi0::Class_Name()
{
   return "TMCPi0";
}

//______________________________________________________________________________
const char *TMCPi0::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TMCPi0*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMCPi0::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TMCPi0*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMCPi0::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TMCPi0*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMCPi0::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TMCPi0*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TMCEta::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TMCEta::Class_Name()
{
   return "TMCEta";
}

//______________________________________________________________________________
const char *TMCEta::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TMCEta*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMCEta::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TMCEta*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMCEta::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TMCEta*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMCEta::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TMCEta*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TPi0Event::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TPi0Event::Class_Name()
{
   return "TPi0Event";
}

//______________________________________________________________________________
const char *TPi0Event::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TPi0Event*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPi0Event::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TPi0Event*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPi0Event::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TPi0Event*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPi0Event::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TPi0Event*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StSpinTreeReader::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StSpinTreeReader::Class_Name()
{
   return "StSpinTreeReader";
}

//______________________________________________________________________________
const char *StSpinTreeReader::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StSpinTreeReader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StSpinTreeReader::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StSpinTreeReader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StSpinTreeReader::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StSpinTreeReader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StSpinTreeReader::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StSpinTreeReader*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void StGlobalElectron::Streamer(TBuffer &R__b)
{
   // Stream an object of class StGlobalElectron.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StGlobalElectron::Class(),this);
   } else {
      R__b.WriteClassBuffer(StGlobalElectron::Class(),this);
   }
}

//______________________________________________________________________________
void StGlobalElectron::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StGlobalElectron.
      TClass *R__cl = ::StGlobalElectron::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEdx", &dEdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEdxSigmaElectron", &dEdxSigmaElectron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PGlobal", &PGlobal);
      R__insp.InspectMember(PGlobal, "PGlobal.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OGlobal", &OGlobal);
      R__insp.InspectMember(OGlobal, "OGlobal.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DCAGlobal", &DCAGlobal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chi2", &Chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHitsFit", &NHitsFit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NdEdxPts", &NdEdxPts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NMaxPts", &NMaxPts);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StGlobalElectron(void *p) {
      return  p ? new(p) ::StGlobalElectron : new ::StGlobalElectron;
   }
   static void *newArray_StGlobalElectron(Long_t nElements, void *p) {
      return p ? new(p) ::StGlobalElectron[nElements] : new ::StGlobalElectron[nElements];
   }
   // Wrapper around operator delete
   static void delete_StGlobalElectron(void *p) {
      delete ((::StGlobalElectron*)p);
   }
   static void deleteArray_StGlobalElectron(void *p) {
      delete [] ((::StGlobalElectron*)p);
   }
   static void destruct_StGlobalElectron(void *p) {
      typedef ::StGlobalElectron current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StGlobalElectron

//______________________________________________________________________________
void StPrimaryElectron::Streamer(TBuffer &R__b)
{
   // Stream an object of class StPrimaryElectron.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StPrimaryElectron::Class(),this);
   } else {
      R__b.WriteClassBuffer(StPrimaryElectron::Class(),this);
   }
}

//______________________________________________________________________________
void StPrimaryElectron::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StPrimaryElectron.
      TClass *R__cl = ::StPrimaryElectron::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEdx", &dEdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEdxSigmaElectron", &dEdxSigmaElectron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "P", &P);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DCA", &DCA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eta", &Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Phi", &Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pt", &Pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DCAGlobal", &DCAGlobal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chi2", &Chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHitsFit", &NHitsFit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NdEdxPts", &NdEdxPts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NMaxPts", &NMaxPts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProjEta", &ProjEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProjPhi", &ProjPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProjZ", &ProjZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PointEta", &PointEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PointPhi", &PointPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PointZ", &PointZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E", &E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "POverE", &POverE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEtaStrips", &NEtaStrips);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NPhiStrips", &NPhiStrips);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NTowers", &NTowers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ZDist", &ZDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EtaDist", &EtaDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PhiDist", &PhiDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R", &R);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NPoints", &NPoints);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PointNTracks", &PointNTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mGlobalRef", &mGlobalRef);
      R__insp.InspectMember(mGlobalRef, "mGlobalRef.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StPrimaryElectron(void *p) {
      return  p ? new(p) ::StPrimaryElectron : new ::StPrimaryElectron;
   }
   static void *newArray_StPrimaryElectron(Long_t nElements, void *p) {
      return p ? new(p) ::StPrimaryElectron[nElements] : new ::StPrimaryElectron[nElements];
   }
   // Wrapper around operator delete
   static void delete_StPrimaryElectron(void *p) {
      delete ((::StPrimaryElectron*)p);
   }
   static void deleteArray_StPrimaryElectron(void *p) {
      delete [] ((::StPrimaryElectron*)p);
   }
   static void destruct_StPrimaryElectron(void *p) {
      typedef ::StPrimaryElectron current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StPrimaryElectron

//______________________________________________________________________________
void StSpinTreeReader::Streamer(TBuffer &R__b)
{
   // Stream an object of class StSpinTreeReader.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StSpinTreeReader::Class(),this);
   } else {
      R__b.WriteClassBuffer(StSpinTreeReader::Class(),this);
   }
}

//______________________________________________________________________________
void StSpinTreeReader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StSpinTreeReader.
      TClass *R__cl = ::StSpinTreeReader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "connectJets", &connectJets);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "connectNeutralJets", &connectNeutralJets);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "connectChargedPions", &connectChargedPions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "connectBemcPions", &connectBemcPions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "connectBemcElectrons", &connectBemcElectrons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "connectEemcPions", &connectEemcPions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "requireDidFire", &requireDidFire);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "requireShouldFire", &requireShouldFire);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mEvent", &mEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mConeJets", &mConeJets);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mConeJetsEMC", &mConeJetsEMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mChargedPions", &mChargedPions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mBemcPions", &mBemcPions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mBemcElectrons", &mBemcElectrons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mBemcGlobalElectrons", &mBemcGlobalElectrons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mEemcPions", &mEemcPions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mFileList", (void*)&mFileList);
      R__insp.InspectMember("map<int,std::string>", (void*)&mFileList, "mFileList.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRunList", (void*)&mRunList);
      R__insp.InspectMember("set<int>", (void*)&mRunList, "mRunList.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTriggerList", (void*)&mTriggerList);
      R__insp.InspectMember("set<int>", (void*)&mTriggerList, "mTriggerList.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mChain", &mChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mEventList", &mEventList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mChainConeJets", &mChainConeJets);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mChainConeJetsEMC", &mChainConeJetsEMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mChainChargedPions", &mChainChargedPions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mChainBemcPions", &mChainBemcPions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mChainBemcElectrons", &mChainBemcElectrons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mChainEemcPions", &mChainEemcPions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCurrentFileName", (void*)&mCurrentFileName);
      R__insp.InspectMember("string", (void*)&mCurrentFileName, "mCurrentFileName.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mIsConnected", &mIsConnected);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StSpinTreeReader(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StSpinTreeReader : new ::StSpinTreeReader;
   }
   static void *newArray_StSpinTreeReader(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StSpinTreeReader[nElements] : new ::StSpinTreeReader[nElements];
   }
   // Wrapper around operator delete
   static void delete_StSpinTreeReader(void *p) {
      delete ((::StSpinTreeReader*)p);
   }
   static void deleteArray_StSpinTreeReader(void *p) {
      delete [] ((::StSpinTreeReader*)p);
   }
   static void destruct_StSpinTreeReader(void *p) {
      typedef ::StSpinTreeReader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StSpinTreeReader

//______________________________________________________________________________
void TPi0Candidate::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPi0Candidate.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TPi0Candidate::Class(),this);
   } else {
      R__b.WriteClassBuffer(TPi0Candidate::Class(),this);
   }
}

//______________________________________________________________________________
void TPi0Candidate::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TPi0Candidate.
      TClass *R__cl = ::TPi0Candidate::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Pt", &m_Pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Mass", &m_Mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Eta", &m_Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Phi", &m_Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Asymmetry", &m_Asymmetry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_CosAngle", &m_CosAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Distance", &m_Distance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_TowerId1", &m_TowerId1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_TowerId2", &m_TowerId2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_ChargedAssociation1", &m_ChargedAssociation1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_ChargedAssociation2", &m_ChargedAssociation2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_SMDFlagg1", &m_SMDFlagg1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_SMDFlagg2", &m_SMDFlagg2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Energy1", &m_Energy1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Energy2", &m_Energy2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_TowerEnergy1", &m_TowerEnergy1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_TowerEnergy2", &m_TowerEnergy2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_SMDe1", &m_SMDe1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_SMDp1", &m_SMDp1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_SMDe2", &m_SMDe2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_SMDp2", &m_SMDp2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Phi1", &m_Phi1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Eta1", &m_Eta1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Phi2", &m_Phi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Eta2", &m_Eta2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_SizeSMDe1", &m_SizeSMDe1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_SizeSMDp1", &m_SizeSMDp1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_SizeTower1", &m_SizeTower1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_SizeSMDe2", &m_SizeSMDe2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_SizeSMDp2", &m_SizeSMDp2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_SizeTower2", &m_SizeTower2);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TPi0Candidate(void *p) {
      return  p ? new(p) ::TPi0Candidate : new ::TPi0Candidate;
   }
   static void *newArray_TPi0Candidate(Long_t nElements, void *p) {
      return p ? new(p) ::TPi0Candidate[nElements] : new ::TPi0Candidate[nElements];
   }
   // Wrapper around operator delete
   static void delete_TPi0Candidate(void *p) {
      delete ((::TPi0Candidate*)p);
   }
   static void deleteArray_TPi0Candidate(void *p) {
      delete [] ((::TPi0Candidate*)p);
   }
   static void destruct_TPi0Candidate(void *p) {
      typedef ::TPi0Candidate current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TPi0Candidate

//______________________________________________________________________________
void THit::Streamer(TBuffer &R__b)
{
   // Stream an object of class THit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THit::Class(),this);
   } else {
      R__b.WriteClassBuffer(THit::Class(),this);
   }
}

//______________________________________________________________________________
void THit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THit.
      TClass *R__cl = ::THit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_X", &m_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Y", &m_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Z", &m_Z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Id", &m_Id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Energy", &m_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Pt", &m_Pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_NTracks", &m_NTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_SMDFlag", &m_SMDFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_EnergySMDe", &m_EnergySMDe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_EnergySMDp", &m_EnergySMDp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_EnergyTower", &m_EnergyTower);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_SizeSMDe", &m_SizeSMDe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_SizeSMDp", &m_SizeSMDp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_SizeTower", &m_SizeTower);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Phi", &m_Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Eta", &m_Eta);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_THit(void *p) {
      return  p ? new(p) ::THit : new ::THit;
   }
   static void *newArray_THit(Long_t nElements, void *p) {
      return p ? new(p) ::THit[nElements] : new ::THit[nElements];
   }
   // Wrapper around operator delete
   static void delete_THit(void *p) {
      delete ((::THit*)p);
   }
   static void deleteArray_THit(void *p) {
      delete [] ((::THit*)p);
   }
   static void destruct_THit(void *p) {
      typedef ::THit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THit

//______________________________________________________________________________
void TMCPi0::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMCPi0.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TMCPi0::Class(),this);
   } else {
      R__b.WriteClassBuffer(TMCPi0::Class(),this);
   }
}

//______________________________________________________________________________
void TMCPi0::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TMCPi0.
      TClass *R__cl = ::TMCPi0::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Pt", &m_Pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Eta", &m_Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Phi", &m_Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Energy1", &m_Energy1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Energy2", &m_Energy2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_TowerId1", &m_TowerId1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_TowerId2", &m_TowerId2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Phi1", &m_Phi1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Eta1", &m_Eta1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Phi2", &m_Phi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Eta2", &m_Eta2);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TMCPi0(void *p) {
      return  p ? new(p) ::TMCPi0 : new ::TMCPi0;
   }
   static void *newArray_TMCPi0(Long_t nElements, void *p) {
      return p ? new(p) ::TMCPi0[nElements] : new ::TMCPi0[nElements];
   }
   // Wrapper around operator delete
   static void delete_TMCPi0(void *p) {
      delete ((::TMCPi0*)p);
   }
   static void deleteArray_TMCPi0(void *p) {
      delete [] ((::TMCPi0*)p);
   }
   static void destruct_TMCPi0(void *p) {
      typedef ::TMCPi0 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TMCPi0

//______________________________________________________________________________
void TMCEta::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMCEta.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TMCEta::Class(),this);
   } else {
      R__b.WriteClassBuffer(TMCEta::Class(),this);
   }
}

//______________________________________________________________________________
void TMCEta::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TMCEta.
      TClass *R__cl = ::TMCEta::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Pt", &m_Pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Eta", &m_Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Phi", &m_Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_DecayMode", &m_DecayMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Energy1", &m_Energy1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Energy2", &m_Energy2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_TowerId1", &m_TowerId1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_TowerId2", &m_TowerId2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Phi1", &m_Phi1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Eta1", &m_Eta1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Phi2", &m_Phi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Eta2", &m_Eta2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Pi01Pt", &m_Pi01Pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Pi01Eta", &m_Pi01Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Pi01Phi", &m_Pi01Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Pi02Pt", &m_Pi02Pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Pi02Eta", &m_Pi02Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Pi02Phi", &m_Pi02Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Pi03Pt", &m_Pi03Pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Pi03Eta", &m_Pi03Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Pi03Phi", &m_Pi03Phi);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TMCEta(void *p) {
      return  p ? new(p) ::TMCEta : new ::TMCEta;
   }
   static void *newArray_TMCEta(Long_t nElements, void *p) {
      return p ? new(p) ::TMCEta[nElements] : new ::TMCEta[nElements];
   }
   // Wrapper around operator delete
   static void delete_TMCEta(void *p) {
      delete ((::TMCEta*)p);
   }
   static void deleteArray_TMCEta(void *p) {
      delete [] ((::TMCEta*)p);
   }
   static void destruct_TMCEta(void *p) {
      typedef ::TMCEta current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TMCEta

//______________________________________________________________________________
void TPi0Event::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPi0Event.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TPi0Event::Class(),this);
   } else {
      R__b.WriteClassBuffer(TPi0Event::Class(),this);
   }
}

//______________________________________________________________________________
void TPi0Event::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TPi0Event.
      TClass *R__cl = ::TPi0Event::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_EventNo", &m_EventNo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_RunNo", &m_RunNo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_FillNo", &m_FillNo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_VertexX", &m_VertexX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_VertexY", &m_VertexY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_VertexZ", &m_VertexZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_IsMB", &m_IsMB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_IsHTTPF", &m_IsHTTPF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_IsHTTPL2", &m_IsHTTPL2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_IsHTTPL2_Test", &m_IsHTTPL2_Test);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_IsHT2", &m_IsHT2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_IsJP1", &m_IsJP1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_HiTowerAdc6Bit", &m_HiTowerAdc6Bit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_BEMCPoints", &m_BEMCPoints);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_ChargedPtSum", &m_ChargedPtSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_NeutralEnergy", &m_NeutralEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_PrescaleMB", &m_PrescaleMB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_PrescaleHTTPF", &m_PrescaleHTTPF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_PrescaleHTTPL2", &m_PrescaleHTTPL2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_PrescaleHTTPL2_Test", &m_PrescaleHTTPL2_Test);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_PrescaleHT2", &m_PrescaleHT2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_PrescaleJP1", &m_PrescaleJP1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_BBCTrig", &m_BBCTrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_MCVertexZ", &m_MCVertexZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Accept", &m_Accept);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_IsSimu", &m_IsSimu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_NPi0Candidates", &m_NPi0Candidates);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_NMCPi0s", &m_NMCPi0s);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_NMCEtas", &m_NMCEtas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_TriggerTower", &m_TriggerTower);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_HighestPi0MCPt", &m_HighestPi0MCPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_BunchX48", &m_BunchX48);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_BunchX7", &m_BunchX7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_SpinBit4", &m_SpinBit4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_MaskedXing", &m_MaskedXing);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_ValidSpin", &m_ValidSpin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_PolLong", &m_PolLong);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_DbSpinBit", &m_DbSpinBit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_relLum[3]", m_relLum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_lumErr[3]", m_lumErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_NHits", &m_NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_BBCVertexZ", &m_BBCVertexZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_OnlyBBCVtx", &m_OnlyBBCVtx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_PythiaPartPt", &m_PythiaPartPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_PythiaX1", &m_PythiaX1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_PythiaX2", &m_PythiaX2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_BBCTimeBin", &m_BBCTimeBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_isBackground", &m_isBackground);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_BackgroundTowers", (void*)&m_BackgroundTowers);
      R__insp.InspectMember("vector<int>", (void*)&m_BackgroundTowers, "m_BackgroundTowers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_Pi0Candidates", &m_Pi0Candidates);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_MCPi0s", &m_MCPi0s);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_MCEtas", &m_MCEtas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_Hits", &m_Hits);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TPi0Event(void *p) {
      return  p ? new(p) ::TPi0Event : new ::TPi0Event;
   }
   static void *newArray_TPi0Event(Long_t nElements, void *p) {
      return p ? new(p) ::TPi0Event[nElements] : new ::TPi0Event[nElements];
   }
   // Wrapper around operator delete
   static void delete_TPi0Event(void *p) {
      delete ((::TPi0Event*)p);
   }
   static void deleteArray_TPi0Event(void *p) {
      delete [] ((::TPi0Event*)p);
   }
   static void destruct_TPi0Event(void *p) {
      typedef ::TPi0Event current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TPi0Event

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

/********************************************************
* .sl64_gcc482/obj/StRoot/StSpinPool/StSpinTree/StSpinTree_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableStSpinTree_Cint();

extern "C" void G__set_cpp_environmentStSpinTree_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("StGlobalElectron.h");
  G__add_compiledheader("StPrimaryElectron.h");
  G__add_compiledheader("StSpinTreeReader.h");
  G__add_compiledheader("TPi0Event.h");
  G__cpp_reset_tagtableStSpinTree_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevStSpinTree_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* StGlobalElectron */
static int G__StSpinTree_Cint_170_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StGlobalElectron* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StGlobalElectron[n];
     } else {
       p = new((void*) gvp) StGlobalElectron[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StGlobalElectron;
     } else {
       p = new((void*) gvp) StGlobalElectron;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StSpinTree_CintLN_StGlobalElectron));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StGlobalElectron* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StGlobalElectron(*(StGlobalElectron*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StGlobalElectron(*(StGlobalElectron*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StSpinTree_CintLN_StGlobalElectron));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 99, (long) ((const StGlobalElectron*) G__getstructoffset())->charge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StGlobalElectron*) G__getstructoffset())->getdEdx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StGlobalElectron*) G__getstructoffset())->getdEdxSigmaElectron());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StGlobalElectron*) G__getstructoffset())->p());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StGlobalElectron*) G__getstructoffset())->eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StGlobalElectron*) G__getstructoffset())->phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StGlobalElectron*) G__getstructoffset())->pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVectorF* pobj;
         const StThreeVectorF xobj = ((const StGlobalElectron*) G__getstructoffset())->pGlobal();
         pobj = new StThreeVectorF(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVectorF* pobj;
         const StThreeVectorF xobj = ((const StGlobalElectron*) G__getstructoffset())->oGlobal();
         pobj = new StThreeVectorF(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StGlobalElectron*) G__getstructoffset())->dcaGlobal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StGlobalElectron*) G__getstructoffset())->chi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StGlobalElectron*) G__getstructoffset())->nHitsFit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StGlobalElectron*) G__getstructoffset())->ndEdxPts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StGlobalElectron*) G__getstructoffset())->nMaxPts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StGlobalElectron*) G__getstructoffset())->setAll((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StGlobalElectron*) G__getstructoffset())->setCharge((Char_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StGlobalElectron*) G__getstructoffset())->setdEdx((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StGlobalElectron*) G__getstructoffset())->setdEdxSigmaElectron((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StGlobalElectron*) G__getstructoffset())->setPGlobal(*((StThreeVectorF*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StGlobalElectron*) G__getstructoffset())->setPGlobal((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StGlobalElectron*) G__getstructoffset())->setOGlobal(*((StThreeVectorF*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StGlobalElectron*) G__getstructoffset())->setOGlobal((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StGlobalElectron*) G__getstructoffset())->setDCAGlobal((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StGlobalElectron*) G__getstructoffset())->setChi2((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StGlobalElectron*) G__getstructoffset())->setNHitsFit((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StGlobalElectron*) G__getstructoffset())->setNdEdxPts((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StGlobalElectron*) G__getstructoffset())->setNMaxPts((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StGlobalElectron::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StGlobalElectron::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StGlobalElectron::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StGlobalElectron::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StGlobalElectron*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StGlobalElectron::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StGlobalElectron::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StGlobalElectron::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_170_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StGlobalElectron::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StGlobalElectron G__TStGlobalElectron;
static int G__StSpinTree_Cint_170_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StGlobalElectron*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StGlobalElectron*) (soff+(sizeof(StGlobalElectron)*i)))->~G__TStGlobalElectron();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StGlobalElectron*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StGlobalElectron*) (soff))->~G__TStGlobalElectron();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StSpinTree_Cint_170_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StGlobalElectron* dest = (StGlobalElectron*) G__getstructoffset();
   *dest = *(StGlobalElectron*) libp->para[0].ref;
   const StGlobalElectron& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StPrimaryElectron */
static int G__StSpinTree_Cint_175_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StPrimaryElectron* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StPrimaryElectron[n];
     } else {
       p = new((void*) gvp) StPrimaryElectron[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StPrimaryElectron;
     } else {
       p = new((void*) gvp) StPrimaryElectron;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StSpinTree_CintLN_StPrimaryElectron));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StPrimaryElectron* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StPrimaryElectron(*(StPrimaryElectron*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StPrimaryElectron(*(StPrimaryElectron*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StSpinTree_CintLN_StPrimaryElectron));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StPrimaryElectron*) G__getstructoffset())->global());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setGlobal((StGlobalElectron*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 99, (long) ((const StPrimaryElectron*) G__getstructoffset())->charge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StPrimaryElectron*) G__getstructoffset())->getdEdx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StPrimaryElectron*) G__getstructoffset())->getdEdxSigmaElectron());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StPrimaryElectron*) G__getstructoffset())->p());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StPrimaryElectron*) G__getstructoffset())->dca());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StPrimaryElectron*) G__getstructoffset())->eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StPrimaryElectron*) G__getstructoffset())->phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StPrimaryElectron*) G__getstructoffset())->pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StPrimaryElectron*) G__getstructoffset())->dcaGlobal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StPrimaryElectron*) G__getstructoffset())->chi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StPrimaryElectron*) G__getstructoffset())->nHitsFit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StPrimaryElectron*) G__getstructoffset())->ndEdxPts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StPrimaryElectron*) G__getstructoffset())->nMaxPts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StPrimaryElectron*) G__getstructoffset())->projEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StPrimaryElectron*) G__getstructoffset())->projPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StPrimaryElectron*) G__getstructoffset())->projZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StPrimaryElectron*) G__getstructoffset())->pointEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StPrimaryElectron*) G__getstructoffset())->pointPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StPrimaryElectron*) G__getstructoffset())->pointZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StPrimaryElectron*) G__getstructoffset())->e());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StPrimaryElectron*) G__getstructoffset())->pOverE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StPrimaryElectron*) G__getstructoffset())->nEtaStrips());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StPrimaryElectron*) G__getstructoffset())->nPhiStrips());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StPrimaryElectron*) G__getstructoffset())->nTowers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StPrimaryElectron*) G__getstructoffset())->zDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StPrimaryElectron*) G__getstructoffset())->etaDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StPrimaryElectron*) G__getstructoffset())->phiDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StPrimaryElectron*) G__getstructoffset())->nPoints());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StPrimaryElectron*) G__getstructoffset())->pointNTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRef* pobj;
         const TRef xobj = ((const StPrimaryElectron*) G__getstructoffset())->globalRef();
         pobj = new TRef(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setAll((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setCharge((Char_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setdEdx((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setdEdxSigmaElectron((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setP((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setDCA((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setEta((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setPhi((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setPt((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setDCAGlobal((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setChi2((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setNHitsFit((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setNdEdxPts((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setNMaxPts((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setProjEta((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setProjPhi((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setProjZ((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setPointEta((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setPointPhi((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setPointZ((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setE((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setPOverE((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setNEtaStrips((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setNPhiStrips((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setNTowers((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setZDist((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setEtaDist((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setPhiDist((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setNPoints((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->setPointNTracks((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StPrimaryElectron::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StPrimaryElectron::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StPrimaryElectron::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StPrimaryElectron::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPrimaryElectron*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StPrimaryElectron::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StPrimaryElectron::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StPrimaryElectron::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_175_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StPrimaryElectron::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StPrimaryElectron G__TStPrimaryElectron;
static int G__StSpinTree_Cint_175_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StPrimaryElectron*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StPrimaryElectron*) (soff+(sizeof(StPrimaryElectron)*i)))->~G__TStPrimaryElectron();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StPrimaryElectron*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StPrimaryElectron*) (soff))->~G__TStPrimaryElectron();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StSpinTree_Cint_175_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StPrimaryElectron* dest = (StPrimaryElectron*) G__getstructoffset();
   *dest = *(StPrimaryElectron*) libp->para[0].ref;
   const StPrimaryElectron& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPi0Candidate */
static int G__StSpinTree_Cint_645_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPi0Candidate* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPi0Candidate[n];
     } else {
       p = new((void*) gvp) TPi0Candidate[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPi0Candidate;
     } else {
       p = new((void*) gvp) TPi0Candidate;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StSpinTree_CintLN_TPi0Candidate));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPi0Candidate* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TPi0Candidate(*(TPi0Candidate*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TPi0Candidate(*(TPi0Candidate*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StSpinTree_CintLN_TPi0Candidate));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->Pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->Mass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->Eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->Asymmetry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->CosAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->Distance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->TowerId1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->TowerId2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Candidate*) G__getstructoffset())->ChargedAssociation1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Candidate*) G__getstructoffset())->ChargedAssociation2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Candidate*) G__getstructoffset())->SMDFlagg1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Candidate*) G__getstructoffset())->SMDFlagg2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->Energy1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->Energy2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->TowerEnergy1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->TowerEnergy2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->SMDe1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->SMDp1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->SMDe2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->SMDp2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->Phi1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->Eta1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->Phi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->Eta2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->SizeSMDe1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->SizeSMDp1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->SizeTower1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->SizeSMDe2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->SizeSMDp2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Candidate*) G__getstructoffset())->SizeTower2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Candidate*) G__getstructoffset())->SetAll((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPi0Candidate::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPi0Candidate::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TPi0Candidate::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPi0Candidate::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Candidate*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPi0Candidate::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPi0Candidate::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPi0Candidate::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_645_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPi0Candidate::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPi0Candidate G__TTPi0Candidate;
static int G__StSpinTree_Cint_645_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPi0Candidate*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPi0Candidate*) (soff+(sizeof(TPi0Candidate)*i)))->~G__TTPi0Candidate();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPi0Candidate*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPi0Candidate*) (soff))->~G__TTPi0Candidate();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StSpinTree_Cint_645_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPi0Candidate* dest = (TPi0Candidate*) G__getstructoffset();
   *dest = *(TPi0Candidate*) libp->para[0].ref;
   const TPi0Candidate& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THit */
static int G__StSpinTree_Cint_646_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THit[n];
     } else {
       p = new((void*) gvp) THit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THit;
     } else {
       p = new((void*) gvp) THit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StSpinTree_CintLN_THit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THit(*(THit*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) THit(*(THit*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StSpinTree_CintLN_THit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THit*) G__getstructoffset())->X());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THit*) G__getstructoffset())->Y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THit*) G__getstructoffset())->Z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THit*) G__getstructoffset())->Id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THit*) G__getstructoffset())->Energy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THit*) G__getstructoffset())->Pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THit*) G__getstructoffset())->NTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THit*) G__getstructoffset())->SMDFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THit*) G__getstructoffset())->EnergySMDe());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THit*) G__getstructoffset())->EnergySMDp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THit*) G__getstructoffset())->EnergyTower());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THit*) G__getstructoffset())->SizeSMDe());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THit*) G__getstructoffset())->SizeSMDp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THit*) G__getstructoffset())->SizeTower());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THit*) G__getstructoffset())->Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THit*) G__getstructoffset())->Eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THit*) G__getstructoffset())->SetAll((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_646_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THit G__TTHit;
static int G__StSpinTree_Cint_646_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THit*) (soff+(sizeof(THit)*i)))->~G__TTHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THit*) (soff))->~G__TTHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StSpinTree_Cint_646_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THit* dest = (THit*) G__getstructoffset();
   *dest = *(THit*) libp->para[0].ref;
   const THit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMCPi0 */
static int G__StSpinTree_Cint_647_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCPi0* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMCPi0[n];
     } else {
       p = new((void*) gvp) TMCPi0[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMCPi0;
     } else {
       p = new((void*) gvp) TMCPi0;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StSpinTree_CintLN_TMCPi0));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_647_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCPi0* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TMCPi0(*(TMCPi0*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TMCPi0(*(TMCPi0*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StSpinTree_CintLN_TMCPi0));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_647_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCPi0*) G__getstructoffset())->Pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_647_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCPi0*) G__getstructoffset())->Eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_647_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCPi0*) G__getstructoffset())->Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_647_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCPi0*) G__getstructoffset())->Energy1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_647_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCPi0*) G__getstructoffset())->Energy2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_647_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCPi0*) G__getstructoffset())->TowerId1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_647_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCPi0*) G__getstructoffset())->TowerId2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_647_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCPi0*) G__getstructoffset())->Phi1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_647_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCPi0*) G__getstructoffset())->Eta1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_647_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCPi0*) G__getstructoffset())->Phi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_647_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCPi0*) G__getstructoffset())->Eta2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_647_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCPi0*) G__getstructoffset())->SetAll((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_647_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMCPi0::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_647_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCPi0::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_647_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMCPi0::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_647_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMCPi0::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_647_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCPi0*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_647_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCPi0::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_647_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCPi0::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_647_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCPi0::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_647_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCPi0::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMCPi0 G__TTMCPi0;
static int G__StSpinTree_Cint_647_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMCPi0*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMCPi0*) (soff+(sizeof(TMCPi0)*i)))->~G__TTMCPi0();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMCPi0*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMCPi0*) (soff))->~G__TTMCPi0();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StSpinTree_Cint_647_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCPi0* dest = (TMCPi0*) G__getstructoffset();
   *dest = *(TMCPi0*) libp->para[0].ref;
   const TMCPi0& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMCEta */
static int G__StSpinTree_Cint_648_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCEta* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMCEta[n];
     } else {
       p = new((void*) gvp) TMCEta[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMCEta;
     } else {
       p = new((void*) gvp) TMCEta;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StSpinTree_CintLN_TMCEta));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCEta* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TMCEta(*(TMCEta*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TMCEta(*(TMCEta*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StSpinTree_CintLN_TMCEta));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCEta*) G__getstructoffset())->Pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCEta*) G__getstructoffset())->Eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCEta*) G__getstructoffset())->Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TMCEta*) G__getstructoffset())->DecayMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCEta*) G__getstructoffset())->Energy1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCEta*) G__getstructoffset())->Energy2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCEta*) G__getstructoffset())->TowerId1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCEta*) G__getstructoffset())->TowerId2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCEta*) G__getstructoffset())->Phi1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCEta*) G__getstructoffset())->Eta1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCEta*) G__getstructoffset())->Phi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCEta*) G__getstructoffset())->Eta2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCEta*) G__getstructoffset())->Pi01Pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCEta*) G__getstructoffset())->Pi01Eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCEta*) G__getstructoffset())->Pi01Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCEta*) G__getstructoffset())->Pi02Pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCEta*) G__getstructoffset())->Pi02Eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCEta*) G__getstructoffset())->Pi02Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCEta*) G__getstructoffset())->Pi03Pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCEta*) G__getstructoffset())->Pi03Eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TMCEta*) G__getstructoffset())->Pi03Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCEta*) G__getstructoffset())->SetAll((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMCEta::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCEta::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMCEta::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMCEta::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCEta*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCEta::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCEta::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCEta::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_648_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCEta::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMCEta G__TTMCEta;
static int G__StSpinTree_Cint_648_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMCEta*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMCEta*) (soff+(sizeof(TMCEta)*i)))->~G__TTMCEta();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMCEta*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMCEta*) (soff))->~G__TTMCEta();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StSpinTree_Cint_648_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCEta* dest = (TMCEta*) G__getstructoffset();
   *dest = *(TMCEta*) libp->para[0].ref;
   const TMCEta& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPi0Event */
static int G__StSpinTree_Cint_649_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPi0Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPi0Event[n];
     } else {
       p = new((void*) gvp) TPi0Event[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPi0Event;
     } else {
       p = new((void*) gvp) TPi0Event;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StSpinTree_CintLN_TPi0Event));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      TPi0Event::Reset((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      TPi0Event::Reset();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->EventNo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->RunNo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->FillNo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Event*) G__getstructoffset())->VertexX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Event*) G__getstructoffset())->VertexY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Event*) G__getstructoffset())->VertexZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->IsMB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->IsHTTPF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->IsHTTPL2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->IsHTTPL2_Test());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->IsHT2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->IsJP1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->HiTowerAdc6Bit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->BEMCPoints());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Event*) G__getstructoffset())->ChargedPtSum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Event*) G__getstructoffset())->NeutralEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->PrescaleMB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->PrescaleHTTPF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->PrescaleHTTPL2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->PrescaleHTTPL2_Test());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->PrescaleHT2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->PrescaleJP1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->BBCTrig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->IsSimulation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Event*) G__getstructoffset())->MCVertexZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->IsAccepted());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->NPi0Candidates());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->NMCPi0s());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->NMCEtas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->TriggerTower());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Event*) G__getstructoffset())->HighestPi0MCPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->BunchX48());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->BunchX7());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->SpinBit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->MaskedXing());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->ValidSpin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->PolLong());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->DbSpinBit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Event*) G__getstructoffset())->RelLumUpUp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Event*) G__getstructoffset())->LumErrorUpUp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Event*) G__getstructoffset())->RelLumUpDown());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Event*) G__getstructoffset())->LumErrorUpDown());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Event*) G__getstructoffset())->RelLumDownUp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Event*) G__getstructoffset())->LumErrorDownUp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->NHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Event*) G__getstructoffset())->BBCVertexZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->OnlyBBCVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Event*) G__getstructoffset())->PythiaPartPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Event*) G__getstructoffset())->PythiaX1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Event*) G__getstructoffset())->PythiaX2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPi0Event*) G__getstructoffset())->BBCTimeBin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->IsBackground());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->NumberOfBackgroundTowers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPi0Event*) G__getstructoffset())->BackgroundTower((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TPi0Event*) G__getstructoffset())->Pi0Candidates());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TPi0Event*) G__getstructoffset())->Pi0Candidate((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TPi0Event*) G__getstructoffset())->MCPi0s());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TPi0Event*) G__getstructoffset())->MCPi0((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TPi0Event*) G__getstructoffset())->MCEtas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TPi0Event*) G__getstructoffset())->MCEta((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TPi0Event*) G__getstructoffset())->Hits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TPi0Event*) G__getstructoffset())->Hit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetEventNo((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetRunNo((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetFillNo((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetVertex((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetTriggers((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetPrescales((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetHiTowerAdc6Bit((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetBEMCPoints((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetChargedPtSum((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetNeutralEnergy((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetBBCTrig((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetSimulation((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetMCVertexZ((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TPi0Event*) G__getstructoffset())->Accept((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TPi0Event*) G__getstructoffset())->Accept();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetTriggerTower((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SeHighestPi0MCPt((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetBunchX48((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetBunchX7((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetSpinBit((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetMaskedXing((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetValidSpin((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetPolLong((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetDbSpinBit((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetRelLum((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetLumError((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetBBCVertexZ((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TPi0Event*) G__getstructoffset())->SetOnlyBBCVertex((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TPi0Event*) G__getstructoffset())->SetOnlyBBCVertex();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetPythiaPartPt((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetPythiaX1((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetPythiaX2((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetBBCTimeBin((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->SetBackground((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->AddBackgroundTower((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TPi0Event*) G__getstructoffset())->AddPi0Candidate(*(TPi0Candidate*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TPi0Event*) G__getstructoffset())->AddMCPi0(*(TMCPi0*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TPi0Event*) G__getstructoffset())->AddMCEta(*(TMCEta*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TPi0Event*) G__getstructoffset())->AddHit(*(THit*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPi0Event::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPi0Event::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TPi0Event::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPi0Event::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPi0Event*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPi0Event::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPi0Event::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPi0Event::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_649_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPi0Event::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StSpinTree_Cint_649_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TPi0Event* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TPi0Event(*(TPi0Event*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StSpinTree_CintLN_TPi0Event));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPi0Event G__TTPi0Event;
static int G__StSpinTree_Cint_649_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPi0Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPi0Event*) (soff+(sizeof(TPi0Event)*i)))->~G__TTPi0Event();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPi0Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPi0Event*) (soff))->~G__TTPi0Event();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StSpinTree_Cint_649_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPi0Event* dest = (TPi0Event*) G__getstructoffset();
   *dest = *(TPi0Event*) libp->para[0].ref;
   const TPi0Event& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StSpinTreeReader */
static int G__StSpinTree_Cint_650_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StSpinTreeReader* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StSpinTreeReader((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) StSpinTreeReader((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StSpinTreeReader[n];
       } else {
         p = new((void*) gvp) StSpinTreeReader[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StSpinTreeReader;
       } else {
         p = new((void*) gvp) StSpinTreeReader;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StSpinTree_CintLN_StSpinTreeReader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StSpinTreeReader* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StSpinTreeReader(*(StSpinTreeReader*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StSpinTreeReader(*(StSpinTreeReader*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StSpinTree_CintLN_StSpinTreeReader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StSpinTreeReader& obj = ((StSpinTreeReader*) G__getstructoffset())->operator=(*(StSpinTreeReader*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StSpinTreeReader*) G__getstructoffset())->selectDataset((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StSpinTreeReader*) G__getstructoffset())->selectFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StSpinTreeReader*) G__getstructoffset())->selectFile(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((StSpinTreeReader*) G__getstructoffset())->GetEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StSpinTreeReader*) G__getstructoffset())->GetEntry((long) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StSpinTreeReader*) G__getstructoffset())->selectRunlist((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StSpinTreeReader*) G__getstructoffset())->selectRun((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StSpinTreeReader*) G__getstructoffset())->removeRun((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StSpinTreeReader*) G__getstructoffset())->selectTrigger((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StSpinTreeReader*) G__getstructoffset())->eventList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StSpinTreeReader*) G__getstructoffset())->setEventList((TEventList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StSpinTreeReader*) G__getstructoffset())->chain());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StSpinTreeReader*) G__getstructoffset())->event());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StSpinTreeReader*) G__getstructoffset())->nJets());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StSpinTreeReader*) G__getstructoffset())->jets());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StSpinTreeReader*) G__getstructoffset())->jet((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StSpinTreeReader*) G__getstructoffset())->nNeutralJets());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StSpinTreeReader*) G__getstructoffset())->neutralJets());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StSpinTreeReader*) G__getstructoffset())->neutralJet((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StSpinTreeReader*) G__getstructoffset())->nChargedPions());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StSpinTreeReader*) G__getstructoffset())->chargedPions());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StSpinTreeReader*) G__getstructoffset())->chargedPion((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StSpinTreeReader*) G__getstructoffset())->nBemcPions());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StSpinTreeReader*) G__getstructoffset())->bemcPions());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StSpinTreeReader*) G__getstructoffset())->bemcPion((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StSpinTreeReader*) G__getstructoffset())->nBemcElectrons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StSpinTreeReader*) G__getstructoffset())->bemcElectrons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StSpinTreeReader*) G__getstructoffset())->bemcElectron((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StSpinTreeReader*) G__getstructoffset())->nBemcGlobalElectrons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StSpinTreeReader*) G__getstructoffset())->bemcGlobalElectrons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StSpinTreeReader*) G__getstructoffset())->bemcGlobalElectron((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StSpinTreeReader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StSpinTreeReader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StSpinTreeReader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StSpinTreeReader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StSpinTreeReader*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StSpinTreeReader*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StSpinTreeReader*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StSpinTreeReader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StSpinTreeReader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StSpinTreeReader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StSpinTreeReader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StSpinTree_Cint_650_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StSpinTreeReader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StSpinTreeReader G__TStSpinTreeReader;
static int G__StSpinTree_Cint_650_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StSpinTreeReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StSpinTreeReader*) (soff+(sizeof(StSpinTreeReader)*i)))->~G__TStSpinTreeReader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StSpinTreeReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StSpinTreeReader*) (soff))->~G__TStSpinTreeReader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* StGlobalElectron */

/* StPrimaryElectron */

/* TPi0Candidate */

/* THit */

/* TMCPi0 */

/* TMCEta */

/* TPi0Event */

/* StSpinTreeReader */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncStSpinTree_Cint {
 public:
  G__Sizep2memfuncStSpinTree_Cint(): p(&G__Sizep2memfuncStSpinTree_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncStSpinTree_Cint::*p)();
};

size_t G__get_sizep2memfuncStSpinTree_Cint()
{
  G__Sizep2memfuncStSpinTree_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceStSpinTree_Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StSpinTree_CintLN_StGlobalElectron))) {
     StGlobalElectron *G__Lderived;
     G__Lderived=(StGlobalElectron*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StSpinTree_CintLN_StGlobalElectron),G__get_linked_tagnum(&G__StSpinTree_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StSpinTree_CintLN_StPrimaryElectron))) {
     StPrimaryElectron *G__Lderived;
     G__Lderived=(StPrimaryElectron*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StSpinTree_CintLN_StPrimaryElectron),G__get_linked_tagnum(&G__StSpinTree_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StSpinTree_CintLN_TPi0Candidate))) {
     TPi0Candidate *G__Lderived;
     G__Lderived=(TPi0Candidate*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StSpinTree_CintLN_TPi0Candidate),G__get_linked_tagnum(&G__StSpinTree_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StSpinTree_CintLN_THit))) {
     THit *G__Lderived;
     G__Lderived=(THit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StSpinTree_CintLN_THit),G__get_linked_tagnum(&G__StSpinTree_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StSpinTree_CintLN_TMCPi0))) {
     TMCPi0 *G__Lderived;
     G__Lderived=(TMCPi0*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StSpinTree_CintLN_TMCPi0),G__get_linked_tagnum(&G__StSpinTree_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StSpinTree_CintLN_TMCEta))) {
     TMCEta *G__Lderived;
     G__Lderived=(TMCEta*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StSpinTree_CintLN_TMCEta),G__get_linked_tagnum(&G__StSpinTree_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StSpinTree_CintLN_TPi0Event))) {
     TPi0Event *G__Lderived;
     G__Lderived=(TPi0Event*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StSpinTree_CintLN_TPi0Event),G__get_linked_tagnum(&G__StSpinTree_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableStSpinTree_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StSpinTree_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StSpinTree_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StSpinTree_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StSpinTree_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StThreeVectorF",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_StThreeVectorlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StSpinTree_CintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StSpinTree_CintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,std::string>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,string>",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,string,less<int> >",117,G__get_linked_tagnum(&G__StSpinTree_CintLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* StGlobalElectron */
static void G__setup_memvarStGlobalElectron(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StSpinTree_CintLN_StGlobalElectron));
   { StGlobalElectron *p; p=(StGlobalElectron*)0x1000; if (p) { }
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"Charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"dEdx=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"dEdxSigmaElectron=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_StThreeVectorlEfloatgR),G__defined_typename("StThreeVectorF"),-1,4,"PGlobal=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_StThreeVectorlEfloatgR),G__defined_typename("StThreeVectorF"),-1,4,"OGlobal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"DCAGlobal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Chi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"NHitsFit=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"NdEdxPts=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"NMaxPts=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StPrimaryElectron */
static void G__setup_memvarStPrimaryElectron(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StSpinTree_CintLN_StPrimaryElectron));
   { StPrimaryElectron *p; p=(StPrimaryElectron*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"Charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dEdx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dEdx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dEdxSigmaElectron)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dEdxSigmaElectron=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->P)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"P=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DCA)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"DCA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Eta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Phi)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pt)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DCAGlobal)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"DCAGlobal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Chi2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Chi2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NHitsFit)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"NHitsFit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NdEdxPts)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"NdEdxPts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NMaxPts)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"NMaxPts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ProjEta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ProjEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ProjPhi)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ProjPhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ProjZ)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ProjZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PointEta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"PointEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PointPhi)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"PointPhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PointZ)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"PointZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->E)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"E=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->POverE)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"POverE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NEtaStrips)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"NEtaStrips=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NPhiStrips)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"NPhiStrips=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NTowers)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"NTowers=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ZDist)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ZDist=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EtaDist)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"EtaDist=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PhiDist)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"PhiDist=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->R)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"R=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NPoints)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"NPoints=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PointNTracks)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"PointNTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TRef),-1,-1,4,"mGlobalRef=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPi0Candidate */
static void G__setup_memvarTPi0Candidate(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StSpinTree_CintLN_TPi0Candidate));
   { TPi0Candidate *p; p=(TPi0Candidate*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Pt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Mass=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Asymmetry=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_CosAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Distance=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_TowerId1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_TowerId2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_ChargedAssociation1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_ChargedAssociation2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_SMDFlagg1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_SMDFlagg2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Energy1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Energy2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_TowerEnergy1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_TowerEnergy2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_SMDe1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_SMDp1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_SMDe2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_SMDp2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Phi1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Eta1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Phi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Eta2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_SizeSMDe1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_SizeSMDp1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_SizeTower1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_SizeSMDe2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_SizeSMDp2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_SizeTower2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THit */
static void G__setup_memvarTHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StSpinTree_CintLN_THit));
   { THit *p; p=(THit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_X=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Y=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Z=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_Id=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Pt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_NTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_SMDFlag=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_EnergySMDe=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_EnergySMDp=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_EnergyTower=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_SizeSMDe=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_SizeSMDp=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_SizeTower=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMCPi0 */
static void G__setup_memvarTMCPi0(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StSpinTree_CintLN_TMCPi0));
   { TMCPi0 *p; p=(TMCPi0*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Pt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Energy1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Energy2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_TowerId1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_TowerId2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Phi1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Eta1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Phi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Eta2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMCEta */
static void G__setup_memvarTMCEta(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StSpinTree_CintLN_TMCEta));
   { TMCEta *p; p=(TMCEta*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Pt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_DecayMode=",0,"how the eta decayed: 0 : gg; 1: 3 pi0; 2: pi+pi-pi0 (or other 3 particle modes containing one pi0); 3: Others");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Energy1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Energy2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_TowerId1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_TowerId2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Phi1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Eta1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Phi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Eta2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Pi01Pt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Pi01Eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Pi01Phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Pi02Pt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Pi02Eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Pi02Phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Pi03Pt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Pi03Eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Pi03Phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPi0Event */
static void G__setup_memvarTPi0Event(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StSpinTree_CintLN_TPi0Event));
   { TPi0Event *p; p=(TPi0Event*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_EventNo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_RunNo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_FillNo=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_VertexX=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_VertexY=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_VertexZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_IsMB=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_IsHTTPF=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_IsHTTPL2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_IsHTTPL2_Test=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_IsHT2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_IsJP1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_HiTowerAdc6Bit=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_BEMCPoints=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_ChargedPtSum=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_NeutralEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_PrescaleMB=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_PrescaleHTTPF=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_PrescaleHTTPL2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_PrescaleHTTPL2_Test=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_PrescaleHT2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_PrescaleJP1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_BBCTrig=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_MCVertexZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_Accept=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_IsSimu=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_NPi0Candidates=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_NMCPi0s=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_NMCEtas=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_TriggerTower=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_HighestPi0MCPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_BunchX48=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_BunchX7=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_SpinBit4=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_MaskedXing=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_ValidSpin=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_PolLong=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_DbSpinBit=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_relLum[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_lumErr[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_NHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_BBCVertexZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_OnlyBBCVtx=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_PythiaPartPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_PythiaX1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_PythiaX2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_BBCTimeBin=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_isBackground=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"m_BackgroundTowers=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TClonesArray),-1,-1,4,"m_Pi0Candidates=",0,"->");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TClonesArray),-1,-1,4,"m_MCPi0s=",0,"->");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TClonesArray),-1,-1,4,"m_MCEtas=",0,"->");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TClonesArray),-1,-1,4,"m_Hits=",0,"->");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TClonesArray),-1,-2,4,"aPi0Candidates=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TClonesArray),-1,-2,4,"aMCPi0s=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TClonesArray),-1,-2,4,"aMCEtas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TClonesArray),-1,-2,4,"aHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StSpinTreeReader */
static void G__setup_memvarStSpinTreeReader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StSpinTree_CintLN_StSpinTreeReader));
   { StSpinTreeReader *p; p=(StSpinTreeReader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->connectJets)-(long)(p)),103,0,0,-1,-1,-1,1,"connectJets=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->connectNeutralJets)-(long)(p)),103,0,0,-1,-1,-1,1,"connectNeutralJets=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->connectChargedPions)-(long)(p)),103,0,0,-1,-1,-1,1,"connectChargedPions=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->connectBemcPions)-(long)(p)),103,0,0,-1,-1,-1,1,"connectBemcPions=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->connectBemcElectrons)-(long)(p)),103,0,0,-1,-1,-1,1,"connectBemcElectrons=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->connectEemcPions)-(long)(p)),103,0,0,-1,-1,-1,1,"connectEemcPions=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->requireDidFire)-(long)(p)),103,0,0,-1,-1,-1,1,"requireDidFire=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->requireShouldFire)-(long)(p)),103,0,0,-1,-1,-1,1,"requireShouldFire=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_StJetSkimEvent),-1,-1,4,"mEvent=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TClonesArray),-1,-1,4,"mConeJets=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TClonesArray),-1,-1,4,"mConeJetsEMC=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TClonesArray),-1,-1,4,"mChargedPions=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TClonesArray),-1,-1,4,"mBemcPions=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TClonesArray),-1,-1,4,"mBemcElectrons=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TClonesArray),-1,-1,4,"mBemcGlobalElectrons=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TClonesArray),-1,-1,4,"mEemcPions=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),G__defined_typename("map<int,std::string>"),-1,4,"mFileList=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR),G__defined_typename("set<int>"),-1,4,"mRunList=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR),G__defined_typename("set<int>"),-1,4,"mTriggerList=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TChain),-1,-1,4,"mChain=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TEventList),-1,-1,4,"mEventList=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TChain),-1,-1,4,"mChainConeJets=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TChain),-1,-1,4,"mChainConeJetsEMC=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TChain),-1,-1,4,"mChainChargedPions=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TChain),-1,-1,4,"mChainBemcPions=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TChain),-1,-1,4,"mChainBemcElectrons=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TChain),-1,-1,4,"mChainEemcPions=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_string),-1,-1,4,"mCurrentFileName=",0,"!");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"mIsConnected=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StSpinTree_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarStSpinTree_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncStGlobalElectron(void) {
   /* StGlobalElectron */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StSpinTree_CintLN_StGlobalElectron));
   G__memfunc_setup("StGlobalElectron",1620,G__StSpinTree_Cint_170_0_1, 105, G__get_linked_tagnum(&G__StSpinTree_CintLN_StGlobalElectron), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StGlobalElectron",1620,G__StSpinTree_Cint_170_0_2, 105, G__get_linked_tagnum(&G__StSpinTree_CintLN_StGlobalElectron), -1, 0, 1, 1, 1, 0, "u 'StGlobalElectron' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("charge",618,G__StSpinTree_Cint_170_0_3, 99, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getdEdx",709,G__StSpinTree_Cint_170_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getdEdxSigmaElectron",2034,G__StSpinTree_Cint_170_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("p",112,G__StSpinTree_Cint_170_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eta",314,G__StSpinTree_Cint_170_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__StSpinTree_Cint_170_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pt",228,G__StSpinTree_Cint_170_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pGlobal",705,G__StSpinTree_Cint_170_0_10, 117, G__get_linked_tagnum(&G__StSpinTree_CintLN_StThreeVectorlEfloatgR), G__defined_typename("StThreeVectorF"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("oGlobal",704,G__StSpinTree_Cint_170_0_11, 117, G__get_linked_tagnum(&G__StSpinTree_CintLN_StThreeVectorlEfloatgR), G__defined_typename("StThreeVectorF"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dcaGlobal",889,G__StSpinTree_Cint_170_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chi2",358,G__StSpinTree_Cint_170_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nHitsFit",809,G__StSpinTree_Cint_170_0_14, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ndEdxPts",810,G__StSpinTree_Cint_170_0_15, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nMaxPts",715,G__StSpinTree_Cint_170_0_16, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAll",613,G__StSpinTree_Cint_170_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCharge",918,G__StSpinTree_Cint_170_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "c - 'Char_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setdEdx",721,G__StSpinTree_Cint_170_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setdEdxSigmaElectron",2046,G__StSpinTree_Cint_170_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPGlobal",1005,G__StSpinTree_Cint_170_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'StThreeVector<float>' 'StThreeVectorF' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPGlobal",1005,G__StSpinTree_Cint_170_0_22, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - px f - 'Float_t' 0 - py "
"f - 'Float_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOGlobal",1004,G__StSpinTree_Cint_170_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'StThreeVector<float>' 'StThreeVectorF' 0 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOGlobal",1004,G__StSpinTree_Cint_170_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - ox f - 'Float_t' 0 - oy "
"f - 'Float_t' 0 - oz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDCAGlobal",1125,G__StSpinTree_Cint_170_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChi2",658,G__StSpinTree_Cint_170_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNHitsFit",1109,G__StSpinTree_Cint_170_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNdEdxPts",1110,G__StSpinTree_Cint_170_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNMaxPts",1015,G__StSpinTree_Cint_170_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StSpinTree_Cint_170_0_30, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StGlobalElectron::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StSpinTree_Cint_170_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StGlobalElectron::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StSpinTree_Cint_170_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StGlobalElectron::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StSpinTree_Cint_170_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StGlobalElectron::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StSpinTree_Cint_170_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StSpinTree_Cint_170_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StGlobalElectron::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StSpinTree_Cint_170_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StGlobalElectron::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StSpinTree_Cint_170_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StGlobalElectron::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StSpinTree_Cint_170_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StGlobalElectron::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StGlobalElectron", 1746, G__StSpinTree_Cint_170_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StSpinTree_Cint_170_0_43, (int) ('u'), G__get_linked_tagnum(&G__StSpinTree_CintLN_StGlobalElectron), -1, 1, 1, 1, 1, 0, "u 'StGlobalElectron' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStPrimaryElectron(void) {
   /* StPrimaryElectron */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StSpinTree_CintLN_StPrimaryElectron));
   G__memfunc_setup("StPrimaryElectron",1767,G__StSpinTree_Cint_175_0_1, 105, G__get_linked_tagnum(&G__StSpinTree_CintLN_StPrimaryElectron), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StPrimaryElectron",1767,G__StSpinTree_Cint_175_0_2, 105, G__get_linked_tagnum(&G__StSpinTree_CintLN_StPrimaryElectron), -1, 0, 1, 1, 1, 0, "u 'StPrimaryElectron' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("global",625,G__StSpinTree_Cint_175_0_3, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_StGlobalElectron), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setGlobal",925,G__StSpinTree_Cint_175_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StGlobalElectron' - 0 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("charge",618,G__StSpinTree_Cint_175_0_5, 99, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getdEdx",709,G__StSpinTree_Cint_175_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getdEdxSigmaElectron",2034,G__StSpinTree_Cint_175_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("p",112,G__StSpinTree_Cint_175_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dca",296,G__StSpinTree_Cint_175_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eta",314,G__StSpinTree_Cint_175_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__StSpinTree_Cint_175_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pt",228,G__StSpinTree_Cint_175_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dcaGlobal",889,G__StSpinTree_Cint_175_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chi2",358,G__StSpinTree_Cint_175_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nHitsFit",809,G__StSpinTree_Cint_175_0_15, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ndEdxPts",810,G__StSpinTree_Cint_175_0_16, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nMaxPts",715,G__StSpinTree_Cint_175_0_17, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("projEta",725,G__StSpinTree_Cint_175_0_18, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("projPhi",732,G__StSpinTree_Cint_175_0_19, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("projZ",533,G__StSpinTree_Cint_175_0_20, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pointEta",836,G__StSpinTree_Cint_175_0_21, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pointPhi",843,G__StSpinTree_Cint_175_0_22, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pointZ",644,G__StSpinTree_Cint_175_0_23, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("e",101,G__StSpinTree_Cint_175_0_24, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pOverE",593,G__StSpinTree_Cint_175_0_25, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nEtaStrips",1037,G__StSpinTree_Cint_175_0_26, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nPhiStrips",1044,G__StSpinTree_Cint_175_0_27, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nTowers",754,G__StSpinTree_Cint_175_0_28, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("zDist",526,G__StSpinTree_Cint_175_0_29, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("etaDist",718,G__StSpinTree_Cint_175_0_30, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phiDist",725,G__StSpinTree_Cint_175_0_31, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nPoints",747,G__StSpinTree_Cint_175_0_32, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pointNTracks",1248,G__StSpinTree_Cint_175_0_33, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("globalRef",910,G__StSpinTree_Cint_175_0_34, 117, G__get_linked_tagnum(&G__StSpinTree_CintLN_TRef), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAll",613,G__StSpinTree_Cint_175_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCharge",918,G__StSpinTree_Cint_175_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "c - 'Char_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setdEdx",721,G__StSpinTree_Cint_175_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setdEdxSigmaElectron",2046,G__StSpinTree_Cint_175_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setP",412,G__StSpinTree_Cint_175_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDCA",532,G__StSpinTree_Cint_175_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEta",614,G__StSpinTree_Cint_175_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPhi",621,G__StSpinTree_Cint_175_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPt",528,G__StSpinTree_Cint_175_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDCAGlobal",1125,G__StSpinTree_Cint_175_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChi2",658,G__StSpinTree_Cint_175_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNHitsFit",1109,G__StSpinTree_Cint_175_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNdEdxPts",1110,G__StSpinTree_Cint_175_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNMaxPts",1015,G__StSpinTree_Cint_175_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setProjEta",1025,G__StSpinTree_Cint_175_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setProjPhi",1032,G__StSpinTree_Cint_175_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setProjZ",833,G__StSpinTree_Cint_175_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPointEta",1136,G__StSpinTree_Cint_175_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPointPhi",1143,G__StSpinTree_Cint_175_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPointZ",944,G__StSpinTree_Cint_175_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setE",401,G__StSpinTree_Cint_175_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPOverE",893,G__StSpinTree_Cint_175_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - poe", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNEtaStrips",1337,G__StSpinTree_Cint_175_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNPhiStrips",1344,G__StSpinTree_Cint_175_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNTowers",1054,G__StSpinTree_Cint_175_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZDist",826,G__StSpinTree_Cint_175_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEtaDist",1018,G__StSpinTree_Cint_175_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPhiDist",1025,G__StSpinTree_Cint_175_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNPoints",1047,G__StSpinTree_Cint_175_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPointNTracks",1548,G__StSpinTree_Cint_175_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StSpinTree_Cint_175_0_65, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StPrimaryElectron::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StSpinTree_Cint_175_0_66, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StPrimaryElectron::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StSpinTree_Cint_175_0_67, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StPrimaryElectron::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StSpinTree_Cint_175_0_68, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StPrimaryElectron::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StSpinTree_Cint_175_0_72, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StSpinTree_Cint_175_0_73, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StPrimaryElectron::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StSpinTree_Cint_175_0_74, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StPrimaryElectron::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StSpinTree_Cint_175_0_75, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StPrimaryElectron::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StSpinTree_Cint_175_0_76, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StPrimaryElectron::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StPrimaryElectron", 1893, G__StSpinTree_Cint_175_0_77, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StSpinTree_Cint_175_0_78, (int) ('u'), G__get_linked_tagnum(&G__StSpinTree_CintLN_StPrimaryElectron), -1, 1, 1, 1, 1, 0, "u 'StPrimaryElectron' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPi0Candidate(void) {
   /* TPi0Candidate */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StSpinTree_CintLN_TPi0Candidate));
   G__memfunc_setup("TPi0Candidate",1210,G__StSpinTree_Cint_645_0_1, 105, G__get_linked_tagnum(&G__StSpinTree_CintLN_TPi0Candidate), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TPi0Candidate",1210,G__StSpinTree_Cint_645_0_2, 105, G__get_linked_tagnum(&G__StSpinTree_CintLN_TPi0Candidate), -1, 0, 1, 1, 1, 0, "u 'TPi0Candidate' - 11 - orig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Pt",196,G__StSpinTree_Cint_645_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mass",404,G__StSpinTree_Cint_645_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eta",282,G__StSpinTree_Cint_645_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi",289,G__StSpinTree_Cint_645_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Asymmetry",971,G__StSpinTree_Cint_645_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CosAngle",780,G__StSpinTree_Cint_645_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Distance",811,G__StSpinTree_Cint_645_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TowerId1",751,G__StSpinTree_Cint_645_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TowerId2",752,G__StSpinTree_Cint_645_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChargedAssociation1",1884,G__StSpinTree_Cint_645_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChargedAssociation2",1885,G__StSpinTree_Cint_645_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMDFlagg1",758,G__StSpinTree_Cint_645_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMDFlagg2",759,G__StSpinTree_Cint_645_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Energy1",667,G__StSpinTree_Cint_645_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Energy2",668,G__StSpinTree_Cint_645_0_18, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TowerEnergy1",1196,G__StSpinTree_Cint_645_0_19, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TowerEnergy2",1197,G__StSpinTree_Cint_645_0_20, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMDe1",378,G__StSpinTree_Cint_645_0_21, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMDp1",389,G__StSpinTree_Cint_645_0_22, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMDe2",379,G__StSpinTree_Cint_645_0_23, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMDp2",390,G__StSpinTree_Cint_645_0_24, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi1",338,G__StSpinTree_Cint_645_0_25, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eta1",331,G__StSpinTree_Cint_645_0_26, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi2",339,G__StSpinTree_Cint_645_0_27, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eta2",332,G__StSpinTree_Cint_645_0_28, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SizeSMDe1",789,G__StSpinTree_Cint_645_0_29, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SizeSMDp1",800,G__StSpinTree_Cint_645_0_30, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SizeTower1",989,G__StSpinTree_Cint_645_0_31, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SizeSMDe2",790,G__StSpinTree_Cint_645_0_32, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SizeSMDp2",801,G__StSpinTree_Cint_645_0_33, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SizeTower2",990,G__StSpinTree_Cint_645_0_34, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAll",581,G__StSpinTree_Cint_645_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StSpinTree_Cint_645_0_36, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TPi0Candidate::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StSpinTree_Cint_645_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPi0Candidate::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StSpinTree_Cint_645_0_38, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TPi0Candidate::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StSpinTree_Cint_645_0_39, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPi0Candidate::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StSpinTree_Cint_645_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StSpinTree_Cint_645_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPi0Candidate::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StSpinTree_Cint_645_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPi0Candidate::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StSpinTree_Cint_645_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPi0Candidate::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StSpinTree_Cint_645_0_47, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPi0Candidate::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TPi0Candidate", 1336, G__StSpinTree_Cint_645_0_48, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StSpinTree_Cint_645_0_49, (int) ('u'), G__get_linked_tagnum(&G__StSpinTree_CintLN_TPi0Candidate), -1, 1, 1, 1, 1, 0, "u 'TPi0Candidate' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHit(void) {
   /* THit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StSpinTree_CintLN_THit));
   G__memfunc_setup("THit",377,G__StSpinTree_Cint_646_0_1, 105, G__get_linked_tagnum(&G__StSpinTree_CintLN_THit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THit",377,G__StSpinTree_Cint_646_0_2, 105, G__get_linked_tagnum(&G__StSpinTree_CintLN_THit), -1, 0, 1, 1, 1, 0, "u 'THit' - 11 - orig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("X",88,G__StSpinTree_Cint_646_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__StSpinTree_Cint_646_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Z",90,G__StSpinTree_Cint_646_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Id",173,G__StSpinTree_Cint_646_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Energy",618,G__StSpinTree_Cint_646_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pt",196,G__StSpinTree_Cint_646_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NTracks",694,G__StSpinTree_Cint_646_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMDFlag",606,G__StSpinTree_Cint_646_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EnergySMDe",947,G__StSpinTree_Cint_646_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EnergySMDp",958,G__StSpinTree_Cint_646_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EnergyTower",1147,G__StSpinTree_Cint_646_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SizeSMDe",740,G__StSpinTree_Cint_646_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SizeSMDp",751,G__StSpinTree_Cint_646_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SizeTower",940,G__StSpinTree_Cint_646_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi",289,G__StSpinTree_Cint_646_0_18, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eta",282,G__StSpinTree_Cint_646_0_19, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAll",581,G__StSpinTree_Cint_646_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StSpinTree_Cint_646_0_21, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StSpinTree_Cint_646_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StSpinTree_Cint_646_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StSpinTree_Cint_646_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StSpinTree_Cint_646_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StSpinTree_Cint_646_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StSpinTree_Cint_646_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StSpinTree_Cint_646_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StSpinTree_Cint_646_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THit", 503, G__StSpinTree_Cint_646_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StSpinTree_Cint_646_0_34, (int) ('u'), G__get_linked_tagnum(&G__StSpinTree_CintLN_THit), -1, 1, 1, 1, 1, 0, "u 'THit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMCPi0(void) {
   /* TMCPi0 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StSpinTree_CintLN_TMCPi0));
   G__memfunc_setup("TMCPi0",461,G__StSpinTree_Cint_647_0_1, 105, G__get_linked_tagnum(&G__StSpinTree_CintLN_TMCPi0), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMCPi0",461,G__StSpinTree_Cint_647_0_2, 105, G__get_linked_tagnum(&G__StSpinTree_CintLN_TMCPi0), -1, 0, 1, 1, 1, 0, "u 'TMCPi0' - 11 - orig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Pt",196,G__StSpinTree_Cint_647_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eta",282,G__StSpinTree_Cint_647_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi",289,G__StSpinTree_Cint_647_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Energy1",667,G__StSpinTree_Cint_647_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Energy2",668,G__StSpinTree_Cint_647_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TowerId1",751,G__StSpinTree_Cint_647_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TowerId2",752,G__StSpinTree_Cint_647_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi1",338,G__StSpinTree_Cint_647_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eta1",331,G__StSpinTree_Cint_647_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi2",339,G__StSpinTree_Cint_647_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eta2",332,G__StSpinTree_Cint_647_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAll",581,G__StSpinTree_Cint_647_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StSpinTree_Cint_647_0_16, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMCPi0::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StSpinTree_Cint_647_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMCPi0::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StSpinTree_Cint_647_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMCPi0::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StSpinTree_Cint_647_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMCPi0::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StSpinTree_Cint_647_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StSpinTree_Cint_647_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMCPi0::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StSpinTree_Cint_647_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMCPi0::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StSpinTree_Cint_647_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMCPi0::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StSpinTree_Cint_647_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMCPi0::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TMCPi0", 587, G__StSpinTree_Cint_647_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StSpinTree_Cint_647_0_29, (int) ('u'), G__get_linked_tagnum(&G__StSpinTree_CintLN_TMCPi0), -1, 1, 1, 1, 1, 0, "u 'TMCPi0' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMCEta(void) {
   /* TMCEta */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StSpinTree_CintLN_TMCEta));
   G__memfunc_setup("TMCEta",510,G__StSpinTree_Cint_648_0_1, 105, G__get_linked_tagnum(&G__StSpinTree_CintLN_TMCEta), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMCEta",510,G__StSpinTree_Cint_648_0_2, 105, G__get_linked_tagnum(&G__StSpinTree_CintLN_TMCEta), -1, 0, 1, 1, 1, 0, "u 'TMCEta' - 11 - orig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Pt",196,G__StSpinTree_Cint_648_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eta",282,G__StSpinTree_Cint_648_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi",289,G__StSpinTree_Cint_648_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DecayMode",875,G__StSpinTree_Cint_648_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Energy1",667,G__StSpinTree_Cint_648_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Energy2",668,G__StSpinTree_Cint_648_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TowerId1",751,G__StSpinTree_Cint_648_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TowerId2",752,G__StSpinTree_Cint_648_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi1",338,G__StSpinTree_Cint_648_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eta1",331,G__StSpinTree_Cint_648_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi2",339,G__StSpinTree_Cint_648_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eta2",332,G__StSpinTree_Cint_648_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pi01Pt",478,G__StSpinTree_Cint_648_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pi01Eta",564,G__StSpinTree_Cint_648_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pi01Phi",571,G__StSpinTree_Cint_648_0_18, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pi02Pt",479,G__StSpinTree_Cint_648_0_19, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pi02Eta",565,G__StSpinTree_Cint_648_0_20, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pi02Phi",572,G__StSpinTree_Cint_648_0_21, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pi03Pt",480,G__StSpinTree_Cint_648_0_22, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pi03Eta",566,G__StSpinTree_Cint_648_0_23, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pi03Phi",573,G__StSpinTree_Cint_648_0_24, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAll",581,G__StSpinTree_Cint_648_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StSpinTree_Cint_648_0_26, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMCEta::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StSpinTree_Cint_648_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMCEta::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StSpinTree_Cint_648_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMCEta::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StSpinTree_Cint_648_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMCEta::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StSpinTree_Cint_648_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StSpinTree_Cint_648_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMCEta::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StSpinTree_Cint_648_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMCEta::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StSpinTree_Cint_648_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMCEta::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StSpinTree_Cint_648_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMCEta::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TMCEta", 636, G__StSpinTree_Cint_648_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StSpinTree_Cint_648_0_39, (int) ('u'), G__get_linked_tagnum(&G__StSpinTree_CintLN_TMCEta), -1, 1, 1, 1, 1, 0, "u 'TMCEta' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPi0Event(void) {
   /* TPi0Event */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StSpinTree_CintLN_TPi0Event));
   G__memfunc_setup("TPi0Event",831,G__StSpinTree_Cint_649_0_1, 105, G__get_linked_tagnum(&G__StSpinTree_CintLN_TPi0Event), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__StSpinTree_Cint_649_0_3, 121, -1, -1, 0, 1, 3, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) G__func2void( (void (*)(Option_t*))(&TPi0Event::Reset) ), 0);
   G__memfunc_setup("EventNo",703,G__StSpinTree_Cint_649_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunNo",498,G__StSpinTree_Cint_649_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillNo",580,G__StSpinTree_Cint_649_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VertexX",726,G__StSpinTree_Cint_649_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VertexY",727,G__StSpinTree_Cint_649_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VertexZ",728,G__StSpinTree_Cint_649_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMB",331,G__StSpinTree_Cint_649_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsHTTPF",578,G__StSpinTree_Cint_649_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsHTTPL2",634,G__StSpinTree_Cint_649_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsHTTPL2_Test",1145,G__StSpinTree_Cint_649_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsHT2",394,G__StSpinTree_Cint_649_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsJP1",391,G__StSpinTree_Cint_649_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HiTowerAdc6Bit",1311,G__StSpinTree_Cint_649_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BEMCPoints",916,G__StSpinTree_Cint_649_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChargedPtSum",1191,G__StSpinTree_Cint_649_0_18, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NeutralEnergy",1349,G__StSpinTree_Cint_649_0_19, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrescaleMB",958,G__StSpinTree_Cint_649_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrescaleHTTPF",1205,G__StSpinTree_Cint_649_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrescaleHTTPL2",1261,G__StSpinTree_Cint_649_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrescaleHTTPL2_Test",1772,G__StSpinTree_Cint_649_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrescaleHT2",1021,G__StSpinTree_Cint_649_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrescaleJP1",1018,G__StSpinTree_Cint_649_0_25, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BBCTrig",605,G__StSpinTree_Cint_649_0_26, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSimulation",1249,G__StSpinTree_Cint_649_0_27, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MCVertexZ",872,G__StSpinTree_Cint_649_0_28, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsAccepted",981,G__StSpinTree_Cint_649_0_29, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NPi0Candidates",1319,G__StSpinTree_Cint_649_0_30, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NMCPi0s",570,G__StSpinTree_Cint_649_0_31, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NMCEtas",619,G__StSpinTree_Cint_649_0_32, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TriggerTower",1253,G__StSpinTree_Cint_649_0_33, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HighestPi0MCPt",1289,G__StSpinTree_Cint_649_0_34, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BunchX48",692,G__StSpinTree_Cint_649_0_35, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BunchX7",639,G__StSpinTree_Cint_649_0_36, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SpinBit",697,G__StSpinTree_Cint_649_0_37, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MaskedXing",1003,G__StSpinTree_Cint_649_0_38, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ValidSpin",906,G__StSpinTree_Cint_649_0_39, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PolLong",699,G__StSpinTree_Cint_649_0_40, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DbSpinBit",863,G__StSpinTree_Cint_649_0_41, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RelLumUpUp",987,G__StSpinTree_Cint_649_0_42, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LumErrorUpUp",1218,G__StSpinTree_Cint_649_0_43, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RelLumUpDown",1198,G__StSpinTree_Cint_649_0_44, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LumErrorUpDown",1429,G__StSpinTree_Cint_649_0_45, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RelLumDownUp",1198,G__StSpinTree_Cint_649_0_46, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LumErrorDownUp",1429,G__StSpinTree_Cint_649_0_47, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NHits",486,G__StSpinTree_Cint_649_0_48, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BBCVertexZ",927,G__StSpinTree_Cint_649_0_49, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnlyBBCVertex",1255,G__StSpinTree_Cint_649_0_50, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PythiaPartPt",1226,G__StSpinTree_Cint_649_0_51, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PythiaX1",760,G__StSpinTree_Cint_649_0_52, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PythiaX2",761,G__StSpinTree_Cint_649_0_53, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BBCTimeBin",879,G__StSpinTree_Cint_649_0_54, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBackground",1212,G__StSpinTree_Cint_649_0_55, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfBackgroundTowers",2466,G__StSpinTree_Cint_649_0_56, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BackgroundTower",1553,G__StSpinTree_Cint_649_0_57, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pi0Candidates",1241,G__StSpinTree_Cint_649_0_58, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pi0Candidate",1126,G__StSpinTree_Cint_649_0_59, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TPi0Candidate), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MCPi0s",492,G__StSpinTree_Cint_649_0_60, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MCPi0",377,G__StSpinTree_Cint_649_0_61, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TMCPi0), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MCEtas",541,G__StSpinTree_Cint_649_0_62, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MCEta",426,G__StSpinTree_Cint_649_0_63, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TMCEta), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hits",408,G__StSpinTree_Cint_649_0_64, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hit",293,G__StSpinTree_Cint_649_0_65, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_THit), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventNo",1003,G__StSpinTree_Cint_649_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - evN", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunNo",798,G__StSpinTree_Cint_649_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - rN", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFillNo",880,G__StSpinTree_Cint_649_0_68, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - fN", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVertex",938,G__StSpinTree_Cint_649_0_69, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - vx f - 'Float_t' 0 - vy "
"f - 'Float_t' 0 - vz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTriggers",1139,G__StSpinTree_Cint_649_0_70, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - tr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPrescales",1230,G__StSpinTree_Cint_649_0_71, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - pr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHiTowerAdc6Bit",1611,G__StSpinTree_Cint_649_0_72, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ht", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBEMCPoints",1216,G__StSpinTree_Cint_649_0_73, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - points", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChargedPtSum",1491,G__StSpinTree_Cint_649_0_74, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - sum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNeutralEnergy",1649,G__StSpinTree_Cint_649_0_75, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - en", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBBCTrig",905,G__StSpinTree_Cint_649_0_76, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - bt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSimulation",1361,G__StSpinTree_Cint_649_0_77, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - sim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMCVertexZ",1172,G__StSpinTree_Cint_649_0_78, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - mz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Accept",592,G__StSpinTree_Cint_649_0_79, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' ac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTriggerTower",1553,G__StSpinTree_Cint_649_0_80, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - tow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SeHighestPi0MCPt",1473,G__StSpinTree_Cint_649_0_81, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - pt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBunchX48",992,G__StSpinTree_Cint_649_0_82, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - b48", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBunchX7",939,G__StSpinTree_Cint_649_0_83, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - b7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSpinBit",997,G__StSpinTree_Cint_649_0_84, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - sb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMaskedXing",1303,G__StSpinTree_Cint_649_0_85, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - mask", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetValidSpin",1206,G__StSpinTree_Cint_649_0_86, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPolLong",999,G__StSpinTree_Cint_649_0_87, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDbSpinBit",1163,G__StSpinTree_Cint_649_0_88, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - sb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRelLum",893,G__StSpinTree_Cint_649_0_89, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLumError",1124,G__StSpinTree_Cint_649_0_90, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBBCVertexZ",1227,G__StSpinTree_Cint_649_0_91, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - vtxz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOnlyBBCVertex",1555,G__StSpinTree_Cint_649_0_92, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPythiaPartPt",1526,G__StSpinTree_Cint_649_0_93, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - part", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPythiaX1",1060,G__StSpinTree_Cint_649_0_94, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPythiaX2",1061,G__StSpinTree_Cint_649_0_95, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBBCTimeBin",1179,G__StSpinTree_Cint_649_0_96, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - bin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBackground",1324,G__StSpinTree_Cint_649_0_97, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - bgd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddBackgroundTower",1818,G__StSpinTree_Cint_649_0_98, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddPi0Candidate",1391,G__StSpinTree_Cint_649_0_99, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TPi0Candidate), -1, 0, 1, 1, 1, 0, "u 'TPi0Candidate' - 1 - cand", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddMCPi0",642,G__StSpinTree_Cint_649_0_100, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TMCPi0), -1, 0, 1, 1, 1, 0, "u 'TMCPi0' - 1 - cand", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddMCEta",691,G__StSpinTree_Cint_649_0_101, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TMCEta), -1, 0, 1, 1, 1, 0, "u 'TMCEta' - 1 - cand", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddHit",558,G__StSpinTree_Cint_649_0_102, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_THit), -1, 0, 1, 1, 1, 0, "u 'THit' - 1 - cand", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StSpinTree_Cint_649_0_103, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TPi0Event::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StSpinTree_Cint_649_0_104, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPi0Event::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StSpinTree_Cint_649_0_105, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TPi0Event::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StSpinTree_Cint_649_0_106, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPi0Event::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StSpinTree_Cint_649_0_110, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StSpinTree_Cint_649_0_111, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPi0Event::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StSpinTree_Cint_649_0_112, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPi0Event::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StSpinTree_Cint_649_0_113, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPi0Event::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StSpinTree_Cint_649_0_114, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPi0Event::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TPi0Event", 831, G__StSpinTree_Cint_649_0_115, (int) ('i'), G__get_linked_tagnum(&G__StSpinTree_CintLN_TPi0Event), -1, 0, 1, 1, 1, 0, "u 'TPi0Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TPi0Event", 957, G__StSpinTree_Cint_649_0_116, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StSpinTree_Cint_649_0_117, (int) ('u'), G__get_linked_tagnum(&G__StSpinTree_CintLN_TPi0Event), -1, 1, 1, 1, 1, 0, "u 'TPi0Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStSpinTreeReader(void) {
   /* StSpinTreeReader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StSpinTree_CintLN_StSpinTreeReader));
   G__memfunc_setup("StSpinTreeReader",1604,G__StSpinTree_Cint_650_0_1, 105, G__get_linked_tagnum(&G__StSpinTree_CintLN_StSpinTreeReader), -1, 0, 1, 1, 1, 0, "C - - 10 '\"spinTree\"' treeName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StSpinTreeReader",1604,G__StSpinTree_Cint_650_0_2, 105, G__get_linked_tagnum(&G__StSpinTree_CintLN_StSpinTreeReader), -1, 0, 1, 1, 1, 0, "u 'StSpinTreeReader' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__StSpinTree_Cint_650_0_3, 117, G__get_linked_tagnum(&G__StSpinTree_CintLN_StSpinTreeReader), -1, 1, 1, 1, 1, 0, "u 'StSpinTreeReader' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("selectDataset",1350,G__StSpinTree_Cint_650_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("selectFile",1024,G__StSpinTree_Cint_650_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("selectFile",1024,G__StSpinTree_Cint_650_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 1 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntries",1018,G__StSpinTree_Cint_650_0_7, 108, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntry",818,G__StSpinTree_Cint_650_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "l - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("selectRunlist",1393,G__StSpinTree_Cint_650_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("selectRun",949,G__StSpinTree_Cint_650_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - runnumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("removeRun",963,G__StSpinTree_Cint_650_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - runnumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("selectTrigger",1364,G__StSpinTree_Cint_650_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - trigger", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eventList",958,G__StSpinTree_Cint_650_0_13, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TEventList), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventList",1258,G__StSpinTree_Cint_650_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TEventList' - 0 - elist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chain",515,G__StSpinTree_Cint_650_0_15, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TChain), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("event",546,G__StSpinTree_Cint_650_0_16, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_StJetSkimEvent), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nJets",516,G__StSpinTree_Cint_650_0_17, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("jets",438,G__StSpinTree_Cint_650_0_18, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TClonesArray), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("jet",323,G__StSpinTree_Cint_650_0_19, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_StJet), -1, 0, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nNeutralJets",1247,G__StSpinTree_Cint_650_0_20, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("neutralJets",1169,G__StSpinTree_Cint_650_0_21, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TClonesArray), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("neutralJet",1054,G__StSpinTree_Cint_650_0_22, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_StJet), -1, 0, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nChargedPions",1317,G__StSpinTree_Cint_650_0_23, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chargedPions",1239,G__StSpinTree_Cint_650_0_24, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TClonesArray), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chargedPion",1124,G__StSpinTree_Cint_650_0_25, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_StChargedPionTrack), -1, 0, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nBemcPions",1006,G__StSpinTree_Cint_650_0_26, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bemcPions",928,G__StSpinTree_Cint_650_0_27, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TClonesArray), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bemcPion",813,G__StSpinTree_Cint_650_0_28, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TPi0Candidate), -1, 0, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nBemcElectrons",1428,G__StSpinTree_Cint_650_0_29, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bemcElectrons",1350,G__StSpinTree_Cint_650_0_30, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TClonesArray), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bemcElectron",1235,G__StSpinTree_Cint_650_0_31, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_StPrimaryElectron), -1, 0, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nBemcGlobalElectrons",2021,G__StSpinTree_Cint_650_0_32, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bemcGlobalElectrons",1943,G__StSpinTree_Cint_650_0_33, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TClonesArray), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bemcGlobalElectron",1828,G__StSpinTree_Cint_650_0_34, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_StGlobalElectron), -1, 0, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("connect",746,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StSpinTree_Cint_650_0_36, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StSpinTreeReader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StSpinTree_Cint_650_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StSpinTreeReader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StSpinTree_Cint_650_0_38, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StSpinTreeReader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StSpinTree_Cint_650_0_39, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StSpinTreeReader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StSpinTree_Cint_650_0_40, 85, G__get_linked_tagnum(&G__StSpinTree_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StSpinTree_Cint_650_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StSpinTree_Cint_650_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StSpinTree_Cint_650_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StSpinTree_Cint_650_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StSpinTreeReader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StSpinTree_Cint_650_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StSpinTreeReader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StSpinTree_Cint_650_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StSpinTreeReader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StSpinTree_Cint_650_0_47, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StSpinTreeReader::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StSpinTreeReader", 1730, G__StSpinTree_Cint_650_0_48, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncStSpinTree_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalStSpinTree_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcStSpinTree_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__StSpinTree_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_StThreeVectorlEfloatgR = { "StThreeVector<float>" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_StGlobalElectron = { "StGlobalElectron" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TRef = { "TRef" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_StPrimaryElectron = { "StPrimaryElectron" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR = { "set<int,less<int>,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TEventList = { "TEventList" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_StJetSkimEvent = { "StJetSkimEvent" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_StJet = { "StJet" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_StChargedPionTrack = { "StChargedPionTrack" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TPi0Candidate = { "TPi0Candidate" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_THit = { "THit" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TMCPi0 = { "TMCPi0" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TMCEta = { "TMCEta" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_TPi0Event = { "TPi0Event" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_StSpinTreeReader = { "StSpinTreeReader" , 99 , -1 };
G__linked_taginfo G__StSpinTree_CintLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR = { "map<int,string,less<int>,allocator<pair<const int,string> > >" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableStSpinTree_Cint() {
  G__StSpinTree_CintLN_TClass.tagnum = -1 ;
  G__StSpinTree_CintLN_TBuffer.tagnum = -1 ;
  G__StSpinTree_CintLN_TMemberInspector.tagnum = -1 ;
  G__StSpinTree_CintLN_TObject.tagnum = -1 ;
  G__StSpinTree_CintLN_string.tagnum = -1 ;
  G__StSpinTree_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__StSpinTree_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StSpinTree_CintLN_TClonesArray.tagnum = -1 ;
  G__StSpinTree_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__StSpinTree_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StSpinTree_CintLN_StThreeVectorlEfloatgR.tagnum = -1 ;
  G__StSpinTree_CintLN_StGlobalElectron.tagnum = -1 ;
  G__StSpinTree_CintLN_TRef.tagnum = -1 ;
  G__StSpinTree_CintLN_StPrimaryElectron.tagnum = -1 ;
  G__StSpinTree_CintLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__StSpinTree_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__StSpinTree_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__StSpinTree_CintLN_TEventList.tagnum = -1 ;
  G__StSpinTree_CintLN_TChain.tagnum = -1 ;
  G__StSpinTree_CintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__StSpinTree_CintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__StSpinTree_CintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__StSpinTree_CintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__StSpinTree_CintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__StSpinTree_CintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__StSpinTree_CintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__StSpinTree_CintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__StSpinTree_CintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__StSpinTree_CintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__StSpinTree_CintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__StSpinTree_CintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__StSpinTree_CintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__StSpinTree_CintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__StSpinTree_CintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__StSpinTree_CintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__StSpinTree_CintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__StSpinTree_CintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__StSpinTree_CintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__StSpinTree_CintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__StSpinTree_CintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__StSpinTree_CintLN_StJetSkimEvent.tagnum = -1 ;
  G__StSpinTree_CintLN_StJet.tagnum = -1 ;
  G__StSpinTree_CintLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__StSpinTree_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StSpinTree_CintLN_StChargedPionTrack.tagnum = -1 ;
  G__StSpinTree_CintLN_TPi0Candidate.tagnum = -1 ;
  G__StSpinTree_CintLN_THit.tagnum = -1 ;
  G__StSpinTree_CintLN_TMCPi0.tagnum = -1 ;
  G__StSpinTree_CintLN_TMCEta.tagnum = -1 ;
  G__StSpinTree_CintLN_TPi0Event.tagnum = -1 ;
  G__StSpinTree_CintLN_StSpinTreeReader.tagnum = -1 ;
  G__StSpinTree_CintLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableStSpinTree_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_string);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_StThreeVectorlEfloatgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_StGlobalElectron),sizeof(StGlobalElectron),-1,291584,(char*)NULL,G__setup_memvarStGlobalElectron,G__setup_memfuncStGlobalElectron);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TRef);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_StPrimaryElectron),sizeof(StPrimaryElectron),-1,291584,(char*)NULL,G__setup_memvarStPrimaryElectron,G__setup_memfuncStPrimaryElectron);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TEventList);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TChain);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_StJetSkimEvent);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_StJet);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_StChargedPionTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TPi0Candidate),sizeof(TPi0Candidate),-1,292608,(char*)NULL,G__setup_memvarTPi0Candidate,G__setup_memfuncTPi0Candidate);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_THit),sizeof(THit),-1,292608,(char*)NULL,G__setup_memvarTHit,G__setup_memfuncTHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TMCPi0),sizeof(TMCPi0),-1,292608,(char*)NULL,G__setup_memvarTMCPi0,G__setup_memfuncTMCPi0);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TMCEta),sizeof(TMCEta),-1,292608,(char*)NULL,G__setup_memvarTMCEta,G__setup_memfuncTMCEta);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_TPi0Event),sizeof(TPi0Event),-1,292096,(char*)NULL,G__setup_memvarTPi0Event,G__setup_memfuncTPi0Event);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_StSpinTreeReader),sizeof(StSpinTreeReader),-1,265984,(char*)NULL,G__setup_memvarStSpinTreeReader,G__setup_memfuncStSpinTreeReader);
   G__get_linked_tagnum_fwd(&G__StSpinTree_CintLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR);
}
extern "C" void G__cpp_setupStSpinTree_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupStSpinTree_Cint()");
  G__set_cpp_environmentStSpinTree_Cint();
  G__cpp_setup_tagtableStSpinTree_Cint();

  G__cpp_setup_inheritanceStSpinTree_Cint();

  G__cpp_setup_typetableStSpinTree_Cint();

  G__cpp_setup_memvarStSpinTree_Cint();

  G__cpp_setup_memfuncStSpinTree_Cint();
  G__cpp_setup_globalStSpinTree_Cint();
  G__cpp_setup_funcStSpinTree_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncStSpinTree_Cint();
  return;
}
class G__cpp_setup_initStSpinTree_Cint {
  public:
    G__cpp_setup_initStSpinTree_Cint() { G__add_setup_func("StSpinTree_Cint",(G__incsetup)(&G__cpp_setupStSpinTree_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initStSpinTree_Cint() { G__remove_setup_func("StSpinTree_Cint"); }
};
G__cpp_setup_initStSpinTree_Cint G__cpp_setup_initializerStSpinTree_Cint;

