//
// File generated by rootcint at Wed Jan  6 14:44:57 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOsl64_gcc482dIobjdIStRootdIStSpinPooldIStRandomSelectordIStRandomSelector_Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "StRandomSelector_Cint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void StRandomSelector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StRandomSelector(void *p = 0);
   static void *newArray_StRandomSelector(Long_t size, void *p);
   static void delete_StRandomSelector(void *p);
   static void deleteArray_StRandomSelector(void *p);
   static void destruct_StRandomSelector(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StRandomSelector*)
   {
      ::StRandomSelector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StRandomSelector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StRandomSelector", ::StRandomSelector::Class_Version(), ".sl64_gcc482/obj/StRoot/StSpinPool/StRandomSelector/StRandomSelector.h", 55,
                  typeid(::StRandomSelector), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StRandomSelector::Dictionary, isa_proxy, 4,
                  sizeof(::StRandomSelector) );
      instance.SetNew(&new_StRandomSelector);
      instance.SetNewArray(&newArray_StRandomSelector);
      instance.SetDelete(&delete_StRandomSelector);
      instance.SetDeleteArray(&deleteArray_StRandomSelector);
      instance.SetDestructor(&destruct_StRandomSelector);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StRandomSelector*)
   {
      return GenerateInitInstanceLocal((::StRandomSelector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StRandomSelector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr StRandomSelector::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StRandomSelector::Class_Name()
{
   return "StRandomSelector";
}

//______________________________________________________________________________
const char *StRandomSelector::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StRandomSelector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StRandomSelector::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StRandomSelector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StRandomSelector::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StRandomSelector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StRandomSelector::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StRandomSelector*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void StRandomSelector::Streamer(TBuffer &R__b)
{
   // Stream an object of class StRandomSelector.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StRandomSelector::Class(),this);
   } else {
      R__b.WriteClassBuffer(StRandomSelector::Class(),this);
   }
}

//______________________________________________________________________________
void StRandomSelector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StRandomSelector.
      TClass *R__cl = ::StRandomSelector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRand", &mRand);
      R__insp.InspectMember(mRand, "mRand.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTotalElemReturned", &mTotalElemReturned);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTotalElemSkipped", &mTotalElemSkipped);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mProbability", &mProbability);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAbsoluteThreshold", &mAbsoluteThreshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mContainer", &mContainer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mIterator", &mIterator);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StRandomSelector(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StRandomSelector : new ::StRandomSelector;
   }
   static void *newArray_StRandomSelector(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StRandomSelector[nElements] : new ::StRandomSelector[nElements];
   }
   // Wrapper around operator delete
   static void delete_StRandomSelector(void *p) {
      delete ((::StRandomSelector*)p);
   }
   static void deleteArray_StRandomSelector(void *p) {
      delete [] ((::StRandomSelector*)p);
   }
   static void destruct_StRandomSelector(void *p) {
      typedef ::StRandomSelector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StRandomSelector

/********************************************************
* .sl64_gcc482/obj/StRoot/StSpinPool/StRandomSelector/StRandomSelector_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableStRandomSelector_Cint();

extern "C" void G__set_cpp_environmentStRandomSelector_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("StRandomSelector.h");
  G__cpp_reset_tagtableStRandomSelector_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevStRandomSelector_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* StRandomSelector */
static int G__StRandomSelector_Cint_190_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRandomSelector* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRandomSelector(
(Double_t) G__double(libp->para[0]), (bool) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) StRandomSelector(
(Double_t) G__double(libp->para[0]), (bool) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRandomSelector((Double_t) G__double(libp->para[0]), (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) StRandomSelector((Double_t) G__double(libp->para[0]), (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRandomSelector((Double_t) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) StRandomSelector((Double_t) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StRandomSelector[n];
       } else {
         p = new((void*) gvp) StRandomSelector[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StRandomSelector;
       } else {
         p = new((void*) gvp) StRandomSelector;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StRandomSelector_CintLN_StRandomSelector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRandomSelector* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRandomSelector(
(TCollection*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (bool) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) StRandomSelector(
(TCollection*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (bool) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRandomSelector(
(TCollection*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (bool) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) StRandomSelector(
(TCollection*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (bool) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRandomSelector((TCollection*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) StRandomSelector((TCollection*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRandomSelector((TCollection*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) StRandomSelector((TCollection*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StRandomSelector_CintLN_StRandomSelector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRandomSelector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StRandomSelector(*(StRandomSelector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StRandomSelector(*(StRandomSelector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StRandomSelector_CintLN_StRandomSelector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRandomSelector*) G__getstructoffset())->Rewind();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((StRandomSelector*) G__getstructoffset())->Skip((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((StRandomSelector*) G__getstructoffset())->Skip();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StRandomSelector*) G__getstructoffset())->GetNext());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StRandomSelector*) G__getstructoffset())->GetNextRandom());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((StRandomSelector*) G__getstructoffset())->SetSeed((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((StRandomSelector*) G__getstructoffset())->SetSeed();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((StRandomSelector*) G__getstructoffset())->GetSeed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRandomSelector*) G__getstructoffset())->SetProbability((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((StRandomSelector*) G__getstructoffset())->GetProbability());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRandomSelector*) G__getstructoffset())->SetAbsoluteThreshold((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StRandomSelector*) G__getstructoffset())->GetAbsoluteThreshold());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StRandomSelector*) G__getstructoffset())->GetTotalNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StRandomSelector*) G__getstructoffset())->GetNumberReturned());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StRandomSelector*) G__getstructoffset())->GetNumberSkipped());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRandomSelector*) G__getstructoffset())->SetContainer((TCollection*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StRandomSelector*) G__getstructoffset())->GetContainer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StRandomSelector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRandomSelector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StRandomSelector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StRandomSelector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StRandomSelector*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRandomSelector*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRandomSelector*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRandomSelector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRandomSelector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StRandomSelector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRandomSelector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRandomSelector_Cint_190_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StRandomSelector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StRandomSelector G__TStRandomSelector;
static int G__StRandomSelector_Cint_190_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StRandomSelector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StRandomSelector*) (soff+(sizeof(StRandomSelector)*i)))->~G__TStRandomSelector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StRandomSelector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StRandomSelector*) (soff))->~G__TStRandomSelector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* StRandomSelector */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncStRandomSelector_Cint {
 public:
  G__Sizep2memfuncStRandomSelector_Cint(): p(&G__Sizep2memfuncStRandomSelector_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncStRandomSelector_Cint::*p)();
};

size_t G__get_sizep2memfuncStRandomSelector_Cint()
{
  G__Sizep2memfuncStRandomSelector_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceStRandomSelector_Cint() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableStRandomSelector_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__StRandomSelector_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StRandomSelector_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StRandomSelector_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StRandomSelector_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StRandomSelector_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__StRandomSelector_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StRandomSelector_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StRandomSelector_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StRandomSelector_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StRandomSelector_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* StRandomSelector */
static void G__setup_memvarStRandomSelector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StRandomSelector_CintLN_StRandomSelector));
   { StRandomSelector *p; p=(StRandomSelector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StRandomSelector_CintLN_TRandom3),-1,-1,2,"mRand=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"mTotalElemReturned=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"mTotalElemSkipped=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mProbability=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"mAbsoluteThreshold=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__StRandomSelector_CintLN_TCollection),-1,-1,2,"mContainer=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StRandomSelector_CintLN_TIterator),-1,-1,2,"mIterator=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StRandomSelector_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarStRandomSelector_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncStRandomSelector(void) {
   /* StRandomSelector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StRandomSelector_CintLN_StRandomSelector));
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"U 'TCollection' - 10 - newContainer d - 'Double_t' 0 - newProb "
"g - - 0 - newAt h - 'UInt_t' 0 - newSeed", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StRandomSelector",1641,G__StRandomSelector_Cint_190_0_2, 105, G__get_linked_tagnum(&G__StRandomSelector_CintLN_StRandomSelector), -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 '1.0' newProb g - - 0 'false' newAT "
"h - 'UInt_t' 0 '0' seed", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StRandomSelector",1641,G__StRandomSelector_Cint_190_0_3, 105, G__get_linked_tagnum(&G__StRandomSelector_CintLN_StRandomSelector), -1, 0, 4, 1, 1, 0, 
"U 'TCollection' - 0 - newContainer d - 'Double_t' 0 '1.0' newProb "
"g - - 0 'false' newAT h - 'UInt_t' 0 '0' seed", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StRandomSelector",1641,G__StRandomSelector_Cint_190_0_4, 105, G__get_linked_tagnum(&G__StRandomSelector_CintLN_StRandomSelector), -1, 0, 1, 1, 1, 0, "u 'StRandomSelector' - 11 - toCopy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rewind",617,G__StRandomSelector_Cint_190_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Skip",407,G__StRandomSelector_Cint_190_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' numberToSkip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNext",703,G__StRandomSelector_Cint_190_0_7, 85, G__get_linked_tagnum(&G__StRandomSelector_CintLN_TObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNextRandom",1312,G__StRandomSelector_Cint_190_0_8, 85, G__get_linked_tagnum(&G__StRandomSelector_CintLN_TObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSeed",685,G__StRandomSelector_Cint_190_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' seed", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSeed",673,G__StRandomSelector_Cint_190_0_10, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProbability",1453,G__StRandomSelector_Cint_190_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - newProb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProbability",1441,G__StRandomSelector_Cint_190_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAbsoluteThreshold",2072,G__StRandomSelector_Cint_190_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - newAT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAbsoluteThreshold",2060,G__StRandomSelector_Cint_190_0_14, 103, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalNumber",1421,G__StRandomSelector_Cint_190_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberReturned",1746,G__StRandomSelector_Cint_190_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberSkipped",1625,G__StRandomSelector_Cint_190_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetContainer",1231,G__StRandomSelector_Cint_190_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCollection' - 0 - newCont", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetContainer",1219,G__StRandomSelector_Cint_190_0_19, 85, G__get_linked_tagnum(&G__StRandomSelector_CintLN_TCollection), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StRandomSelector_Cint_190_0_20, 85, G__get_linked_tagnum(&G__StRandomSelector_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StRandomSelector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StRandomSelector_Cint_190_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRandomSelector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StRandomSelector_Cint_190_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StRandomSelector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StRandomSelector_Cint_190_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StRandomSelector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StRandomSelector_Cint_190_0_24, 85, G__get_linked_tagnum(&G__StRandomSelector_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StRandomSelector_Cint_190_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StRandomSelector_Cint_190_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StRandomSelector_Cint_190_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StRandomSelector_Cint_190_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRandomSelector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StRandomSelector_Cint_190_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StRandomSelector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StRandomSelector_Cint_190_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRandomSelector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StRandomSelector_Cint_190_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StRandomSelector::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StRandomSelector", 1767, G__StRandomSelector_Cint_190_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncStRandomSelector_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalStRandomSelector_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcStRandomSelector_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__StRandomSelector_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__StRandomSelector_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__StRandomSelector_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__StRandomSelector_CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__StRandomSelector_CintLN_TCollection = { "TCollection" , 99 , -1 };
G__linked_taginfo G__StRandomSelector_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__StRandomSelector_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StRandomSelector_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__StRandomSelector_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StRandomSelector_CintLN_TRandom3 = { "TRandom3" , 99 , -1 };
G__linked_taginfo G__StRandomSelector_CintLN_TIterator = { "TIterator" , 99 , -1 };
G__linked_taginfo G__StRandomSelector_CintLN_StRandomSelector = { "StRandomSelector" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableStRandomSelector_Cint() {
  G__StRandomSelector_CintLN_TClass.tagnum = -1 ;
  G__StRandomSelector_CintLN_TBuffer.tagnum = -1 ;
  G__StRandomSelector_CintLN_TMemberInspector.tagnum = -1 ;
  G__StRandomSelector_CintLN_TObject.tagnum = -1 ;
  G__StRandomSelector_CintLN_TCollection.tagnum = -1 ;
  G__StRandomSelector_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__StRandomSelector_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StRandomSelector_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__StRandomSelector_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StRandomSelector_CintLN_TRandom3.tagnum = -1 ;
  G__StRandomSelector_CintLN_TIterator.tagnum = -1 ;
  G__StRandomSelector_CintLN_StRandomSelector.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableStRandomSelector_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__StRandomSelector_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__StRandomSelector_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__StRandomSelector_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__StRandomSelector_CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__StRandomSelector_CintLN_TCollection);
   G__get_linked_tagnum_fwd(&G__StRandomSelector_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__StRandomSelector_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StRandomSelector_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__StRandomSelector_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StRandomSelector_CintLN_TRandom3);
   G__get_linked_tagnum_fwd(&G__StRandomSelector_CintLN_TIterator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StRandomSelector_CintLN_StRandomSelector),sizeof(StRandomSelector),-1,296704,(char*)NULL,G__setup_memvarStRandomSelector,G__setup_memfuncStRandomSelector);
}
extern "C" void G__cpp_setupStRandomSelector_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupStRandomSelector_Cint()");
  G__set_cpp_environmentStRandomSelector_Cint();
  G__cpp_setup_tagtableStRandomSelector_Cint();

  G__cpp_setup_inheritanceStRandomSelector_Cint();

  G__cpp_setup_typetableStRandomSelector_Cint();

  G__cpp_setup_memvarStRandomSelector_Cint();

  G__cpp_setup_memfuncStRandomSelector_Cint();
  G__cpp_setup_globalStRandomSelector_Cint();
  G__cpp_setup_funcStRandomSelector_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncStRandomSelector_Cint();
  return;
}
class G__cpp_setup_initStRandomSelector_Cint {
  public:
    G__cpp_setup_initStRandomSelector_Cint() { G__add_setup_func("StRandomSelector_Cint",(G__incsetup)(&G__cpp_setupStRandomSelector_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initStRandomSelector_Cint() { G__remove_setup_func("StRandomSelector_Cint"); }
};
G__cpp_setup_initStRandomSelector_Cint G__cpp_setup_initializerStRandomSelector_Cint;

