//
// File generated by rootcint at Sat Jan 23 06:53:52 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOsl64_gcc482dIobjdIStRootdIStSpinPooldIStWalgo2011dIStWalgo2011_Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "StWalgo2011_Cint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void WeveCluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WeveCluster(void *p = 0);
   static void *newArray_WeveCluster(Long_t size, void *p);
   static void delete_WeveCluster(void *p);
   static void deleteArray_WeveCluster(void *p);
   static void destruct_WeveCluster(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::WeveCluster*)
   {
      ::WeveCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WeveCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WeveCluster", ::WeveCluster::Class_Version(), ".sl64_gcc482/obj/StRoot/StSpinPool/StWalgo2011/Wevent2011.h", 23,
                  typeid(::WeveCluster), ::ROOT::DefineBehavior(ptr, ptr),
                  &::WeveCluster::Dictionary, isa_proxy, 4,
                  sizeof(::WeveCluster) );
      instance.SetNew(&new_WeveCluster);
      instance.SetNewArray(&newArray_WeveCluster);
      instance.SetDelete(&delete_WeveCluster);
      instance.SetDeleteArray(&deleteArray_WeveCluster);
      instance.SetDestructor(&destruct_WeveCluster);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::WeveCluster*)
   {
      return GenerateInitInstanceLocal((::WeveCluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WeveCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void WevePointTower_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WevePointTower(void *p = 0);
   static void *newArray_WevePointTower(Long_t size, void *p);
   static void delete_WevePointTower(void *p);
   static void deleteArray_WevePointTower(void *p);
   static void destruct_WevePointTower(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::WevePointTower*)
   {
      ::WevePointTower *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WevePointTower >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WevePointTower", ::WevePointTower::Class_Version(), ".sl64_gcc482/obj/StRoot/StSpinPool/StWalgo2011/Wevent2011.h", 48,
                  typeid(::WevePointTower), ::ROOT::DefineBehavior(ptr, ptr),
                  &::WevePointTower::Dictionary, isa_proxy, 4,
                  sizeof(::WevePointTower) );
      instance.SetNew(&new_WevePointTower);
      instance.SetNewArray(&newArray_WevePointTower);
      instance.SetDelete(&delete_WevePointTower);
      instance.SetDeleteArray(&deleteArray_WevePointTower);
      instance.SetDestructor(&destruct_WevePointTower);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::WevePointTower*)
   {
      return GenerateInitInstanceLocal((::WevePointTower*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WevePointTower*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void WeveEleTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WeveEleTrack(void *p = 0);
   static void *newArray_WeveEleTrack(Long_t size, void *p);
   static void delete_WeveEleTrack(void *p);
   static void deleteArray_WeveEleTrack(void *p);
   static void destruct_WeveEleTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::WeveEleTrack*)
   {
      ::WeveEleTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WeveEleTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WeveEleTrack", ::WeveEleTrack::Class_Version(), ".sl64_gcc482/obj/StRoot/StSpinPool/StWalgo2011/Wevent2011.h", 67,
                  typeid(::WeveEleTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::WeveEleTrack::Dictionary, isa_proxy, 4,
                  sizeof(::WeveEleTrack) );
      instance.SetNew(&new_WeveEleTrack);
      instance.SetNewArray(&newArray_WeveEleTrack);
      instance.SetDelete(&delete_WeveEleTrack);
      instance.SetDeleteArray(&deleteArray_WeveEleTrack);
      instance.SetDestructor(&destruct_WeveEleTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::WeveEleTrack*)
   {
      return GenerateInitInstanceLocal((::WeveEleTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WeveEleTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void WeveVertex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WeveVertex(void *p = 0);
   static void *newArray_WeveVertex(Long_t size, void *p);
   static void delete_WeveVertex(void *p);
   static void deleteArray_WeveVertex(void *p);
   static void destruct_WeveVertex(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::WeveVertex*)
   {
      ::WeveVertex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WeveVertex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WeveVertex", ::WeveVertex::Class_Version(), ".sl64_gcc482/obj/StRoot/StSpinPool/StWalgo2011/Wevent2011.h", 140,
                  typeid(::WeveVertex), ::ROOT::DefineBehavior(ptr, ptr),
                  &::WeveVertex::Dictionary, isa_proxy, 4,
                  sizeof(::WeveVertex) );
      instance.SetNew(&new_WeveVertex);
      instance.SetNewArray(&newArray_WeveVertex);
      instance.SetDelete(&delete_WeveVertex);
      instance.SetDeleteArray(&deleteArray_WeveVertex);
      instance.SetDestructor(&destruct_WeveVertex);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::WeveVertex*)
   {
      return GenerateInitInstanceLocal((::WeveVertex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WeveVertex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void WeveBEMC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WeveBEMC(void *p = 0);
   static void *newArray_WeveBEMC(Long_t size, void *p);
   static void delete_WeveBEMC(void *p);
   static void deleteArray_WeveBEMC(void *p);
   static void destruct_WeveBEMC(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::WeveBEMC*)
   {
      ::WeveBEMC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WeveBEMC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WeveBEMC", ::WeveBEMC::Class_Version(), ".sl64_gcc482/obj/StRoot/StSpinPool/StWalgo2011/Wevent2011.h", 167,
                  typeid(::WeveBEMC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::WeveBEMC::Dictionary, isa_proxy, 4,
                  sizeof(::WeveBEMC) );
      instance.SetNew(&new_WeveBEMC);
      instance.SetNewArray(&newArray_WeveBEMC);
      instance.SetDelete(&delete_WeveBEMC);
      instance.SetDeleteArray(&deleteArray_WeveBEMC);
      instance.SetDestructor(&destruct_WeveBEMC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::WeveBEMC*)
   {
      return GenerateInitInstanceLocal((::WeveBEMC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WeveBEMC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void WeveETOW_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WeveETOW(void *p = 0);
   static void *newArray_WeveETOW(Long_t size, void *p);
   static void delete_WeveETOW(void *p);
   static void deleteArray_WeveETOW(void *p);
   static void destruct_WeveETOW(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::WeveETOW*)
   {
      ::WeveETOW *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WeveETOW >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WeveETOW", ::WeveETOW::Class_Version(), ".sl64_gcc482/obj/StRoot/StSpinPool/StWalgo2011/Wevent2011.h", 229,
                  typeid(::WeveETOW), ::ROOT::DefineBehavior(ptr, ptr),
                  &::WeveETOW::Dictionary, isa_proxy, 4,
                  sizeof(::WeveETOW) );
      instance.SetNew(&new_WeveETOW);
      instance.SetNewArray(&newArray_WeveETOW);
      instance.SetDelete(&delete_WeveETOW);
      instance.SetDeleteArray(&deleteArray_WeveETOW);
      instance.SetDestructor(&destruct_WeveETOW);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::WeveETOW*)
   {
      return GenerateInitInstanceLocal((::WeveETOW*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WeveETOW*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void WeveEPRS_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WeveEPRS(void *p = 0);
   static void *newArray_WeveEPRS(Long_t size, void *p);
   static void delete_WeveEPRS(void *p);
   static void deleteArray_WeveEPRS(void *p);
   static void destruct_WeveEPRS(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::WeveEPRS*)
   {
      ::WeveEPRS *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WeveEPRS >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WeveEPRS", ::WeveEPRS::Class_Version(), ".sl64_gcc482/obj/StRoot/StSpinPool/StWalgo2011/Wevent2011.h", 257,
                  typeid(::WeveEPRS), ::ROOT::DefineBehavior(ptr, ptr),
                  &::WeveEPRS::Dictionary, isa_proxy, 4,
                  sizeof(::WeveEPRS) );
      instance.SetNew(&new_WeveEPRS);
      instance.SetNewArray(&newArray_WeveEPRS);
      instance.SetDelete(&delete_WeveEPRS);
      instance.SetDeleteArray(&deleteArray_WeveEPRS);
      instance.SetDestructor(&destruct_WeveEPRS);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::WeveEPRS*)
   {
      return GenerateInitInstanceLocal((::WeveEPRS*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WeveEPRS*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void WeveESMD_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WeveESMD(void *p = 0);
   static void *newArray_WeveESMD(Long_t size, void *p);
   static void delete_WeveESMD(void *p);
   static void deleteArray_WeveESMD(void *p);
   static void destruct_WeveESMD(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::WeveESMD*)
   {
      ::WeveESMD *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WeveESMD >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WeveESMD", ::WeveESMD::Class_Version(), ".sl64_gcc482/obj/StRoot/StSpinPool/StWalgo2011/Wevent2011.h", 279,
                  typeid(::WeveESMD), ::ROOT::DefineBehavior(ptr, ptr),
                  &::WeveESMD::Dictionary, isa_proxy, 4,
                  sizeof(::WeveESMD) );
      instance.SetNew(&new_WeveESMD);
      instance.SetNewArray(&newArray_WeveESMD);
      instance.SetDelete(&delete_WeveESMD);
      instance.SetDeleteArray(&deleteArray_WeveESMD);
      instance.SetDestructor(&destruct_WeveESMD);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::WeveESMD*)
   {
      return GenerateInitInstanceLocal((::WeveESMD*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WeveESMD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Wevent2011_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Wevent2011(void *p = 0);
   static void *newArray_Wevent2011(Long_t size, void *p);
   static void delete_Wevent2011(void *p);
   static void deleteArray_Wevent2011(void *p);
   static void destruct_Wevent2011(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Wevent2011*)
   {
      ::Wevent2011 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Wevent2011 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Wevent2011", ::Wevent2011::Class_Version(), ".sl64_gcc482/obj/StRoot/StSpinPool/StWalgo2011/Wevent2011.h", 302,
                  typeid(::Wevent2011), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Wevent2011::Dictionary, isa_proxy, 4,
                  sizeof(::Wevent2011) );
      instance.SetNew(&new_Wevent2011);
      instance.SetNewArray(&newArray_Wevent2011);
      instance.SetDelete(&delete_Wevent2011);
      instance.SetDeleteArray(&deleteArray_Wevent2011);
      instance.SetDestructor(&destruct_Wevent2011);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Wevent2011*)
   {
      return GenerateInitInstanceLocal((::Wevent2011*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Wevent2011*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void St2011pubWanaMaker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_St2011pubWanaMaker(void *p = 0);
   static void *newArray_St2011pubWanaMaker(Long_t size, void *p);
   static void delete_St2011pubWanaMaker(void *p);
   static void deleteArray_St2011pubWanaMaker(void *p);
   static void destruct_St2011pubWanaMaker(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::St2011pubWanaMaker*)
   {
      ::St2011pubWanaMaker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::St2011pubWanaMaker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("St2011pubWanaMaker", ::St2011pubWanaMaker::Class_Version(), ".sl64_gcc482/obj/StRoot/StSpinPool/StWalgo2011/St2011pubWanaMaker.h", 25,
                  typeid(::St2011pubWanaMaker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::St2011pubWanaMaker::Dictionary, isa_proxy, 4,
                  sizeof(::St2011pubWanaMaker) );
      instance.SetNew(&new_St2011pubWanaMaker);
      instance.SetNewArray(&newArray_St2011pubWanaMaker);
      instance.SetDelete(&delete_St2011pubWanaMaker);
      instance.SetDeleteArray(&deleteArray_St2011pubWanaMaker);
      instance.SetDestructor(&destruct_St2011pubWanaMaker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::St2011pubWanaMaker*)
   {
      return GenerateInitInstanceLocal((::St2011pubWanaMaker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::St2011pubWanaMaker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void St2011pubSpinMaker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_St2011pubSpinMaker(void *p = 0);
   static void *newArray_St2011pubSpinMaker(Long_t size, void *p);
   static void delete_St2011pubSpinMaker(void *p);
   static void deleteArray_St2011pubSpinMaker(void *p);
   static void destruct_St2011pubSpinMaker(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::St2011pubSpinMaker*)
   {
      ::St2011pubSpinMaker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::St2011pubSpinMaker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("St2011pubSpinMaker", ::St2011pubSpinMaker::Class_Version(), ".sl64_gcc482/obj/StRoot/StSpinPool/StWalgo2011/St2011pubSpinMaker.h", 28,
                  typeid(::St2011pubSpinMaker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::St2011pubSpinMaker::Dictionary, isa_proxy, 4,
                  sizeof(::St2011pubSpinMaker) );
      instance.SetNew(&new_St2011pubSpinMaker);
      instance.SetNewArray(&newArray_St2011pubSpinMaker);
      instance.SetDelete(&delete_St2011pubSpinMaker);
      instance.SetDeleteArray(&deleteArray_St2011pubSpinMaker);
      instance.SetDestructor(&destruct_St2011pubSpinMaker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::St2011pubSpinMaker*)
   {
      return GenerateInitInstanceLocal((::St2011pubSpinMaker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::St2011pubSpinMaker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void St2011pubMcMaker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_St2011pubMcMaker(void *p = 0);
   static void *newArray_St2011pubMcMaker(Long_t size, void *p);
   static void delete_St2011pubMcMaker(void *p);
   static void deleteArray_St2011pubMcMaker(void *p);
   static void destruct_St2011pubMcMaker(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::St2011pubMcMaker*)
   {
      ::St2011pubMcMaker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::St2011pubMcMaker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("St2011pubMcMaker", ::St2011pubMcMaker::Class_Version(), ".sl64_gcc482/obj/StRoot/StSpinPool/StWalgo2011/St2011pubMcMaker.h", 30,
                  typeid(::St2011pubMcMaker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::St2011pubMcMaker::Dictionary, isa_proxy, 4,
                  sizeof(::St2011pubMcMaker) );
      instance.SetNew(&new_St2011pubMcMaker);
      instance.SetNewArray(&newArray_St2011pubMcMaker);
      instance.SetDelete(&delete_St2011pubMcMaker);
      instance.SetDeleteArray(&deleteArray_St2011pubMcMaker);
      instance.SetDestructor(&destruct_St2011pubMcMaker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::St2011pubMcMaker*)
   {
      return GenerateInitInstanceLocal((::St2011pubMcMaker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::St2011pubMcMaker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void St2011WMaker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_St2011WMaker(void *p = 0);
   static void *newArray_St2011WMaker(Long_t size, void *p);
   static void delete_St2011WMaker(void *p);
   static void deleteArray_St2011WMaker(void *p);
   static void destruct_St2011WMaker(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::St2011WMaker*)
   {
      ::St2011WMaker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::St2011WMaker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("St2011WMaker", ::St2011WMaker::Class_Version(), ".sl64_gcc482/obj/StRoot/StSpinPool/StWalgo2011/St2011WMaker.h", 49,
                  typeid(::St2011WMaker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::St2011WMaker::Dictionary, isa_proxy, 4,
                  sizeof(::St2011WMaker) );
      instance.SetNew(&new_St2011WMaker);
      instance.SetNewArray(&newArray_St2011WMaker);
      instance.SetDelete(&delete_St2011WMaker);
      instance.SetDeleteArray(&deleteArray_St2011WMaker);
      instance.SetDestructor(&destruct_St2011WMaker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::St2011WMaker*)
   {
      return GenerateInitInstanceLocal((::St2011WMaker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::St2011WMaker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void St2011WlumiMaker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_St2011WlumiMaker(void *p = 0);
   static void *newArray_St2011WlumiMaker(Long_t size, void *p);
   static void delete_St2011WlumiMaker(void *p);
   static void deleteArray_St2011WlumiMaker(void *p);
   static void destruct_St2011WlumiMaker(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::St2011WlumiMaker*)
   {
      ::St2011WlumiMaker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::St2011WlumiMaker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("St2011WlumiMaker", ::St2011WlumiMaker::Class_Version(), ".sl64_gcc482/obj/StRoot/StSpinPool/StWalgo2011/St2011WlumiMaker.h", 27,
                  typeid(::St2011WlumiMaker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::St2011WlumiMaker::Dictionary, isa_proxy, 4,
                  sizeof(::St2011WlumiMaker) );
      instance.SetNew(&new_St2011WlumiMaker);
      instance.SetNewArray(&newArray_St2011WlumiMaker);
      instance.SetDelete(&delete_St2011WlumiMaker);
      instance.SetDeleteArray(&deleteArray_St2011WlumiMaker);
      instance.SetDestructor(&destruct_St2011WlumiMaker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::St2011WlumiMaker*)
   {
      return GenerateInitInstanceLocal((::St2011WlumiMaker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::St2011WlumiMaker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void St2011ZMaker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_St2011ZMaker(void *p = 0);
   static void *newArray_St2011ZMaker(Long_t size, void *p);
   static void delete_St2011ZMaker(void *p);
   static void deleteArray_St2011ZMaker(void *p);
   static void destruct_St2011ZMaker(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::St2011ZMaker*)
   {
      ::St2011ZMaker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::St2011ZMaker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("St2011ZMaker", ::St2011ZMaker::Class_Version(), ".sl64_gcc482/obj/StRoot/StSpinPool/StWalgo2011/St2011ZMaker.h", 26,
                  typeid(::St2011ZMaker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::St2011ZMaker::Dictionary, isa_proxy, 4,
                  sizeof(::St2011ZMaker) );
      instance.SetNew(&new_St2011ZMaker);
      instance.SetNewArray(&newArray_St2011ZMaker);
      instance.SetDelete(&delete_St2011ZMaker);
      instance.SetDeleteArray(&deleteArray_St2011ZMaker);
      instance.SetDestructor(&destruct_St2011ZMaker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::St2011ZMaker*)
   {
      return GenerateInitInstanceLocal((::St2011ZMaker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::St2011ZMaker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr WeveCluster::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *WeveCluster::Class_Name()
{
   return "WeveCluster";
}

//______________________________________________________________________________
const char *WeveCluster::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::WeveCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WeveCluster::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::WeveCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WeveCluster::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::WeveCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WeveCluster::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::WeveCluster*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr WevePointTower::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *WevePointTower::Class_Name()
{
   return "WevePointTower";
}

//______________________________________________________________________________
const char *WevePointTower::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::WevePointTower*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WevePointTower::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::WevePointTower*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WevePointTower::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::WevePointTower*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WevePointTower::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::WevePointTower*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr WeveEleTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *WeveEleTrack::Class_Name()
{
   return "WeveEleTrack";
}

//______________________________________________________________________________
const char *WeveEleTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::WeveEleTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WeveEleTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::WeveEleTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WeveEleTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::WeveEleTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WeveEleTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::WeveEleTrack*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr WeveVertex::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *WeveVertex::Class_Name()
{
   return "WeveVertex";
}

//______________________________________________________________________________
const char *WeveVertex::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::WeveVertex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WeveVertex::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::WeveVertex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WeveVertex::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::WeveVertex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WeveVertex::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::WeveVertex*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr WeveBEMC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *WeveBEMC::Class_Name()
{
   return "WeveBEMC";
}

//______________________________________________________________________________
const char *WeveBEMC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::WeveBEMC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WeveBEMC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::WeveBEMC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WeveBEMC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::WeveBEMC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WeveBEMC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::WeveBEMC*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr WeveETOW::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *WeveETOW::Class_Name()
{
   return "WeveETOW";
}

//______________________________________________________________________________
const char *WeveETOW::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::WeveETOW*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WeveETOW::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::WeveETOW*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WeveETOW::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::WeveETOW*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WeveETOW::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::WeveETOW*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr WeveEPRS::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *WeveEPRS::Class_Name()
{
   return "WeveEPRS";
}

//______________________________________________________________________________
const char *WeveEPRS::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::WeveEPRS*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WeveEPRS::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::WeveEPRS*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WeveEPRS::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::WeveEPRS*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WeveEPRS::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::WeveEPRS*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr WeveESMD::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *WeveESMD::Class_Name()
{
   return "WeveESMD";
}

//______________________________________________________________________________
const char *WeveESMD::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::WeveESMD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WeveESMD::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::WeveESMD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WeveESMD::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::WeveESMD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WeveESMD::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::WeveESMD*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Wevent2011::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Wevent2011::Class_Name()
{
   return "Wevent2011";
}

//______________________________________________________________________________
const char *Wevent2011::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Wevent2011*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Wevent2011::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Wevent2011*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Wevent2011::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Wevent2011*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Wevent2011::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Wevent2011*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr St2011pubWanaMaker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *St2011pubWanaMaker::Class_Name()
{
   return "St2011pubWanaMaker";
}

//______________________________________________________________________________
const char *St2011pubWanaMaker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::St2011pubWanaMaker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int St2011pubWanaMaker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::St2011pubWanaMaker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void St2011pubWanaMaker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::St2011pubWanaMaker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *St2011pubWanaMaker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::St2011pubWanaMaker*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr St2011pubSpinMaker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *St2011pubSpinMaker::Class_Name()
{
   return "St2011pubSpinMaker";
}

//______________________________________________________________________________
const char *St2011pubSpinMaker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::St2011pubSpinMaker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int St2011pubSpinMaker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::St2011pubSpinMaker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void St2011pubSpinMaker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::St2011pubSpinMaker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *St2011pubSpinMaker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::St2011pubSpinMaker*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr St2011pubMcMaker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *St2011pubMcMaker::Class_Name()
{
   return "St2011pubMcMaker";
}

//______________________________________________________________________________
const char *St2011pubMcMaker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::St2011pubMcMaker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int St2011pubMcMaker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::St2011pubMcMaker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void St2011pubMcMaker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::St2011pubMcMaker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *St2011pubMcMaker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::St2011pubMcMaker*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr St2011WMaker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *St2011WMaker::Class_Name()
{
   return "St2011WMaker";
}

//______________________________________________________________________________
const char *St2011WMaker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::St2011WMaker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int St2011WMaker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::St2011WMaker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void St2011WMaker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::St2011WMaker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *St2011WMaker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::St2011WMaker*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr St2011WlumiMaker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *St2011WlumiMaker::Class_Name()
{
   return "St2011WlumiMaker";
}

//______________________________________________________________________________
const char *St2011WlumiMaker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::St2011WlumiMaker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int St2011WlumiMaker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::St2011WlumiMaker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void St2011WlumiMaker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::St2011WlumiMaker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *St2011WlumiMaker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::St2011WlumiMaker*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr St2011ZMaker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *St2011ZMaker::Class_Name()
{
   return "St2011ZMaker";
}

//______________________________________________________________________________
const char *St2011ZMaker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::St2011ZMaker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int St2011ZMaker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::St2011ZMaker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void St2011ZMaker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::St2011ZMaker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *St2011ZMaker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::St2011ZMaker*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void St2011WMaker::Streamer(TBuffer &R__b)
{
   // Stream an object of class St2011WMaker.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(St2011WMaker::Class(),this);
   } else {
      R__b.WriteClassBuffer(St2011WMaker::Class(),this);
   }
}

//______________________________________________________________________________
void St2011WMaker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class St2011WMaker.
      TClass *R__cl = ::St2011WMaker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMuDstMaker", &mMuDstMaker);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mJetTreeBranch", &mJetTreeBranch);
      R__insp.InspectMember(mJetTreeBranch, "mJetTreeBranch.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mJetTreeBranch_noEEMC", &mJetTreeBranch_noEEMC);
      R__insp.InspectMember(mJetTreeBranch_noEEMC, "mJetTreeBranch_noEEMC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wEve", &wEve);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mWtree", &mWtree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTreeName", &mTreeName);
      R__insp.InspectMember(mTreeName, "mTreeName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mTreeFile", &mTreeFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wDisaply", &wDisaply);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTpcFilter[24]", mTpcFilter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTpcFilterE[24]", mTpcFilterE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nInpEve", &nInpEve);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTrigEve", &nTrigEve);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nAccEve", &nAccEve);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRunNo", &mRunNo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nRun", &nRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isMC", &isMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tfirst", &Tfirst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tlast", &Tlast);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_l0emulAdcThresh", &par_l0emulAdcThresh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_l2emulSeedThresh", &par_l2emulSeedThresh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_l2emulClusterThresh", &par_l2emulClusterThresh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_l2bwTrgID", &par_l2bwTrgID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parE_l2ewTrgID", &parE_l2ewTrgID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_vertexZ", &par_vertexZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_minPileupVert", &par_minPileupVert);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_nFitPts", &par_nFitPts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parE_nFitPts", &parE_nFitPts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_nHitFrac", &par_nHitFrac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_trackRin", &par_trackRin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_trackRout", &par_trackRout);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_trackPt", &par_trackPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parE_nHitFrac", &parE_nHitFrac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parE_trackRin", &parE_trackRin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parE_trackRout", &parE_trackRout);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parE_trackPt", &parE_trackPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_kSigPed", &par_kSigPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_AdcThres", &par_AdcThres);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_maxADC", &par_maxADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_clustET", &par_clustET);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parE_clustET", &parE_clustET);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_clustFrac24", &par_clustFrac24);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_nearTotEtFrac", &par_nearTotEtFrac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parE_clustFrac24", &parE_clustFrac24);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parE_nearTotEtFrac", &parE_nearTotEtFrac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_nearDeltaR", &par_nearDeltaR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_awayDeltaPhi", &par_awayDeltaPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_delR3D", &par_delR3D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parE_delR3D", &parE_delR3D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_highET", &par_highET);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parE_highET", &parE_highET);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_ptBalance", &par_ptBalance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parE_ptBalance", &parE_ptBalance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_awayET", &par_awayET);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parE_awayET", &parE_awayET);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_leptonEtaLow", &par_leptonEtaLow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_leptonEtaHigh", &par_leptonEtaHigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parE_leptonEtaLow", &parE_leptonEtaLow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parE_leptonEtaHigh", &parE_leptonEtaHigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parE_trackEtaMin", &parE_trackEtaMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parE_nSmdStrip", &parE_nSmdStrip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parE_esmdGL", &parE_esmdGL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parE_esmdWL", &parE_esmdWL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parE_smdRatio", &parE_smdRatio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_QET2PTlow", &par_QET2PTlow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_QET2PThigh", &par_QET2PThigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parE_QET2PTlow", &parE_QET2PTlow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parE_QET2PThigh", &parE_QET2PThigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_etowScale", &par_etowScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_btowScale", &par_btowScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coreTitle", &coreTitle);
      R__insp.InspectMember(coreTitle, "coreTitle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_DsmThres", &par_DsmThres);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parE_DsmThres", &parE_DsmThres);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_maxDisplEve", &par_maxDisplEve);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mBarrelTables", &mBarrelTables);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mBtowGeom", &mBtowGeom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mBSmdGeom[2]", &mBSmdGeom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mapBtowIJ2ID[4800]", mapBtowIJ2ID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "positionBtow[4800]", positionBtow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "positionBsmd[2][18000]", positionBsmd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mDbE", &mDbE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*spinDb", &spinDb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*geomE", &geomE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*geoSmd", &geoSmd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "positionEtow[60][12]", positionEtow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mJetEvent", &mJetEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mJetEvent_noEEMC", &mJetEvent_noEEMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*HList", &HList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*HListTpc", &HListTpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hA[400]", &hA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hE[300]", &hE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hbxIdeal", &hbxIdeal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "index", &index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "indexJet", &indexJet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mTreeChain", &mTreeChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mJetTreeChain", &mJetTreeChain);
      StMaker::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_St2011WMaker(void *p) {
      return  p ? new(p) ::St2011WMaker : new ::St2011WMaker;
   }
   static void *newArray_St2011WMaker(Long_t nElements, void *p) {
      return p ? new(p) ::St2011WMaker[nElements] : new ::St2011WMaker[nElements];
   }
   // Wrapper around operator delete
   static void delete_St2011WMaker(void *p) {
      delete ((::St2011WMaker*)p);
   }
   static void deleteArray_St2011WMaker(void *p) {
      delete [] ((::St2011WMaker*)p);
   }
   static void destruct_St2011WMaker(void *p) {
      typedef ::St2011WMaker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::St2011WMaker

//______________________________________________________________________________
void St2011WlumiMaker::Streamer(TBuffer &R__b)
{
   // Stream an object of class St2011WlumiMaker.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(St2011WlumiMaker::Class(),this);
   } else {
      R__b.WriteClassBuffer(St2011WlumiMaker::Class(),this);
   }
}

//______________________________________________________________________________
void St2011WlumiMaker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class St2011WlumiMaker.
      TClass *R__cl = ::St2011WlumiMaker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wMK", &wMK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*HList", &HList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hA[8]", &hA);
      StMaker::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_St2011WlumiMaker(void *p) {
      return  p ? new(p) ::St2011WlumiMaker : new ::St2011WlumiMaker;
   }
   static void *newArray_St2011WlumiMaker(Long_t nElements, void *p) {
      return p ? new(p) ::St2011WlumiMaker[nElements] : new ::St2011WlumiMaker[nElements];
   }
   // Wrapper around operator delete
   static void delete_St2011WlumiMaker(void *p) {
      delete ((::St2011WlumiMaker*)p);
   }
   static void deleteArray_St2011WlumiMaker(void *p) {
      delete [] ((::St2011WlumiMaker*)p);
   }
   static void destruct_St2011WlumiMaker(void *p) {
      typedef ::St2011WlumiMaker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::St2011WlumiMaker

//______________________________________________________________________________
void St2011ZMaker::Streamer(TBuffer &R__b)
{
   // Stream an object of class St2011ZMaker.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(St2011ZMaker::Class(),this);
   } else {
      R__b.WriteClassBuffer(St2011ZMaker::Class(),this);
   }
}

//______________________________________________________________________________
void St2011ZMaker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class St2011ZMaker.
      TClass *R__cl = ::St2011ZMaker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_nearTotEtFracZ", &par_nearTotEtFracZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_clusterEtZ", &par_clusterEtZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_delPhi12", &par_delPhi12);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_minMassZ", &par_minMassZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_maxMassZ", &par_maxMassZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wMK", &wMK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*muMK", &muMK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*HList", &HList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hA[100]", &hA);
      StMaker::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_St2011ZMaker(void *p) {
      return  p ? new(p) ::St2011ZMaker : new ::St2011ZMaker;
   }
   static void *newArray_St2011ZMaker(Long_t nElements, void *p) {
      return p ? new(p) ::St2011ZMaker[nElements] : new ::St2011ZMaker[nElements];
   }
   // Wrapper around operator delete
   static void delete_St2011ZMaker(void *p) {
      delete ((::St2011ZMaker*)p);
   }
   static void deleteArray_St2011ZMaker(void *p) {
      delete [] ((::St2011ZMaker*)p);
   }
   static void destruct_St2011ZMaker(void *p) {
      typedef ::St2011ZMaker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::St2011ZMaker

//______________________________________________________________________________
void St2011pubMcMaker::Streamer(TBuffer &R__b)
{
   // Stream an object of class St2011pubMcMaker.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(St2011pubMcMaker::Class(),this);
   } else {
      R__b.WriteClassBuffer(St2011pubMcMaker::Class(),this);
   }
}

//______________________________________________________________________________
void St2011pubMcMaker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class St2011pubMcMaker.
      TClass *R__cl = ::St2011pubMcMaker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wMK", &wMK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*HList", &HList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hA[128]", &hA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mWP", &mWP);
      R__insp.InspectMember(mWP, "mWP.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNeutrinoP", &mNeutrinoP);
      R__insp.InspectMember(mNeutrinoP, "mNeutrinoP.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mElectronP", &mElectronP);
      R__insp.InspectMember(mElectronP, "mElectronP.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mVertex", &mVertex);
      R__insp.InspectMember(mVertex, "mVertex.");
      StMaker::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_St2011pubMcMaker(void *p) {
      return  p ? new(p) ::St2011pubMcMaker : new ::St2011pubMcMaker;
   }
   static void *newArray_St2011pubMcMaker(Long_t nElements, void *p) {
      return p ? new(p) ::St2011pubMcMaker[nElements] : new ::St2011pubMcMaker[nElements];
   }
   // Wrapper around operator delete
   static void delete_St2011pubMcMaker(void *p) {
      delete ((::St2011pubMcMaker*)p);
   }
   static void deleteArray_St2011pubMcMaker(void *p) {
      delete [] ((::St2011pubMcMaker*)p);
   }
   static void destruct_St2011pubMcMaker(void *p) {
      typedef ::St2011pubMcMaker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::St2011pubMcMaker

//______________________________________________________________________________
void St2011pubSpinMaker::Streamer(TBuffer &R__b)
{
   // Stream an object of class St2011pubSpinMaker.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(St2011pubSpinMaker::Class(),this);
   } else {
      R__b.WriteClassBuffer(St2011pubSpinMaker::Class(),this);
   }
}

//______________________________________________________________________________
void St2011pubSpinMaker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class St2011pubSpinMaker.
      TClass *R__cl = ::St2011pubSpinMaker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_QET2PTcut", &par_QET2PTcut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_leptonEta1", &par_leptonEta1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_leptonEta2", &par_leptonEta2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_useNoEEMC", &par_useNoEEMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parE_leptonEta1", &parE_leptonEta1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parE_leptonEta2", &parE_leptonEta2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wMK", &wMK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "core", &core);
      R__insp.InspectMember(core, "core.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coreTitle", &coreTitle);
      R__insp.InspectMember(coreTitle, "coreTitle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*HList", &HList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hA[35]", &hA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hE[35]", &hE);
      StMaker::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_St2011pubSpinMaker(void *p) {
      return  p ? new(p) ::St2011pubSpinMaker : new ::St2011pubSpinMaker;
   }
   static void *newArray_St2011pubSpinMaker(Long_t nElements, void *p) {
      return p ? new(p) ::St2011pubSpinMaker[nElements] : new ::St2011pubSpinMaker[nElements];
   }
   // Wrapper around operator delete
   static void delete_St2011pubSpinMaker(void *p) {
      delete ((::St2011pubSpinMaker*)p);
   }
   static void deleteArray_St2011pubSpinMaker(void *p) {
      delete [] ((::St2011pubSpinMaker*)p);
   }
   static void destruct_St2011pubSpinMaker(void *p) {
      typedef ::St2011pubSpinMaker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::St2011pubSpinMaker

//______________________________________________________________________________
void St2011pubWanaMaker::Streamer(TBuffer &R__b)
{
   // Stream an object of class St2011pubWanaMaker.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(St2011pubWanaMaker::Class(),this);
   } else {
      R__b.WriteClassBuffer(St2011pubWanaMaker::Class(),this);
   }
}

//______________________________________________________________________________
void St2011pubWanaMaker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class St2011pubWanaMaker.
      TClass *R__cl = ::St2011pubWanaMaker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_highET", &par_highET);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wMK", &wMK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMappB", &mMappB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*HList", &HList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hA[50]", &hA);
      StMaker::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_St2011pubWanaMaker(void *p) {
      return  p ? new(p) ::St2011pubWanaMaker : new ::St2011pubWanaMaker;
   }
   static void *newArray_St2011pubWanaMaker(Long_t nElements, void *p) {
      return p ? new(p) ::St2011pubWanaMaker[nElements] : new ::St2011pubWanaMaker[nElements];
   }
   // Wrapper around operator delete
   static void delete_St2011pubWanaMaker(void *p) {
      delete ((::St2011pubWanaMaker*)p);
   }
   static void deleteArray_St2011pubWanaMaker(void *p) {
      delete [] ((::St2011pubWanaMaker*)p);
   }
   static void destruct_St2011pubWanaMaker(void *p) {
      typedef ::St2011pubWanaMaker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::St2011pubWanaMaker

//______________________________________________________________________________
void WeveCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class WeveCluster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WeveCluster::Class(),this);
   } else {
      R__b.WriteClassBuffer(WeveCluster::Class(),this);
   }
}

//______________________________________________________________________________
void WeveCluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WeveCluster.
      TClass *R__cl = ::WeveCluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy", &energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ET", &ET);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adcSum", &adcSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTower", &nTower);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iEta", &iEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iPhi", &iPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "position", &position);
      R__insp.InspectMember(position, "position.");
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_WeveCluster(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::WeveCluster : new ::WeveCluster;
   }
   static void *newArray_WeveCluster(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::WeveCluster[nElements] : new ::WeveCluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_WeveCluster(void *p) {
      delete ((::WeveCluster*)p);
   }
   static void deleteArray_WeveCluster(void *p) {
      delete [] ((::WeveCluster*)p);
   }
   static void destruct_WeveCluster(void *p) {
      typedef ::WeveCluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::WeveCluster

//______________________________________________________________________________
void WevePointTower::Streamer(TBuffer &R__b)
{
   // Stream an object of class WevePointTower.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WevePointTower::Class(),this);
   } else {
      R__b.WriteClassBuffer(WevePointTower::Class(),this);
   }
}

//______________________________________________________________________________
void WevePointTower::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WevePointTower.
      TClass *R__cl = ::WevePointTower::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R", &R);
      R__insp.InspectMember(R, "R.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Rglob", &Rglob);
      R__insp.InspectMember(Rglob, "Rglob.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iEta", &iEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iPhi", &iPhi);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_WevePointTower(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::WevePointTower : new ::WevePointTower;
   }
   static void *newArray_WevePointTower(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::WevePointTower[nElements] : new ::WevePointTower[nElements];
   }
   // Wrapper around operator delete
   static void delete_WevePointTower(void *p) {
      delete ((::WevePointTower*)p);
   }
   static void deleteArray_WevePointTower(void *p) {
      delete [] ((::WevePointTower*)p);
   }
   static void destruct_WevePointTower(void *p) {
      typedef ::WevePointTower current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::WevePointTower

//______________________________________________________________________________
void WeveEleTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class WeveEleTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WeveEleTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(WeveEleTrack::Class(),this);
   }
}

//______________________________________________________________________________
void WeveEleTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WeveEleTrack.
      TClass *R__cl = ::WeveEleTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isMatch2Cl", &isMatch2Cl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pointTower", &pointTower);
      R__insp.InspectMember(pointTower, "pointTower.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*glMuTrack", &glMuTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*prMuTrack", &prMuTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cluster", &cluster);
      R__insp.InspectMember(cluster, "cluster.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cl4x4", &cl4x4);
      R__insp.InspectMember(cl4x4, "cl4x4.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "primP", &primP);
      R__insp.InspectMember(primP, "primP.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nearTpcPT", &nearTpcPT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nearEmcET", &nearEmcET);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nearBtowET", &nearBtowET);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nearEtowET", &nearEtowET);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "smallNearTpcPT", &smallNearTpcPT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "awayTpcPT", &awayTpcPT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "awayEmcET", &awayEmcET);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "awayBtowET", &awayBtowET);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "awayEtowET", &awayEtowET);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nearTotET", &nearTotET);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "awayTotET", &awayTotET);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nearTotET_noEEMC", &nearTotET_noEEMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "awayTotET_noEEMC", &awayTotET_noEEMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptBalance", &ptBalance);
      R__insp.InspectMember(ptBalance, "ptBalance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptBalance_noEEMC", &ptBalance_noEEMC);
      R__insp.InspectMember(ptBalance_noEEMC, "ptBalance_noEEMC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sPtBalance", &sPtBalance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sPtBalance_noEEMC", &sPtBalance_noEEMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sPtBalance2", &sPtBalance2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sPtBalance_noEEMC2", &sPtBalance_noEEMC2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jetCount", &jetCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadronicRecoil", &hadronicRecoil);
      R__insp.InspectMember(hadronicRecoil, "hadronicRecoil.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hitSector", &hitSector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "esmdGlobStrip[2]", esmdGlobStrip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "esmdShower[2][41]", esmdShower);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "esmdDca[2]", esmdDca);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "esmdDcaGlob[2]", esmdDcaGlob);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "esmdE[2]", esmdE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "esmdEsum7[2]", esmdEsum7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "esmdNhit[2]", esmdNhit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "esmdPeakSumE[2]", esmdPeakSumE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "esmdPeakOffset[2]", esmdPeakOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "esmdXPcentroid", &esmdXPcentroid);
      R__insp.InspectMember(esmdXPcentroid, "esmdXPcentroid.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "esmdMaxADC", &esmdMaxADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "enePre1", &enePre1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "enePre2", &enePre2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "enePost", &enePost);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_WeveEleTrack(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::WeveEleTrack : new ::WeveEleTrack;
   }
   static void *newArray_WeveEleTrack(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::WeveEleTrack[nElements] : new ::WeveEleTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_WeveEleTrack(void *p) {
      delete ((::WeveEleTrack*)p);
   }
   static void deleteArray_WeveEleTrack(void *p) {
      delete [] ((::WeveEleTrack*)p);
   }
   static void destruct_WeveEleTrack(void *p) {
      typedef ::WeveEleTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::WeveEleTrack

//______________________________________________________________________________
void WeveVertex::Streamer(TBuffer &R__b)
{
   // Stream an object of class WeveVertex.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WeveVertex::Class(),this);
   } else {
      R__b.WriteClassBuffer(WeveVertex::Class(),this);
   }
}

//______________________________________________________________________________
void WeveVertex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WeveVertex.
      TClass *R__cl = ::WeveVertex::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z", &z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rank", &rank);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "funnyRank", &funnyRank);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nEEMCMatch", &nEEMCMatch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eleTrack", (void*)&eleTrack);
      R__insp.InspectMember("vector<WeveEleTrack>", (void*)&eleTrack, "eleTrack.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "prTrList", (void*)&prTrList);
      R__insp.InspectMember("vector<StMuTrack*>", (void*)&prTrList, "prTrList.", false);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_WeveVertex(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::WeveVertex : new ::WeveVertex;
   }
   static void *newArray_WeveVertex(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::WeveVertex[nElements] : new ::WeveVertex[nElements];
   }
   // Wrapper around operator delete
   static void delete_WeveVertex(void *p) {
      delete ((::WeveVertex*)p);
   }
   static void deleteArray_WeveVertex(void *p) {
      delete [] ((::WeveVertex*)p);
   }
   static void destruct_WeveVertex(void *p) {
      typedef ::WeveVertex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::WeveVertex

//______________________________________________________________________________
void WeveBEMC::Streamer(TBuffer &R__b)
{
   // Stream an object of class WeveBEMC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WeveBEMC::Class(),this);
   } else {
      R__b.WriteClassBuffer(WeveBEMC::Class(),this);
   }
}

//______________________________________________________________________________
void WeveBEMC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WeveBEMC.
      TClass *R__cl = ::WeveBEMC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tileIn[2]", tileIn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adcTile[2][4800]", adcTile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eneTile[2][4800]", eneTile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "statTile[2][4800]", statTile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxAdc", &maxAdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxHtDsm", &maxHtDsm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adcBsmd[2][18000]", adcBsmd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "statBsmd[2][18000]", statBsmd);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_WeveBEMC(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::WeveBEMC : new ::WeveBEMC;
   }
   static void *newArray_WeveBEMC(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::WeveBEMC[nElements] : new ::WeveBEMC[nElements];
   }
   // Wrapper around operator delete
   static void delete_WeveBEMC(void *p) {
      delete ((::WeveBEMC*)p);
   }
   static void deleteArray_WeveBEMC(void *p) {
      delete [] ((::WeveBEMC*)p);
   }
   static void destruct_WeveBEMC(void *p) {
      typedef ::WeveBEMC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::WeveBEMC

//______________________________________________________________________________
void WeveETOW::Streamer(TBuffer &R__b)
{
   // Stream an object of class WeveETOW.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WeveETOW::Class(),this);
   } else {
      R__b.WriteClassBuffer(WeveETOW::Class(),this);
   }
}

//______________________________________________________________________________
void WeveETOW::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WeveETOW.
      TClass *R__cl = ::WeveETOW::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etowIn", &etowIn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc[60][12]", adc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ene[60][12]", ene);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stat[60][12]", stat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxAdc", &maxAdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxSec", &maxSec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxSub", &maxSub);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxEta", &maxEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxHtDsm", &maxHtDsm);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_WeveETOW(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::WeveETOW : new ::WeveETOW;
   }
   static void *newArray_WeveETOW(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::WeveETOW[nElements] : new ::WeveETOW[nElements];
   }
   // Wrapper around operator delete
   static void delete_WeveETOW(void *p) {
      delete ((::WeveETOW*)p);
   }
   static void deleteArray_WeveETOW(void *p) {
      delete [] ((::WeveETOW*)p);
   }
   static void destruct_WeveETOW(void *p) {
      typedef ::WeveETOW current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::WeveETOW

//______________________________________________________________________________
void WeveEPRS::Streamer(TBuffer &R__b)
{
   // Stream an object of class WeveEPRS.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WeveEPRS::Class(),this);
   } else {
      R__b.WriteClassBuffer(WeveEPRS::Class(),this);
   }
}

//______________________________________________________________________________
void WeveEPRS::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WeveEPRS.
      TClass *R__cl = ::WeveEPRS::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eprsIn", &eprsIn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc[60][12][3]", adc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ene[60][12][3]", ene);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stat[60][12][3]", stat);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_WeveEPRS(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::WeveEPRS : new ::WeveEPRS;
   }
   static void *newArray_WeveEPRS(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::WeveEPRS[nElements] : new ::WeveEPRS[nElements];
   }
   // Wrapper around operator delete
   static void delete_WeveEPRS(void *p) {
      delete ((::WeveEPRS*)p);
   }
   static void deleteArray_WeveEPRS(void *p) {
      delete [] ((::WeveEPRS*)p);
   }
   static void destruct_WeveEPRS(void *p) {
      typedef ::WeveEPRS current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::WeveEPRS

//______________________________________________________________________________
void WeveESMD::Streamer(TBuffer &R__b)
{
   // Stream an object of class WeveESMD.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WeveESMD::Class(),this);
   } else {
      R__b.WriteClassBuffer(WeveESMD::Class(),this);
   }
}

//______________________________________________________________________________
void WeveESMD::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WeveESMD.
      TClass *R__cl = ::WeveESMD::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "esmdIn", &esmdIn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc[12][2][288]", adc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ene[12][2][288]", ene);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stat[12][2][288]", stat);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_WeveESMD(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::WeveESMD : new ::WeveESMD;
   }
   static void *newArray_WeveESMD(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::WeveESMD[nElements] : new ::WeveESMD[nElements];
   }
   // Wrapper around operator delete
   static void delete_WeveESMD(void *p) {
      delete ((::WeveESMD*)p);
   }
   static void deleteArray_WeveESMD(void *p) {
      delete [] ((::WeveESMD*)p);
   }
   static void destruct_WeveESMD(void *p) {
      typedef ::WeveESMD current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::WeveESMD

//______________________________________________________________________________
void Wevent2011::Streamer(TBuffer &R__b)
{
   // Stream an object of class Wevent2011.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Wevent2011::Class(),this);
   } else {
      R__b.WriteClassBuffer(Wevent2011::Class(),this);
   }
}

//______________________________________________________________________________
void Wevent2011::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Wevent2011.
      TClass *R__cl = ::Wevent2011::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "l2bitET", &l2bitET);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "l2bitRnd", &l2bitRnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "l2EbitET", &l2EbitET);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "l2EbitRnd", &l2EbitRnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trigAwaySum[16]", trigAwaySum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trigTotalSum", &trigTotalSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runNo", &runNo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time", &time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zdcRate", &zdcRate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bx7", &bx7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bx48", &bx48);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bxStar7", &bxStar7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bxStar48", &bxStar48);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "spin4", &spin4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zTag", &zTag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vertex", (void*)&vertex);
      R__insp.InspectMember("vector<WeveVertex>", (void*)&vertex, "vertex.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bemc", &bemc);
      R__insp.InspectMember(bemc, "bemc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etow", &etow);
      R__insp.InspectMember(etow, "etow.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eprs", &eprs);
      R__insp.InspectMember(eprs, "eprs.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "esmd", &esmd);
      R__insp.InspectMember(esmd, "esmd.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Wevent2011(void *p) {
      return  p ? new(p) ::Wevent2011 : new ::Wevent2011;
   }
   static void *newArray_Wevent2011(Long_t nElements, void *p) {
      return p ? new(p) ::Wevent2011[nElements] : new ::Wevent2011[nElements];
   }
   // Wrapper around operator delete
   static void delete_Wevent2011(void *p) {
      delete ((::Wevent2011*)p);
   }
   static void deleteArray_Wevent2011(void *p) {
      delete [] ((::Wevent2011*)p);
   }
   static void destruct_Wevent2011(void *p) {
      typedef ::Wevent2011 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Wevent2011

namespace ROOTDict {
   void vectorlEStMuTrackmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEStMuTrackmUgR_Dictionary();
   static void *new_vectorlEStMuTrackmUgR(void *p = 0);
   static void *newArray_vectorlEStMuTrackmUgR(Long_t size, void *p);
   static void delete_vectorlEStMuTrackmUgR(void *p);
   static void deleteArray_vectorlEStMuTrackmUgR(void *p);
   static void destruct_vectorlEStMuTrackmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<StMuTrack*>*)
   {
      vector<StMuTrack*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<StMuTrack*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<StMuTrack*>", -2, "prec_stl/vector", 49,
                  typeid(vector<StMuTrack*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEStMuTrackmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<StMuTrack*>) );
      instance.SetNew(&new_vectorlEStMuTrackmUgR);
      instance.SetNewArray(&newArray_vectorlEStMuTrackmUgR);
      instance.SetDelete(&delete_vectorlEStMuTrackmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEStMuTrackmUgR);
      instance.SetDestructor(&destruct_vectorlEStMuTrackmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<StMuTrack*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<StMuTrack*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEStMuTrackmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<StMuTrack*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEStMuTrackmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StMuTrack*> : new vector<StMuTrack*>;
   }
   static void *newArray_vectorlEStMuTrackmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StMuTrack*>[nElements] : new vector<StMuTrack*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEStMuTrackmUgR(void *p) {
      delete ((vector<StMuTrack*>*)p);
   }
   static void deleteArray_vectorlEStMuTrackmUgR(void *p) {
      delete [] ((vector<StMuTrack*>*)p);
   }
   static void destruct_vectorlEStMuTrackmUgR(void *p) {
      typedef vector<StMuTrack*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<StMuTrack*>

namespace ROOTDict {
   void vectorlEWeveEleTrackgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEWeveEleTrackgR_Dictionary();
   static void *new_vectorlEWeveEleTrackgR(void *p = 0);
   static void *newArray_vectorlEWeveEleTrackgR(Long_t size, void *p);
   static void delete_vectorlEWeveEleTrackgR(void *p);
   static void deleteArray_vectorlEWeveEleTrackgR(void *p);
   static void destruct_vectorlEWeveEleTrackgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<WeveEleTrack>*)
   {
      vector<WeveEleTrack> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<WeveEleTrack>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<WeveEleTrack>", -2, "prec_stl/vector", 49,
                  typeid(vector<WeveEleTrack>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEWeveEleTrackgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<WeveEleTrack>) );
      instance.SetNew(&new_vectorlEWeveEleTrackgR);
      instance.SetNewArray(&newArray_vectorlEWeveEleTrackgR);
      instance.SetDelete(&delete_vectorlEWeveEleTrackgR);
      instance.SetDeleteArray(&deleteArray_vectorlEWeveEleTrackgR);
      instance.SetDestructor(&destruct_vectorlEWeveEleTrackgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<WeveEleTrack> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<WeveEleTrack>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEWeveEleTrackgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<WeveEleTrack>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEWeveEleTrackgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<WeveEleTrack> : new vector<WeveEleTrack>;
   }
   static void *newArray_vectorlEWeveEleTrackgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<WeveEleTrack>[nElements] : new vector<WeveEleTrack>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEWeveEleTrackgR(void *p) {
      delete ((vector<WeveEleTrack>*)p);
   }
   static void deleteArray_vectorlEWeveEleTrackgR(void *p) {
      delete [] ((vector<WeveEleTrack>*)p);
   }
   static void destruct_vectorlEWeveEleTrackgR(void *p) {
      typedef vector<WeveEleTrack> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<WeveEleTrack>

namespace ROOTDict {
   void vectorlEWeveVertexgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEWeveVertexgR_Dictionary();
   static void *new_vectorlEWeveVertexgR(void *p = 0);
   static void *newArray_vectorlEWeveVertexgR(Long_t size, void *p);
   static void delete_vectorlEWeveVertexgR(void *p);
   static void deleteArray_vectorlEWeveVertexgR(void *p);
   static void destruct_vectorlEWeveVertexgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<WeveVertex>*)
   {
      vector<WeveVertex> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<WeveVertex>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<WeveVertex>", -2, "prec_stl/vector", 49,
                  typeid(vector<WeveVertex>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEWeveVertexgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<WeveVertex>) );
      instance.SetNew(&new_vectorlEWeveVertexgR);
      instance.SetNewArray(&newArray_vectorlEWeveVertexgR);
      instance.SetDelete(&delete_vectorlEWeveVertexgR);
      instance.SetDeleteArray(&deleteArray_vectorlEWeveVertexgR);
      instance.SetDestructor(&destruct_vectorlEWeveVertexgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<WeveVertex> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<WeveVertex>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEWeveVertexgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<WeveVertex>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEWeveVertexgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<WeveVertex> : new vector<WeveVertex>;
   }
   static void *newArray_vectorlEWeveVertexgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<WeveVertex>[nElements] : new vector<WeveVertex>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEWeveVertexgR(void *p) {
      delete ((vector<WeveVertex>*)p);
   }
   static void deleteArray_vectorlEWeveVertexgR(void *p) {
      delete [] ((vector<WeveVertex>*)p);
   }
   static void destruct_vectorlEWeveVertexgR(void *p) {
      typedef vector<WeveVertex> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<WeveVertex>

/********************************************************
* .sl64_gcc482/obj/StRoot/StSpinPool/StWalgo2011/StWalgo2011_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableStWalgo2011_Cint();

extern "C" void G__set_cpp_environmentStWalgo2011_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("St2011WMaker.h");
  G__add_compiledheader("St2011WlumiMaker.h");
  G__add_compiledheader("St2011ZMaker.h");
  G__add_compiledheader("St2011pubMcMaker.h");
  G__add_compiledheader("St2011pubSpinMaker.h");
  G__add_compiledheader("St2011pubWanaMaker.h");
  G__add_compiledheader("Wevent2011.h");
  G__cpp_reset_tagtableStWalgo2011_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevStWalgo2011_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* WeveCluster */
static int G__StWalgo2011_Cint_913_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WeveCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WeveCluster[n];
     } else {
       p = new((void*) gvp) WeveCluster[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WeveCluster;
     } else {
       p = new((void*) gvp) WeveCluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_913_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveCluster*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_913_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((WeveCluster*) G__getstructoffset())->print((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WeveCluster*) G__getstructoffset())->print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_913_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WeveCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_913_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WeveCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_913_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WeveCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_913_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WeveCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_913_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const WeveCluster*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_913_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveCluster*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_913_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveCluster*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_913_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_913_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WeveCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_913_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WeveCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_913_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WeveCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_913_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WeveCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StWalgo2011_Cint_913_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WeveCluster* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WeveCluster(*(WeveCluster*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WeveCluster G__TWeveCluster;
static int G__StWalgo2011_Cint_913_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WeveCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WeveCluster*) (soff+(sizeof(WeveCluster)*i)))->~G__TWeveCluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WeveCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WeveCluster*) (soff))->~G__TWeveCluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StWalgo2011_Cint_913_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WeveCluster* dest = (WeveCluster*) G__getstructoffset();
   *dest = *(WeveCluster*) libp->para[0].ref;
   const WeveCluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WevePointTower */
static int G__StWalgo2011_Cint_914_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WevePointTower*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_914_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((WevePointTower*) G__getstructoffset())->print((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WevePointTower*) G__getstructoffset())->print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_914_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WevePointTower::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_914_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WevePointTower::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_914_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WevePointTower::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_914_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WevePointTower::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_914_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const WevePointTower*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_914_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WevePointTower*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_914_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WevePointTower*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_914_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WevePointTower*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_914_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WevePointTower::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_914_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WevePointTower::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_914_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WevePointTower::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_914_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WevePointTower::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__StWalgo2011_Cint_914_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WevePointTower *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WevePointTower[n];
     } else {
       p = new((void*) gvp) WevePointTower[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WevePointTower;
     } else {
       p = new((void*) gvp) WevePointTower;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_WevePointTower));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StWalgo2011_Cint_914_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WevePointTower* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WevePointTower(*(WevePointTower*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_WevePointTower));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WevePointTower G__TWevePointTower;
static int G__StWalgo2011_Cint_914_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WevePointTower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WevePointTower*) (soff+(sizeof(WevePointTower)*i)))->~G__TWevePointTower();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WevePointTower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WevePointTower*) (soff))->~G__TWevePointTower();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StWalgo2011_Cint_914_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WevePointTower* dest = (WevePointTower*) G__getstructoffset();
   *dest = *(WevePointTower*) libp->para[0].ref;
   const WevePointTower& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WeveEleTrack */
static int G__StWalgo2011_Cint_915_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WeveEleTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WeveEleTrack[n];
     } else {
       p = new((void*) gvp) WeveEleTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WeveEleTrack;
     } else {
       p = new((void*) gvp) WeveEleTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveEleTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_915_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveEleTrack*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_915_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((WeveEleTrack*) G__getstructoffset())->print((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WeveEleTrack*) G__getstructoffset())->print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_915_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WeveEleTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_915_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WeveEleTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_915_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WeveEleTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_915_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WeveEleTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_915_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const WeveEleTrack*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_915_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveEleTrack*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_915_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveEleTrack*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_915_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveEleTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_915_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WeveEleTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_915_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WeveEleTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_915_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WeveEleTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_915_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WeveEleTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StWalgo2011_Cint_915_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WeveEleTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WeveEleTrack(*(WeveEleTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveEleTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WeveEleTrack G__TWeveEleTrack;
static int G__StWalgo2011_Cint_915_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WeveEleTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WeveEleTrack*) (soff+(sizeof(WeveEleTrack)*i)))->~G__TWeveEleTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WeveEleTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WeveEleTrack*) (soff))->~G__TWeveEleTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WeveVertex */
static int G__StWalgo2011_Cint_916_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveVertex*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_916_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((WeveVertex*) G__getstructoffset())->print((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WeveVertex*) G__getstructoffset())->print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_916_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WeveVertex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_916_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WeveVertex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_916_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WeveVertex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_916_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WeveVertex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_916_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const WeveVertex*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_916_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveVertex*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_916_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveVertex*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_916_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveVertex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_916_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WeveVertex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_916_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WeveVertex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_916_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WeveVertex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_916_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WeveVertex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__StWalgo2011_Cint_916_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WeveVertex *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WeveVertex[n];
     } else {
       p = new((void*) gvp) WeveVertex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WeveVertex;
     } else {
       p = new((void*) gvp) WeveVertex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StWalgo2011_Cint_916_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WeveVertex* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WeveVertex(*(WeveVertex*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WeveVertex G__TWeveVertex;
static int G__StWalgo2011_Cint_916_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WeveVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WeveVertex*) (soff+(sizeof(WeveVertex)*i)))->~G__TWeveVertex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WeveVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WeveVertex*) (soff))->~G__TWeveVertex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StWalgo2011_Cint_916_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WeveVertex* dest = (WeveVertex*) G__getstructoffset();
   *dest = *(WeveVertex*) libp->para[0].ref;
   const WeveVertex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WeveBEMC */
static int G__StWalgo2011_Cint_925_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveBEMC*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_925_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((WeveBEMC*) G__getstructoffset())->print((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WeveBEMC*) G__getstructoffset())->print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_925_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WeveBEMC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_925_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WeveBEMC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_925_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WeveBEMC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_925_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WeveBEMC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_925_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const WeveBEMC*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_925_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveBEMC*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_925_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveBEMC*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_925_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveBEMC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_925_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WeveBEMC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_925_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WeveBEMC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_925_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WeveBEMC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_925_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WeveBEMC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__StWalgo2011_Cint_925_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WeveBEMC *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WeveBEMC[n];
     } else {
       p = new((void*) gvp) WeveBEMC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WeveBEMC;
     } else {
       p = new((void*) gvp) WeveBEMC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveBEMC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StWalgo2011_Cint_925_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WeveBEMC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WeveBEMC(*(WeveBEMC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveBEMC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WeveBEMC G__TWeveBEMC;
static int G__StWalgo2011_Cint_925_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WeveBEMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WeveBEMC*) (soff+(sizeof(WeveBEMC)*i)))->~G__TWeveBEMC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WeveBEMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WeveBEMC*) (soff))->~G__TWeveBEMC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StWalgo2011_Cint_925_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WeveBEMC* dest = (WeveBEMC*) G__getstructoffset();
   *dest = *(WeveBEMC*) libp->para[0].ref;
   const WeveBEMC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WeveETOW */
static int G__StWalgo2011_Cint_926_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveETOW*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_926_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WeveETOW::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_926_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WeveETOW::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_926_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WeveETOW::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_926_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WeveETOW::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_926_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const WeveETOW*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_926_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveETOW*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_926_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveETOW*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_926_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveETOW*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_926_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WeveETOW::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_926_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WeveETOW::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_926_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WeveETOW::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_926_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WeveETOW::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__StWalgo2011_Cint_926_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WeveETOW *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WeveETOW[n];
     } else {
       p = new((void*) gvp) WeveETOW[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WeveETOW;
     } else {
       p = new((void*) gvp) WeveETOW;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveETOW));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StWalgo2011_Cint_926_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WeveETOW* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WeveETOW(*(WeveETOW*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveETOW));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WeveETOW G__TWeveETOW;
static int G__StWalgo2011_Cint_926_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WeveETOW*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WeveETOW*) (soff+(sizeof(WeveETOW)*i)))->~G__TWeveETOW();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WeveETOW*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WeveETOW*) (soff))->~G__TWeveETOW();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StWalgo2011_Cint_926_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WeveETOW* dest = (WeveETOW*) G__getstructoffset();
   *dest = *(WeveETOW*) libp->para[0].ref;
   const WeveETOW& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WeveEPRS */
static int G__StWalgo2011_Cint_927_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveEPRS*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_927_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WeveEPRS::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_927_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WeveEPRS::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_927_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WeveEPRS::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_927_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WeveEPRS::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_927_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const WeveEPRS*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_927_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveEPRS*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_927_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveEPRS*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_927_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveEPRS*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_927_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WeveEPRS::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_927_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WeveEPRS::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_927_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WeveEPRS::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_927_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WeveEPRS::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__StWalgo2011_Cint_927_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WeveEPRS *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WeveEPRS[n];
     } else {
       p = new((void*) gvp) WeveEPRS[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WeveEPRS;
     } else {
       p = new((void*) gvp) WeveEPRS;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveEPRS));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StWalgo2011_Cint_927_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WeveEPRS* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WeveEPRS(*(WeveEPRS*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveEPRS));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WeveEPRS G__TWeveEPRS;
static int G__StWalgo2011_Cint_927_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WeveEPRS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WeveEPRS*) (soff+(sizeof(WeveEPRS)*i)))->~G__TWeveEPRS();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WeveEPRS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WeveEPRS*) (soff))->~G__TWeveEPRS();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StWalgo2011_Cint_927_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WeveEPRS* dest = (WeveEPRS*) G__getstructoffset();
   *dest = *(WeveEPRS*) libp->para[0].ref;
   const WeveEPRS& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WeveESMD */
static int G__StWalgo2011_Cint_928_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveESMD*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_928_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WeveESMD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_928_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WeveESMD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_928_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WeveESMD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_928_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WeveESMD::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_928_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const WeveESMD*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_928_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveESMD*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_928_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveESMD*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_928_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WeveESMD*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_928_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WeveESMD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_928_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WeveESMD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_928_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WeveESMD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_928_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WeveESMD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__StWalgo2011_Cint_928_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WeveESMD *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WeveESMD[n];
     } else {
       p = new((void*) gvp) WeveESMD[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WeveESMD;
     } else {
       p = new((void*) gvp) WeveESMD;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveESMD));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StWalgo2011_Cint_928_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WeveESMD* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WeveESMD(*(WeveESMD*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveESMD));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WeveESMD G__TWeveESMD;
static int G__StWalgo2011_Cint_928_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WeveESMD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WeveESMD*) (soff+(sizeof(WeveESMD)*i)))->~G__TWeveESMD();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WeveESMD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WeveESMD*) (soff))->~G__TWeveESMD();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StWalgo2011_Cint_928_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WeveESMD* dest = (WeveESMD*) G__getstructoffset();
   *dest = *(WeveESMD*) libp->para[0].ref;
   const WeveESMD& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Wevent2011 */
static int G__StWalgo2011_Cint_929_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Wevent2011* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Wevent2011[n];
     } else {
       p = new((void*) gvp) Wevent2011[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Wevent2011;
     } else {
       p = new((void*) gvp) Wevent2011;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_Wevent2011));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_929_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Wevent2011*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_929_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Wevent2011*) G__getstructoffset())->print((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Wevent2011*) G__getstructoffset())->print((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Wevent2011*) G__getstructoffset())->print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_929_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Wevent2011*) G__getstructoffset())->getGmt_day_hour(*(int*) G__Intref(&libp->para[0]), *(int*) G__Intref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_929_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Wevent2011::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_929_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Wevent2011::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_929_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Wevent2011::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_929_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Wevent2011::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_929_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Wevent2011*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_929_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Wevent2011::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_929_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Wevent2011::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_929_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Wevent2011::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_929_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Wevent2011::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StWalgo2011_Cint_929_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Wevent2011* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Wevent2011(*(Wevent2011*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_Wevent2011));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Wevent2011 G__TWevent2011;
static int G__StWalgo2011_Cint_929_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Wevent2011*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Wevent2011*) (soff+(sizeof(Wevent2011)*i)))->~G__TWevent2011();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Wevent2011*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Wevent2011*) (soff))->~G__TWevent2011();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StWalgo2011_Cint_929_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Wevent2011* dest = (Wevent2011*) G__getstructoffset();
   *dest = *(Wevent2011*) libp->para[0].ref;
   const Wevent2011& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* St2011pubWanaMaker */
static int G__StWalgo2011_Cint_944_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   St2011pubWanaMaker* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St2011pubWanaMaker((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) St2011pubWanaMaker((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new St2011pubWanaMaker[n];
       } else {
         p = new((void*) gvp) St2011pubWanaMaker[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new St2011pubWanaMaker;
       } else {
         p = new((void*) gvp) St2011pubWanaMaker;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubWanaMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_944_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011pubWanaMaker*) G__getstructoffset())->setHList((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_944_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011pubWanaMaker*) G__getstructoffset())->attachWalgoMaker((St2011WMaker*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_944_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) St2011pubWanaMaker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_944_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) St2011pubWanaMaker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_944_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) St2011pubWanaMaker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_944_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      St2011pubWanaMaker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_944_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011pubWanaMaker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_944_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) St2011pubWanaMaker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_944_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) St2011pubWanaMaker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_944_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) St2011pubWanaMaker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_944_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) St2011pubWanaMaker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StWalgo2011_Cint_944_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   St2011pubWanaMaker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new St2011pubWanaMaker(*(St2011pubWanaMaker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubWanaMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef St2011pubWanaMaker G__TSt2011pubWanaMaker;
static int G__StWalgo2011_Cint_944_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (St2011pubWanaMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((St2011pubWanaMaker*) (soff+(sizeof(St2011pubWanaMaker)*i)))->~G__TSt2011pubWanaMaker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (St2011pubWanaMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((St2011pubWanaMaker*) (soff))->~G__TSt2011pubWanaMaker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* St2011pubSpinMaker */
static int G__StWalgo2011_Cint_945_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   St2011pubSpinMaker* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St2011pubSpinMaker((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) St2011pubSpinMaker((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St2011pubSpinMaker((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) St2011pubSpinMaker((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new St2011pubSpinMaker[n];
       } else {
         p = new((void*) gvp) St2011pubSpinMaker[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new St2011pubSpinMaker;
       } else {
         p = new((void*) gvp) St2011pubSpinMaker;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubSpinMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_945_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011pubSpinMaker*) G__getstructoffset())->setHList((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_945_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011pubSpinMaker*) G__getstructoffset())->setEta((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_945_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011pubSpinMaker*) G__getstructoffset())->setEtaE((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_945_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011pubSpinMaker*) G__getstructoffset())->setQPT((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_945_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011pubSpinMaker*) G__getstructoffset())->setNoEEMC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_945_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011pubSpinMaker*) G__getstructoffset())->attachWalgoMaker((St2011WMaker*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_945_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) St2011pubSpinMaker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_945_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) St2011pubSpinMaker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_945_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) St2011pubSpinMaker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_945_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      St2011pubSpinMaker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_945_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011pubSpinMaker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_945_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) St2011pubSpinMaker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_945_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) St2011pubSpinMaker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_945_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) St2011pubSpinMaker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_945_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) St2011pubSpinMaker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StWalgo2011_Cint_945_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   St2011pubSpinMaker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new St2011pubSpinMaker(*(St2011pubSpinMaker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubSpinMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef St2011pubSpinMaker G__TSt2011pubSpinMaker;
static int G__StWalgo2011_Cint_945_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (St2011pubSpinMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((St2011pubSpinMaker*) (soff+(sizeof(St2011pubSpinMaker)*i)))->~G__TSt2011pubSpinMaker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (St2011pubSpinMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((St2011pubSpinMaker*) (soff))->~G__TSt2011pubSpinMaker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* St2011pubMcMaker */
static int G__StWalgo2011_Cint_946_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   St2011pubMcMaker* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St2011pubMcMaker((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) St2011pubMcMaker((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new St2011pubMcMaker[n];
       } else {
         p = new((void*) gvp) St2011pubMcMaker[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new St2011pubMcMaker;
       } else {
         p = new((void*) gvp) St2011pubMcMaker;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubMcMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_946_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011pubMcMaker*) G__getstructoffset())->setHList((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_946_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011pubMcMaker*) G__getstructoffset())->attachWalgoMaker((St2011WMaker*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_946_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) St2011pubMcMaker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_946_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) St2011pubMcMaker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_946_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) St2011pubMcMaker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_946_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      St2011pubMcMaker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_946_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011pubMcMaker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_946_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) St2011pubMcMaker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_946_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) St2011pubMcMaker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_946_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) St2011pubMcMaker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_946_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) St2011pubMcMaker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StWalgo2011_Cint_946_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   St2011pubMcMaker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new St2011pubMcMaker(*(St2011pubMcMaker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubMcMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef St2011pubMcMaker G__TSt2011pubMcMaker;
static int G__StWalgo2011_Cint_946_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (St2011pubMcMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((St2011pubMcMaker*) (soff+(sizeof(St2011pubMcMaker)*i)))->~G__TSt2011pubMcMaker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (St2011pubMcMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((St2011pubMcMaker*) (soff))->~G__TSt2011pubMcMaker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* St2011WMaker */
static int G__StWalgo2011_Cint_948_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011WMaker*) G__getstructoffset())->setVertexCuts((float) G__double(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011WMaker*) G__getstructoffset())->setEleTrackCuts((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011WMaker*) G__getstructoffset())->setWbosonCuts((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011WMaker*) G__getstructoffset())->setE_WbosonCuts((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011WMaker*) G__getstructoffset())->setEmcCuts((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011WMaker*) G__getstructoffset())->setEtowScale((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011WMaker*) G__getstructoffset())->setBtowScale((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011WMaker*) G__getstructoffset())->setConeRadius((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011WMaker*) G__getstructoffset())->setL0AdcThresh((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011WMaker*) G__getstructoffset())->setL2ClusterThresh((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011WMaker*) G__getstructoffset())->setL2SeedThresh((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011WMaker*) G__getstructoffset())->setJetTreeBranch(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011WMaker*) G__getstructoffset())->setTreeName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   St2011WMaker* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St2011WMaker((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) St2011WMaker((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new St2011WMaker[n];
       } else {
         p = new((void*) gvp) St2011WMaker[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new St2011WMaker;
       } else {
         p = new((void*) gvp) St2011WMaker;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011WMaker*) G__getstructoffset())->setTrigID((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011WMaker*) G__getstructoffset())->setHList((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011WMaker*) G__getstructoffset())->setHListTpc((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011WMaker*) G__getstructoffset())->setMC((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011WMaker*) G__getstructoffset())->setMaxDisplayEve((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011WMaker*) G__getstructoffset())->attachSpinDb((StSpinDbMaker*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011WMaker*) G__getstructoffset())->chainFile((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011WMaker*) G__getstructoffset())->chainJetFile((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((St2011WMaker*) G__getstructoffset())->getNumberOfEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((St2011WMaker*) G__getstructoffset())->getEvent((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) St2011WMaker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) St2011WMaker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) St2011WMaker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      St2011WMaker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011WMaker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) St2011WMaker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) St2011WMaker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) St2011WMaker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_948_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) St2011WMaker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StWalgo2011_Cint_948_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   St2011WMaker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new St2011WMaker(*(St2011WMaker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef St2011WMaker G__TSt2011WMaker;
static int G__StWalgo2011_Cint_948_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (St2011WMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((St2011WMaker*) (soff+(sizeof(St2011WMaker)*i)))->~G__TSt2011WMaker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (St2011WMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((St2011WMaker*) (soff))->~G__TSt2011WMaker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* St2011WlumiMaker */
static int G__StWalgo2011_Cint_949_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   St2011WlumiMaker* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St2011WlumiMaker((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) St2011WlumiMaker((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new St2011WlumiMaker[n];
       } else {
         p = new((void*) gvp) St2011WlumiMaker[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new St2011WlumiMaker;
       } else {
         p = new((void*) gvp) St2011WlumiMaker;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WlumiMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_949_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011WlumiMaker*) G__getstructoffset())->setHList((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_949_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011WlumiMaker*) G__getstructoffset())->attachWalgoMaker((St2011WMaker*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_949_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) St2011WlumiMaker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_949_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) St2011WlumiMaker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_949_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) St2011WlumiMaker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_949_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      St2011WlumiMaker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_949_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011WlumiMaker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_949_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) St2011WlumiMaker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_949_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) St2011WlumiMaker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_949_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) St2011WlumiMaker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_949_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) St2011WlumiMaker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StWalgo2011_Cint_949_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   St2011WlumiMaker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new St2011WlumiMaker(*(St2011WlumiMaker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WlumiMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef St2011WlumiMaker G__TSt2011WlumiMaker;
static int G__StWalgo2011_Cint_949_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (St2011WlumiMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((St2011WlumiMaker*) (soff+(sizeof(St2011WlumiMaker)*i)))->~G__TSt2011WlumiMaker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (St2011WlumiMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((St2011WlumiMaker*) (soff))->~G__TSt2011WlumiMaker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* St2011ZMaker */
static int G__StWalgo2011_Cint_950_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   St2011ZMaker* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St2011ZMaker((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) St2011ZMaker((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new St2011ZMaker[n];
       } else {
         p = new((void*) gvp) St2011ZMaker[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new St2011ZMaker;
       } else {
         p = new((void*) gvp) St2011ZMaker;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011ZMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_950_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011ZMaker*) G__getstructoffset())->setHList((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_950_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011ZMaker*) G__getstructoffset())->attachWalgoMaker((St2011WMaker*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_950_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011ZMaker*) G__getstructoffset())->attachMuMaker((StMuDstMaker*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_950_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011ZMaker*) G__getstructoffset())->setNearEtFrac((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_950_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011ZMaker*) G__getstructoffset())->setClusterMinEt((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_950_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011ZMaker*) G__getstructoffset())->setPhi12Min((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_950_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011ZMaker*) G__getstructoffset())->setMinZMass((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_950_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011ZMaker*) G__getstructoffset())->setMaxZMass((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_950_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011ZMaker*) G__getstructoffset())->printJan((WeveEleTrack*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_950_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) St2011ZMaker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_950_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) St2011ZMaker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_950_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) St2011ZMaker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_950_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      St2011ZMaker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_950_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St2011ZMaker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_950_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) St2011ZMaker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_950_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) St2011ZMaker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_950_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) St2011ZMaker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StWalgo2011_Cint_950_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) St2011ZMaker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StWalgo2011_Cint_950_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   St2011ZMaker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new St2011ZMaker(*(St2011ZMaker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011ZMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef St2011ZMaker G__TSt2011ZMaker;
static int G__StWalgo2011_Cint_950_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (St2011ZMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((St2011ZMaker*) (soff+(sizeof(St2011ZMaker)*i)))->~G__TSt2011ZMaker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (St2011ZMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((St2011ZMaker*) (soff))->~G__TSt2011ZMaker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* WeveCluster */

/* WevePointTower */

/* WeveEleTrack */

/* WeveVertex */

/* WeveBEMC */

/* WeveETOW */

/* WeveEPRS */

/* WeveESMD */

/* Wevent2011 */

/* St2011pubWanaMaker */

/* St2011pubSpinMaker */

/* St2011pubMcMaker */

/* St2011WMaker */

/* St2011WlumiMaker */

/* St2011ZMaker */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncStWalgo2011_Cint {
 public:
  G__Sizep2memfuncStWalgo2011_Cint(): p(&G__Sizep2memfuncStWalgo2011_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncStWalgo2011_Cint::*p)();
};

size_t G__get_sizep2memfuncStWalgo2011_Cint()
{
  G__Sizep2memfuncStWalgo2011_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceStWalgo2011_Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StWalgo2011_CintLN_Wevent2011))) {
     Wevent2011 *G__Lderived;
     G__Lderived=(Wevent2011*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_Wevent2011),G__get_linked_tagnum(&G__StWalgo2011_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubWanaMaker))) {
     St2011pubWanaMaker *G__Lderived;
     G__Lderived=(St2011pubWanaMaker*)0x1000;
     {
       StMaker *G__Lpbase=(StMaker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubWanaMaker),G__get_linked_tagnum(&G__StWalgo2011_CintLN_StMaker),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDataSet *G__Lpbase=(TDataSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubWanaMaker),G__get_linked_tagnum(&G__StWalgo2011_CintLN_TDataSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubWanaMaker),G__get_linked_tagnum(&G__StWalgo2011_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubWanaMaker),G__get_linked_tagnum(&G__StWalgo2011_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubSpinMaker))) {
     St2011pubSpinMaker *G__Lderived;
     G__Lderived=(St2011pubSpinMaker*)0x1000;
     {
       StMaker *G__Lpbase=(StMaker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubSpinMaker),G__get_linked_tagnum(&G__StWalgo2011_CintLN_StMaker),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDataSet *G__Lpbase=(TDataSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubSpinMaker),G__get_linked_tagnum(&G__StWalgo2011_CintLN_TDataSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubSpinMaker),G__get_linked_tagnum(&G__StWalgo2011_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubSpinMaker),G__get_linked_tagnum(&G__StWalgo2011_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubMcMaker))) {
     St2011pubMcMaker *G__Lderived;
     G__Lderived=(St2011pubMcMaker*)0x1000;
     {
       StMaker *G__Lpbase=(StMaker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubMcMaker),G__get_linked_tagnum(&G__StWalgo2011_CintLN_StMaker),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDataSet *G__Lpbase=(TDataSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubMcMaker),G__get_linked_tagnum(&G__StWalgo2011_CintLN_TDataSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubMcMaker),G__get_linked_tagnum(&G__StWalgo2011_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubMcMaker),G__get_linked_tagnum(&G__StWalgo2011_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WMaker))) {
     St2011WMaker *G__Lderived;
     G__Lderived=(St2011WMaker*)0x1000;
     {
       StMaker *G__Lpbase=(StMaker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WMaker),G__get_linked_tagnum(&G__StWalgo2011_CintLN_StMaker),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDataSet *G__Lpbase=(TDataSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WMaker),G__get_linked_tagnum(&G__StWalgo2011_CintLN_TDataSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WMaker),G__get_linked_tagnum(&G__StWalgo2011_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WMaker),G__get_linked_tagnum(&G__StWalgo2011_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WlumiMaker))) {
     St2011WlumiMaker *G__Lderived;
     G__Lderived=(St2011WlumiMaker*)0x1000;
     {
       StMaker *G__Lpbase=(StMaker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WlumiMaker),G__get_linked_tagnum(&G__StWalgo2011_CintLN_StMaker),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDataSet *G__Lpbase=(TDataSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WlumiMaker),G__get_linked_tagnum(&G__StWalgo2011_CintLN_TDataSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WlumiMaker),G__get_linked_tagnum(&G__StWalgo2011_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WlumiMaker),G__get_linked_tagnum(&G__StWalgo2011_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011ZMaker))) {
     St2011ZMaker *G__Lderived;
     G__Lderived=(St2011ZMaker*)0x1000;
     {
       StMaker *G__Lpbase=(StMaker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011ZMaker),G__get_linked_tagnum(&G__StWalgo2011_CintLN_StMaker),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDataSet *G__Lpbase=(TDataSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011ZMaker),G__get_linked_tagnum(&G__StWalgo2011_CintLN_TDataSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011ZMaker),G__get_linked_tagnum(&G__StWalgo2011_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011ZMaker),G__get_linked_tagnum(&G__StWalgo2011_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableStWalgo2011_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<THelixKFitterAux>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_vectorlETHelixKFitterAuxcOallocatorlETHelixKFitterAuxgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_reverse_iteratorlEvectorlETHelixKFitterAuxcOallocatorlETHelixKFitterAuxgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_vectorlETHelixKFitterAuxcOallocatorlETHelixKFitterAuxgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_reverse_iteratorlEvectorlETHelixKFitterAuxcOallocatorlETHelixKFitterAuxgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_vectorlETHelixKFitterAuxcOallocatorlETHelixKFitterAuxgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<WeveEleTrack>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_vectorlEWeveEleTrackcOallocatorlEWeveEleTrackgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_reverse_iteratorlEvectorlEWeveEleTrackcOallocatorlEWeveEleTrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_vectorlEWeveEleTrackcOallocatorlEWeveEleTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_reverse_iteratorlEvectorlEWeveEleTrackcOallocatorlEWeveEleTrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_vectorlEWeveEleTrackcOallocatorlEWeveEleTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StMuTrack*>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_vectorlEStMuTrackmUcOallocatorlEStMuTrackmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_reverse_iteratorlEvectorlEStMuTrackmUcOallocatorlEStMuTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_vectorlEStMuTrackmUcOallocatorlEStMuTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_reverse_iteratorlEvectorlEStMuTrackmUcOallocatorlEStMuTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_vectorlEStMuTrackmUcOallocatorlEStMuTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<WeveVertex>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_vectorlEWeveVertexcOallocatorlEWeveVertexgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_reverse_iteratorlEvectorlEWeveVertexcOallocatorlEWeveVertexgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_vectorlEWeveVertexcOallocatorlEWeveVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StWalgo2011_CintLN_reverse_iteratorlEvectorlEWeveVertexcOallocatorlEWeveVertexgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_vectorlEWeveVertexcOallocatorlEWeveVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* WeveCluster */
static void G__setup_memvarWeveCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveCluster));
   { WeveCluster *p; p=(WeveCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->energy)-(long)(p)),102,0,0,-1,-1,-1,1,"energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ET)-(long)(p)),102,0,0,-1,-1,-1,1,"ET=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->adcSum)-(long)(p)),102,0,0,-1,-1,-1,1,"adcSum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nTower)-(long)(p)),105,0,0,-1,-1,-1,1,"nTower=",0,"with non-zero ADC>kSigPed");
   G__memvar_setup((void*)((long)(&p->iEta)-(long)(p)),105,0,0,-1,-1,-1,1,"iEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->iPhi)-(long)(p)),105,0,0,-1,-1,-1,1,"iPhi=",0,"lower-left corner of the cluster, can be negative, L2-indexing convention");
   G__memvar_setup((void*)((long)(&p->position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TVector3),-1,-1,1,"position=",0,"3D ln(E) weighted sume of tower positions");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WevePointTower */
static void G__setup_memvarWevePointTower(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_WevePointTower));
   { WevePointTower *p; p=(WevePointTower*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->R)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TVector3),-1,-1,1,"R=",0,"extrapolated position of primary track");
   G__memvar_setup((void*)((long)(&p->Rglob)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TVector3),-1,-1,1,"Rglob=",0,"extrapolated position of global track");
   G__memvar_setup((void*)((long)(&p->id)-(long)(p)),105,0,0,-1,-1,-1,1,"id=",0,"BTOW tower id, not used for ETOW");
   G__memvar_setup((void*)((long)(&p->iEta)-(long)(p)),105,0,0,-1,-1,-1,1,"iEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->iPhi)-(long)(p)),105,0,0,-1,-1,-1,1,"iPhi=",0,"eta x phi bin using L2 indexing convention");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WeveEleTrack */
static void G__setup_memvarWeveEleTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveEleTrack));
   { WeveEleTrack *p; p=(WeveEleTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->isMatch2Cl)-(long)(p)),105,0,0,-1,-1,-1,1,"isMatch2Cl=",0,"result of cuts");
   G__memvar_setup((void*)((long)(&p->pointTower)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_WevePointTower),-1,-1,1,"pointTower=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->glMuTrack)-(long)(p)),85,0,1,G__get_linked_tagnum(&G__StWalgo2011_CintLN_StMuTrack),-1,-1,1,"glMuTrack=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->prMuTrack)-(long)(p)),85,0,1,G__get_linked_tagnum(&G__StWalgo2011_CintLN_StMuTrack),-1,-1,1,"prMuTrack=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cluster)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveCluster),-1,-1,1,"cluster=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cl4x4)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveCluster),-1,-1,1,"cl4x4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->primP)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TVector3),-1,-1,1,"primP=",0,"primary momentum vector");
   G__memvar_setup((void*)((long)(&p->nearTpcPT)-(long)(p)),102,0,0,-1,-1,-1,1,"nearTpcPT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nearEmcET)-(long)(p)),102,0,0,-1,-1,-1,1,"nearEmcET=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nearBtowET)-(long)(p)),102,0,0,-1,-1,-1,1,"nearBtowET=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nearEtowET)-(long)(p)),102,0,0,-1,-1,-1,1,"nearEtowET=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->smallNearTpcPT)-(long)(p)),102,0,0,-1,-1,-1,1,"smallNearTpcPT=",0,"(GeV/c), around prim track direction");
   G__memvar_setup((void*)((long)(&p->awayTpcPT)-(long)(p)),102,0,0,-1,-1,-1,1,"awayTpcPT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->awayEmcET)-(long)(p)),102,0,0,-1,-1,-1,1,"awayEmcET=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->awayBtowET)-(long)(p)),102,0,0,-1,-1,-1,1,"awayBtowET=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->awayEtowET)-(long)(p)),102,0,0,-1,-1,-1,1,"awayEtowET=",0,"(GeV/c), opposite in phi to  prim track direction");
   G__memvar_setup((void*)((long)(&p->nearTotET)-(long)(p)),102,0,0,-1,-1,-1,1,"nearTotET=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->awayTotET)-(long)(p)),102,0,0,-1,-1,-1,1,"awayTotET=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nearTotET_noEEMC)-(long)(p)),102,0,0,-1,-1,-1,1,"nearTotET_noEEMC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->awayTotET_noEEMC)-(long)(p)),102,0,0,-1,-1,-1,1,"awayTotET_noEEMC=",0,"(GeV), for nearCone 10 GeV is subtracted to avoid double counting");
   G__memvar_setup((void*)((long)(&p->ptBalance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TVector3),-1,-1,1,"ptBalance=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptBalance_noEEMC)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TVector3),-1,-1,1,"ptBalance_noEEMC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sPtBalance)-(long)(p)),102,0,0,-1,-1,-1,1,"sPtBalance=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sPtBalance_noEEMC)-(long)(p)),102,0,0,-1,-1,-1,1,"sPtBalance_noEEMC=",0,"signed pT balance (GeV/c)");
   G__memvar_setup((void*)((long)(&p->sPtBalance2)-(long)(p)),102,0,0,-1,-1,-1,1,"sPtBalance2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sPtBalance_noEEMC2)-(long)(p)),102,0,0,-1,-1,-1,1,"sPtBalance_noEEMC2=",0,"invariant");
   G__memvar_setup((void*)((long)(&p->jetCount)-(long)(p)),105,0,0,-1,-1,-1,1,"jetCount=",0,"number of jets out the near-cone; add in Dec 19, 2014, jinlong");
   G__memvar_setup((void*)((long)(&p->hadronicRecoil)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TVector3),-1,-1,1,"hadronicRecoil=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hitSector)-(long)(p)),105,0,0,-1,-1,-1,1,"hitSector=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->esmdGlobStrip)-(long)(p)),105,0,0,-1,-1,-1,1,"esmdGlobStrip[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->esmdShower)-(long)(p)),102,0,0,-1,-1,-1,1,"esmdShower[2][41]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->esmdDca)-(long)(p)),102,0,0,-1,-1,-1,1,"esmdDca[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->esmdDcaGlob)-(long)(p)),102,0,0,-1,-1,-1,1,"esmdDcaGlob[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->esmdE)-(long)(p)),102,0,0,-1,-1,-1,1,"esmdE[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->esmdEsum7)-(long)(p)),102,0,0,-1,-1,-1,1,"esmdEsum7[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->esmdNhit)-(long)(p)),105,0,0,-1,-1,-1,1,"esmdNhit[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->esmdPeakSumE)-(long)(p)),102,0,0,-1,-1,-1,1,"esmdPeakSumE[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->esmdPeakOffset)-(long)(p)),105,0,0,-1,-1,-1,1,"esmdPeakOffset[2]=",0,"in strips ");
   G__memvar_setup((void*)((long)(&p->esmdXPcentroid)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TVector3),-1,-1,1,"esmdXPcentroid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->esmdMaxADC)-(long)(p)),105,0,0,-1,-1,-1,1,"esmdMaxADC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->enePre1)-(long)(p)),102,0,0,-1,-1,-1,1,"enePre1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->enePre2)-(long)(p)),102,0,0,-1,-1,-1,1,"enePre2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->enePost)-(long)(p)),102,0,0,-1,-1,-1,1,"enePost=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WeveVertex */
static void G__setup_memvarWeveVertex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveVertex));
   { WeveVertex *p; p=(WeveVertex*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->id)-(long)(p)),105,0,0,-1,-1,-1,1,"id=",0,"as store do muDst list");
   G__memvar_setup((void*)((long)(&p->z)-(long)(p)),102,0,0,-1,-1,-1,1,"z=",0,"cm");
   G__memvar_setup((void*)((long)(&p->rank)-(long)(p)),102,0,0,-1,-1,-1,1,"rank=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->funnyRank)-(long)(p)),102,0,0,-1,-1,-1,1,"funnyRank=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nEEMCMatch)-(long)(p)),105,0,0,-1,-1,-1,1,"nEEMCMatch=",0,"# of matched endcap towers");
   G__memvar_setup((void*)((long)(&p->eleTrack)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_vectorlEWeveEleTrackcOallocatorlEWeveEleTrackgRsPgR),G__defined_typename("vector<WeveEleTrack>"),-1,1,"eleTrack=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->prTrList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_vectorlEStMuTrackmUcOallocatorlEStMuTrackmUgRsPgR),G__defined_typename("vector<StMuTrack*>"),-1,1,"prTrList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WeveBEMC */
static void G__setup_memvarWeveBEMC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveBEMC));
   { WeveBEMC *p; p=(WeveBEMC*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->tileIn)-(long)(p)),105,0,0,-1,-1,-1,1,"tileIn[2]=",0,"0 if no data");
   G__memvar_setup((void*)((long)(&p->adcTile)-(long)(p)),102,0,0,-1,-1,-1,1,"adcTile[2][4800]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eneTile)-(long)(p)),102,0,0,-1,-1,-1,1,"eneTile[2][4800]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->statTile)-(long)(p)),105,0,0,-1,-1,-1,1,"statTile[2][4800]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->maxAdc)-(long)(p)),102,0,0,-1,-1,-1,1,"maxAdc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->maxHtDsm)-(long)(p)),105,0,0,-1,-1,-1,1,"maxHtDsm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->adcBsmd)-(long)(p)),102,0,0,-1,-1,-1,1,"adcBsmd[2][18000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->statBsmd)-(long)(p)),105,0,0,-1,-1,-1,1,"statBsmd[2][18000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WeveETOW */
static void G__setup_memvarWeveETOW(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveETOW));
   { WeveETOW *p; p=(WeveETOW*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->etowIn)-(long)(p)),105,0,0,-1,-1,-1,1,"etowIn=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->adc)-(long)(p)),102,0,0,-1,-1,-1,1,"adc[60][12]=",0,"[phibin][etabin]");
   G__memvar_setup((void*)((long)(&p->ene)-(long)(p)),102,0,0,-1,-1,-1,1,"ene[60][12]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->stat)-(long)(p)),105,0,0,-1,-1,-1,1,"stat[60][12]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->maxAdc)-(long)(p)),102,0,0,-1,-1,-1,1,"maxAdc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->maxSec)-(long)(p)),105,0,0,-1,-1,-1,1,"maxSec=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->maxSub)-(long)(p)),105,0,0,-1,-1,-1,1,"maxSub=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->maxEta)-(long)(p)),105,0,0,-1,-1,-1,1,"maxEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->maxHtDsm)-(long)(p)),105,0,0,-1,-1,-1,1,"maxHtDsm=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WeveEPRS */
static void G__setup_memvarWeveEPRS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveEPRS));
   { WeveEPRS *p; p=(WeveEPRS*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->eprsIn)-(long)(p)),105,0,0,-1,-1,-1,1,"eprsIn=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->adc)-(long)(p)),102,0,0,-1,-1,-1,1,"adc[60][12][3]=",0,"[phibin][etabin][layer]");
   G__memvar_setup((void*)((long)(&p->ene)-(long)(p)),102,0,0,-1,-1,-1,1,"ene[60][12][3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->stat)-(long)(p)),105,0,0,-1,-1,-1,1,"stat[60][12][3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WeveESMD */
static void G__setup_memvarWeveESMD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveESMD));
   { WeveESMD *p; p=(WeveESMD*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->esmdIn)-(long)(p)),105,0,0,-1,-1,-1,1,"esmdIn=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->adc)-(long)(p)),102,0,0,-1,-1,-1,1,"adc[12][2][288]=",0,"[phibin][etabin]");
   G__memvar_setup((void*)((long)(&p->ene)-(long)(p)),102,0,0,-1,-1,-1,1,"ene[12][2][288]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->stat)-(long)(p)),105,0,0,-1,-1,-1,1,"stat[12][2][288]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Wevent2011 */
static void G__setup_memvarWevent2011(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_Wevent2011));
   { Wevent2011 *p; p=(Wevent2011*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->l2bitET)-(long)(p)),105,0,0,-1,-1,-1,1,"l2bitET=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->l2bitRnd)-(long)(p)),105,0,0,-1,-1,-1,1,"l2bitRnd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->l2EbitET)-(long)(p)),105,0,0,-1,-1,-1,1,"l2EbitET=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->l2EbitRnd)-(long)(p)),105,0,0,-1,-1,-1,1,"l2EbitRnd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trigAwaySum)-(long)(p)),105,0,0,-1,-1,-1,1,"trigAwaySum[16]=",0,"for lumi");
   G__memvar_setup((void*)((long)(&p->trigTotalSum)-(long)(p)),105,0,0,-1,-1,-1,1,"trigTotalSum=",0,"for lumi");
   G__memvar_setup((void*)((long)(&p->id)-(long)(p)),105,0,0,-1,-1,-1,1,"id=",0,"eventID");
   G__memvar_setup((void*)((long)(&p->runNo)-(long)(p)),105,0,0,-1,-1,-1,1,"runNo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),105,0,0,-1,-1,-1,1,"time=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zdcRate)-(long)(p)),102,0,0,-1,-1,-1,1,"zdcRate=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bx7)-(long)(p)),105,0,0,-1,-1,-1,1,"bx7=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bx48)-(long)(p)),105,0,0,-1,-1,-1,1,"bx48=",0,"raw from muDst");
   G__memvar_setup((void*)((long)(&p->bxStar7)-(long)(p)),105,0,0,-1,-1,-1,1,"bxStar7=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bxStar48)-(long)(p)),105,0,0,-1,-1,-1,1,"bxStar48=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->spin4)-(long)(p)),105,0,0,-1,-1,-1,1,"spin4=",0,"using spinDb or -1 if failed");
   G__memvar_setup((void*)((long)(&p->zTag)-(long)(p)),103,0,0,-1,-1,-1,1,"zTag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_vectorlEWeveVertexcOallocatorlEWeveVertexgRsPgR),G__defined_typename("vector<WeveVertex>"),-1,1,"vertex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bemc)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveBEMC),-1,-1,1,"bemc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->etow)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveETOW),-1,-1,1,"etow=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eprs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveEPRS),-1,-1,1,"eprs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->esmd)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveESMD),-1,-1,1,"esmd=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* St2011pubWanaMaker */
static void G__setup_memvarSt2011pubWanaMaker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubWanaMaker));
   { St2011pubWanaMaker *p; p=(St2011pubWanaMaker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_highET=",0,"cut of for W 2x2 cluster ET");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WMaker),-1,-1,4,"wMK=",0,"W-algo maker with all data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_StEmcDecoder),-1,-1,4,"mMappB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TObjArray),-1,-1,4,"HList=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubWanaMakercLcLdA),-1,-2,4,"mxHA=50LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TH1),-1,-1,4,"hA[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* St2011pubSpinMaker */
static void G__setup_memvarSt2011pubSpinMaker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubSpinMaker));
   { St2011pubSpinMaker *p; p=(St2011pubSpinMaker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"par_QET2PTcut=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_leptonEta1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_leptonEta2=",0,"narrow the range");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"par_useNoEEMC=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"parE_leptonEta1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"parE_leptonEta2=",0,"narrow the range");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WMaker),-1,-1,4,"wMK=",0,"W-algo maker with all data");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TString),-1,-1,4,"core=",0,"name attached to all histos");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TString),-1,-1,4,"coreTitle=",0,"eta bin name added title of key histos");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TObjArray),-1,-1,4,"HList=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubSpinMakercLcLdA),-1,-2,4,"mxHA=35LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TH1),-1,-1,4,"hA[35]=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubSpinMakercLcLdA),-1,-2,4,"mxHE=35LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TH1),-1,-1,4,"hE[35]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* St2011pubMcMaker */
static void G__setup_memvarSt2011pubMcMaker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubMcMaker));
   { St2011pubMcMaker *p; p=(St2011pubMcMaker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WMaker),-1,-1,4,"wMK=",0,"W-algo maker with all data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TObjArray),-1,-1,4,"HList=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubMcMakercLcLdA),-1,-2,4,"mxHA=128LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TH1),-1,-1,4,"hA[128]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TVector3),-1,-1,4,"mWP=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TVector3),-1,-1,4,"mNeutrinoP=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TVector3),-1,-1,4,"mElectronP=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TVector3),-1,-1,4,"mVertex=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* St2011WMaker */
static void G__setup_memvarSt2011WMaker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WMaker));
   { St2011WMaker *p; p=(St2011WMaker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_StMuDstMaker),-1,-1,4,"mMuDstMaker=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TString),-1,-1,4,"mJetTreeBranch=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TString),-1,-1,4,"mJetTreeBranch_noEEMC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_Wevent2011),-1,-1,4,"wEve=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TTree),-1,-1,4,"mWtree=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TString),-1,-1,4,"mTreeName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TFile),-1,-1,4,"mTreeFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeventDisplay),-1,-1,4,"wDisaply=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_WtpcFilter),-1,-1,4,"mTpcFilter[24]=",0,"allows sector dependent filter");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_WtpcFilter),-1,-1,4,"mTpcFilterE[24]=",0,"allows sector dependent filter for endcap tracks");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nInpEve=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nTrigEve=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nAccEve=",0,"event counters");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mRunNo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"isMC=",0,"0 for real data");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Tfirst=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Tlast=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"par_l0emulAdcThresh=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_l2emulSeedThresh=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_l2emulClusterThresh=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"par_l2bwTrgID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"parE_l2ewTrgID=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_vertexZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"par_minPileupVert=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"par_nFitPts=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"parE_nFitPts=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_nHitFrac=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_trackRin=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_trackRout=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_trackPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"parE_nHitFrac=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"parE_trackRin=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"parE_trackRout=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"parE_trackPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"par_kSigPed=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"par_AdcThres=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_maxADC=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_clustET=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"parE_clustET=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_clustFrac24=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_nearTotEtFrac=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"parE_clustFrac24=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"parE_nearTotEtFrac=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_nearDeltaR=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_awayDeltaPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_delR3D=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"parE_delR3D=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_highET=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"parE_highET=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_ptBalance=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"parE_ptBalance=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_awayET=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"parE_awayET=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_leptonEtaLow=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_leptonEtaHigh=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"parE_leptonEtaLow=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"parE_leptonEtaHigh=",0,"bracket acceptance ");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"parE_trackEtaMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"parE_nSmdStrip=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"parE_esmdGL=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"parE_esmdWL=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"parE_smdRatio=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_QET2PTlow=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_QET2PThigh=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"parE_QET2PTlow=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"parE_QET2PThigh=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_etowScale=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_btowScale=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TString),-1,-1,4,"coreTitle=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"par_DsmThres=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"parE_DsmThres=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"par_maxDisplEve=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_StBemcTables),-1,-1,4,"mBarrelTables=",0,"used to access EMC status and ped info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_StEmcGeom),-1,-1,4,"mBtowGeom=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_StEmcGeom),-1,-1,4,"mBSmdGeom[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mapBtowIJ2ID[4800]=",0,"vs. (iEta, iPhi)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TVector3),-1,-1,4,"positionBtow[4800]=",0,"vs. tower ID");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TVector3),-1,-1,4,"positionBsmd[2][18000]=",0,"vs. strip ID");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_StEEmcDb),-1,-1,4,"mDbE=",0,"access to EEMC database  ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_StSpinDbMaker),-1,-1,4,"spinDb=",0,"access spin information  ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_EEmcGeomSimple),-1,-1,4,"geomE=",0,"access to EEMC geometry ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_EEmcSmdGeom),-1,-1,4,"geoSmd=",0,"access to ESMD geometry");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TVector3),-1,-1,4,"positionEtow[60][12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_StJetEvent),-1,-1,4,"mJetEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_StJetEvent),-1,-1,4,"mJetEvent_noEEMC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TObjArray),-1,-1,4,"HList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TObjArray),-1,-1,4,"HListTpc=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WMakercLcLdA),-1,-2,4,"mxHA=400LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TH1),-1,-1,4,"hA[400]=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WMakercLcLdA),-1,-2,4,"mxHE=300LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TH1),-1,-1,4,"hE[300]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TH1),-1,-1,4,"hbxIdeal=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"index=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"indexJet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TChain),-1,-1,2,"mTreeChain=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TChain),-1,-1,2,"mJetTreeChain=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* St2011WlumiMaker */
static void G__setup_memvarSt2011WlumiMaker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WlumiMaker));
   { St2011WlumiMaker *p; p=(St2011WlumiMaker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WMaker),-1,-1,4,"wMK=",0,"W-algo maker with all data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TObjArray),-1,-1,4,"HList=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WlumiMakercLcLdA),-1,-2,4,"mxHA=8LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TH1),-1,-1,4,"hA[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* St2011ZMaker */
static void G__setup_memvarSt2011ZMaker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011ZMaker));
   { St2011ZMaker *p; p=(St2011ZMaker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_nearTotEtFracZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_clusterEtZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_delPhi12=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_minMassZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_maxMassZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WMaker),-1,-1,4,"wMK=",0,"W-algo maker with all data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_StMuDstMaker),-1,-1,4,"muMK=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TObjArray),-1,-1,4,"HList=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011ZMakercLcLdA),-1,-2,4,"mxHA=100LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TH1),-1,-1,4,"hA[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarStWalgo2011_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncWeveCluster(void) {
   /* WeveCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveCluster));
   G__memfunc_setup("WeveCluster",1145,G__StWalgo2011_Cint_913_0_1, 105, G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__StWalgo2011_Cint_913_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__StWalgo2011_Cint_913_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StWalgo2011_Cint_913_0_4, 85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WeveCluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StWalgo2011_Cint_913_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WeveCluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StWalgo2011_Cint_913_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WeveCluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StWalgo2011_Cint_913_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WeveCluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StWalgo2011_Cint_913_0_8, 85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StWalgo2011_Cint_913_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StWalgo2011_Cint_913_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StWalgo2011_Cint_913_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StWalgo2011_Cint_913_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WeveCluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StWalgo2011_Cint_913_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WeveCluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StWalgo2011_Cint_913_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WeveCluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StWalgo2011_Cint_913_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WeveCluster::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WeveCluster", 1145, G__StWalgo2011_Cint_913_0_16, (int) ('i'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveCluster), -1, 0, 1, 1, 1, 0, "u 'WeveCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WeveCluster", 1271, G__StWalgo2011_Cint_913_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StWalgo2011_Cint_913_0_18, (int) ('u'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveCluster), -1, 1, 1, 1, 1, 0, "u 'WeveCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWevePointTower(void) {
   /* WevePointTower */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_WevePointTower));
   G__memfunc_setup("clear",519,G__StWalgo2011_Cint_914_0_1, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__StWalgo2011_Cint_914_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StWalgo2011_Cint_914_0_3, 85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WevePointTower::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StWalgo2011_Cint_914_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WevePointTower::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StWalgo2011_Cint_914_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WevePointTower::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StWalgo2011_Cint_914_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WevePointTower::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StWalgo2011_Cint_914_0_7, 85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StWalgo2011_Cint_914_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StWalgo2011_Cint_914_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StWalgo2011_Cint_914_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StWalgo2011_Cint_914_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WevePointTower::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StWalgo2011_Cint_914_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WevePointTower::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StWalgo2011_Cint_914_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WevePointTower::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StWalgo2011_Cint_914_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WevePointTower::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("WevePointTower", 1458, G__StWalgo2011_Cint_914_0_15, (int) ('i'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_WevePointTower), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("WevePointTower", 1458, G__StWalgo2011_Cint_914_0_16, (int) ('i'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_WevePointTower), -1, 0, 1, 1, 1, 0, "u 'WevePointTower' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WevePointTower", 1584, G__StWalgo2011_Cint_914_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StWalgo2011_Cint_914_0_18, (int) ('u'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_WevePointTower), -1, 1, 1, 1, 1, 0, "u 'WevePointTower' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWeveEleTrack(void) {
   /* WeveEleTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveEleTrack));
   G__memfunc_setup("WeveEleTrack",1186,G__StWalgo2011_Cint_915_0_1, 105, G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveEleTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__StWalgo2011_Cint_915_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__StWalgo2011_Cint_915_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StWalgo2011_Cint_915_0_4, 85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WeveEleTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StWalgo2011_Cint_915_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WeveEleTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StWalgo2011_Cint_915_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WeveEleTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StWalgo2011_Cint_915_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WeveEleTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StWalgo2011_Cint_915_0_8, 85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StWalgo2011_Cint_915_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StWalgo2011_Cint_915_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StWalgo2011_Cint_915_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StWalgo2011_Cint_915_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WeveEleTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StWalgo2011_Cint_915_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WeveEleTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StWalgo2011_Cint_915_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WeveEleTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StWalgo2011_Cint_915_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WeveEleTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WeveEleTrack", 1186, G__StWalgo2011_Cint_915_0_16, (int) ('i'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveEleTrack), -1, 0, 1, 1, 1, 0, "u 'WeveEleTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WeveEleTrack", 1312, G__StWalgo2011_Cint_915_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWeveVertex(void) {
   /* WeveVertex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveVertex));
   G__memfunc_setup("clear",519,G__StWalgo2011_Cint_916_0_1, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__StWalgo2011_Cint_916_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StWalgo2011_Cint_916_0_3, 85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WeveVertex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StWalgo2011_Cint_916_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WeveVertex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StWalgo2011_Cint_916_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WeveVertex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StWalgo2011_Cint_916_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WeveVertex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StWalgo2011_Cint_916_0_7, 85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StWalgo2011_Cint_916_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StWalgo2011_Cint_916_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StWalgo2011_Cint_916_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StWalgo2011_Cint_916_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WeveVertex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StWalgo2011_Cint_916_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WeveVertex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StWalgo2011_Cint_916_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WeveVertex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StWalgo2011_Cint_916_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WeveVertex::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("WeveVertex", 1045, G__StWalgo2011_Cint_916_0_15, (int) ('i'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveVertex), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("WeveVertex", 1045, G__StWalgo2011_Cint_916_0_16, (int) ('i'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveVertex), -1, 0, 1, 1, 1, 0, "u 'WeveVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WeveVertex", 1171, G__StWalgo2011_Cint_916_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StWalgo2011_Cint_916_0_18, (int) ('u'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveVertex), -1, 1, 1, 1, 1, 0, "u 'WeveVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWeveBEMC(void) {
   /* WeveBEMC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveBEMC));
   G__memfunc_setup("clear",519,G__StWalgo2011_Cint_925_0_1, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__StWalgo2011_Cint_925_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' flag", "end of print", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StWalgo2011_Cint_925_0_3, 85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WeveBEMC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StWalgo2011_Cint_925_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WeveBEMC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StWalgo2011_Cint_925_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WeveBEMC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StWalgo2011_Cint_925_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WeveBEMC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StWalgo2011_Cint_925_0_7, 85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StWalgo2011_Cint_925_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StWalgo2011_Cint_925_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StWalgo2011_Cint_925_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StWalgo2011_Cint_925_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WeveBEMC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StWalgo2011_Cint_925_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WeveBEMC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StWalgo2011_Cint_925_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WeveBEMC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StWalgo2011_Cint_925_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WeveBEMC::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("WeveBEMC", 686, G__StWalgo2011_Cint_925_0_15, (int) ('i'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveBEMC), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("WeveBEMC", 686, G__StWalgo2011_Cint_925_0_16, (int) ('i'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveBEMC), -1, 0, 1, 1, 1, 0, "u 'WeveBEMC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WeveBEMC", 812, G__StWalgo2011_Cint_925_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StWalgo2011_Cint_925_0_18, (int) ('u'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveBEMC), -1, 1, 1, 1, 1, 0, "u 'WeveBEMC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWeveETOW(void) {
   /* WeveETOW */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveETOW));
   G__memfunc_setup("clear",519,G__StWalgo2011_Cint_926_0_1, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StWalgo2011_Cint_926_0_2, 85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WeveETOW::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StWalgo2011_Cint_926_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WeveETOW::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StWalgo2011_Cint_926_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WeveETOW::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StWalgo2011_Cint_926_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WeveETOW::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StWalgo2011_Cint_926_0_6, 85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StWalgo2011_Cint_926_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StWalgo2011_Cint_926_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StWalgo2011_Cint_926_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StWalgo2011_Cint_926_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WeveETOW::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StWalgo2011_Cint_926_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WeveETOW::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StWalgo2011_Cint_926_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WeveETOW::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StWalgo2011_Cint_926_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WeveETOW::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("WeveETOW", 726, G__StWalgo2011_Cint_926_0_14, (int) ('i'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveETOW), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("WeveETOW", 726, G__StWalgo2011_Cint_926_0_15, (int) ('i'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveETOW), -1, 0, 1, 1, 1, 0, "u 'WeveETOW' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WeveETOW", 852, G__StWalgo2011_Cint_926_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StWalgo2011_Cint_926_0_17, (int) ('u'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveETOW), -1, 1, 1, 1, 1, 0, "u 'WeveETOW' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWeveEPRS(void) {
   /* WeveEPRS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveEPRS));
   G__memfunc_setup("clear",519,G__StWalgo2011_Cint_927_0_1, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StWalgo2011_Cint_927_0_2, 85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WeveEPRS::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StWalgo2011_Cint_927_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WeveEPRS::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StWalgo2011_Cint_927_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WeveEPRS::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StWalgo2011_Cint_927_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WeveEPRS::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StWalgo2011_Cint_927_0_6, 85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StWalgo2011_Cint_927_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StWalgo2011_Cint_927_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StWalgo2011_Cint_927_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StWalgo2011_Cint_927_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WeveEPRS::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StWalgo2011_Cint_927_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WeveEPRS::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StWalgo2011_Cint_927_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WeveEPRS::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StWalgo2011_Cint_927_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WeveEPRS::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("WeveEPRS", 721, G__StWalgo2011_Cint_927_0_14, (int) ('i'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveEPRS), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("WeveEPRS", 721, G__StWalgo2011_Cint_927_0_15, (int) ('i'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveEPRS), -1, 0, 1, 1, 1, 0, "u 'WeveEPRS' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WeveEPRS", 847, G__StWalgo2011_Cint_927_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StWalgo2011_Cint_927_0_17, (int) ('u'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveEPRS), -1, 1, 1, 1, 1, 0, "u 'WeveEPRS' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWeveESMD(void) {
   /* WeveESMD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveESMD));
   G__memfunc_setup("clear",519,G__StWalgo2011_Cint_928_0_1, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StWalgo2011_Cint_928_0_2, 85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WeveESMD::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StWalgo2011_Cint_928_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WeveESMD::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StWalgo2011_Cint_928_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WeveESMD::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StWalgo2011_Cint_928_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WeveESMD::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StWalgo2011_Cint_928_0_6, 85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StWalgo2011_Cint_928_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StWalgo2011_Cint_928_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StWalgo2011_Cint_928_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StWalgo2011_Cint_928_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WeveESMD::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StWalgo2011_Cint_928_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WeveESMD::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StWalgo2011_Cint_928_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WeveESMD::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StWalgo2011_Cint_928_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WeveESMD::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("WeveESMD", 704, G__StWalgo2011_Cint_928_0_14, (int) ('i'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveESMD), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("WeveESMD", 704, G__StWalgo2011_Cint_928_0_15, (int) ('i'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveESMD), -1, 0, 1, 1, 1, 0, "u 'WeveESMD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WeveESMD", 830, G__StWalgo2011_Cint_928_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StWalgo2011_Cint_928_0_17, (int) ('u'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveESMD), -1, 1, 1, 1, 1, 0, "u 'WeveESMD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWevent2011(void) {
   /* Wevent2011 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_Wevent2011));
   G__memfunc_setup("Wevent2011",829,G__StWalgo2011_Cint_929_0_1, 105, G__get_linked_tagnum(&G__StWalgo2011_CintLN_Wevent2011), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__StWalgo2011_Cint_929_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__StWalgo2011_Cint_929_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 '0' flag i - - 0 '0' isMC", "end of PRINT", (void*) NULL, 0);
   G__memfunc_setup("getGmt_day_hour",1570,G__StWalgo2011_Cint_929_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 1 - yyyymmdd i - - 1 - hhmmss", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StWalgo2011_Cint_929_0_5, 85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Wevent2011::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StWalgo2011_Cint_929_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Wevent2011::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StWalgo2011_Cint_929_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Wevent2011::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StWalgo2011_Cint_929_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Wevent2011::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StWalgo2011_Cint_929_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StWalgo2011_Cint_929_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Wevent2011::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StWalgo2011_Cint_929_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Wevent2011::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StWalgo2011_Cint_929_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Wevent2011::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StWalgo2011_Cint_929_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Wevent2011::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Wevent2011", 829, G__StWalgo2011_Cint_929_0_17, (int) ('i'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_Wevent2011), -1, 0, 1, 1, 1, 0, "u 'Wevent2011' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Wevent2011", 955, G__StWalgo2011_Cint_929_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StWalgo2011_Cint_929_0_19, (int) ('u'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_Wevent2011), -1, 1, 1, 1, 1, 0, "u 'Wevent2011' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSt2011pubWanaMaker(void) {
   /* St2011pubWanaMaker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubWanaMaker));
   G__memfunc_setup("initHistos",1070,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("evalWeleTrackSign",1723,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scanCrateRate",1312,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("varyCuts4backgStudy",1958,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("St2011pubWanaMaker",1609,G__StWalgo2011_Cint_944_0_5, 105, G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubWanaMaker), -1, 0, 1, 1, 1, 0, "C - - 10 '\"2011pubWana\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Make",382,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setHList",816,G__StWalgo2011_Cint_944_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("attachWalgoMaker",1631,G__StWalgo2011_Cint_944_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'St2011WMaker' - 0 - mk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitRun",713,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 0 - runumber", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FinishRun",918,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 0 - runumber", "Overload empty StMaker::FinishRun ", (void*) NULL, 1);
   G__memfunc_setup("GetCVS",524,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__StWalgo2011_Cint_944_0_13, 85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&St2011pubWanaMaker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StWalgo2011_Cint_944_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&St2011pubWanaMaker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StWalgo2011_Cint_944_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&St2011pubWanaMaker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StWalgo2011_Cint_944_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&St2011pubWanaMaker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StWalgo2011_Cint_944_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StWalgo2011_Cint_944_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&St2011pubWanaMaker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StWalgo2011_Cint_944_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&St2011pubWanaMaker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StWalgo2011_Cint_944_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&St2011pubWanaMaker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StWalgo2011_Cint_944_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&St2011pubWanaMaker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("St2011pubWanaMaker", 1609, G__StWalgo2011_Cint_944_0_25, (int) ('i'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubWanaMaker), -1, 0, 1, 1, 1, 0, "u 'St2011pubWanaMaker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~St2011pubWanaMaker", 1735, G__StWalgo2011_Cint_944_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSt2011pubSpinMaker(void) {
   /* St2011pubSpinMaker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubSpinMaker));
   G__memfunc_setup("initHistos",1070,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bXingSort",928,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bXingSortEndcap",1515,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("St2011pubSpinMaker",1628,G__StWalgo2011_Cint_945_0_4, 105, G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubSpinMaker), -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"2011pubSpin\"' name C - - 10 '\"Eta7\"' etaName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitRun",713,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 0 - runumber", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Make",382,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setHList",816,G__StWalgo2011_Cint_945_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEta",614,G__StWalgo2011_Cint_945_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - x f - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEtaE",683,G__StWalgo2011_Cint_945_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - x f - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setQPT",577,G__StWalgo2011_Cint_945_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNoEEMC",803,G__StWalgo2011_Cint_945_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("attachWalgoMaker",1631,G__StWalgo2011_Cint_945_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'St2011WMaker' - 0 - mk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FinishRun",918,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 0 - runumber", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCVS",524,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__StWalgo2011_Cint_945_0_16, 85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&St2011pubSpinMaker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StWalgo2011_Cint_945_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&St2011pubSpinMaker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StWalgo2011_Cint_945_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&St2011pubSpinMaker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StWalgo2011_Cint_945_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&St2011pubSpinMaker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StWalgo2011_Cint_945_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StWalgo2011_Cint_945_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&St2011pubSpinMaker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StWalgo2011_Cint_945_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&St2011pubSpinMaker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StWalgo2011_Cint_945_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&St2011pubSpinMaker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StWalgo2011_Cint_945_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&St2011pubSpinMaker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("St2011pubSpinMaker", 1628, G__StWalgo2011_Cint_945_0_28, (int) ('i'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubSpinMaker), -1, 0, 1, 1, 1, 0, "u 'St2011pubSpinMaker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~St2011pubSpinMaker", 1754, G__StWalgo2011_Cint_945_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSt2011pubMcMaker(void) {
   /* St2011pubMcMaker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubMcMaker));
   G__memfunc_setup("initHistos",1070,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doWanalysis",1166,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doWefficiency",1343,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doMCanalysis",1223,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("St2011pubMcMaker",1394,G__StWalgo2011_Cint_946_0_5, 105, G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubMcMaker), -1, 0, 1, 1, 1, 0, "C - - 10 '\"2011pubMc\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Make",382,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setHList",816,G__StWalgo2011_Cint_946_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("attachWalgoMaker",1631,G__StWalgo2011_Cint_946_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'St2011WMaker' - 0 - mk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitRun",713,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 0 - runumber", "Overload empty StMaker::InitRun ", (void*) NULL, 1);
   G__memfunc_setup("FinishRun",918,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 0 - runumber", "Overload empty StMaker::FinishRun ", (void*) NULL, 1);
   G__memfunc_setup("GetCVS",524,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__StWalgo2011_Cint_946_0_13, 85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&St2011pubMcMaker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StWalgo2011_Cint_946_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&St2011pubMcMaker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StWalgo2011_Cint_946_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&St2011pubMcMaker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StWalgo2011_Cint_946_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&St2011pubMcMaker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StWalgo2011_Cint_946_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StWalgo2011_Cint_946_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&St2011pubMcMaker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StWalgo2011_Cint_946_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&St2011pubMcMaker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StWalgo2011_Cint_946_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&St2011pubMcMaker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StWalgo2011_Cint_946_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&St2011pubMcMaker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("St2011pubMcMaker", 1394, G__StWalgo2011_Cint_946_0_25, (int) ('i'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011pubMcMaker), -1, 0, 1, 1, 1, 0, "u 'St2011pubMcMaker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~St2011pubMcMaker", 1520, G__StWalgo2011_Cint_946_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSt2011WMaker(void) {
   /* St2011WMaker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WMaker));
   G__memfunc_setup("setVertexCuts",1385,G__StWalgo2011_Cint_948_0_1, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - zm i - - 0 - npv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEleTrackCuts",1526,G__StWalgo2011_Cint_948_0_2, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - nfp i - - 0 - hfr "
"f - - 0 - rin f - - 0 - rout "
"f - - 0 - mpt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWbosonCuts",1379,G__StWalgo2011_Cint_948_0_3, 121, -1, -1, 0, 5, 1, 1, 0, 
"f - - 0 - a f - - 0 - fr2 "
"f - - 0 - bal f - - 0 - etaLow "
"f - - 0 - etaHigh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setE_WbosonCuts",1543,G__StWalgo2011_Cint_948_0_4, 121, -1, -1, 0, 5, 1, 1, 0, 
"f - - 0 - a f - - 0 - fr2 "
"f - - 0 - bal f - - 0 - etaLow "
"f - - 0 - etaHigh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEmcCuts",1024,G__StWalgo2011_Cint_948_0_5, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - ksp f - - 0 - madc "
"f - - 0 - clet f - - 0 - fr1 "
"f - - 0 - dr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEtowScale",1235,G__StWalgo2011_Cint_948_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBtowScale",1232,G__StWalgo2011_Cint_948_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setConeRadius",1337,G__StWalgo2011_Cint_948_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - nearCone f - - 0 - awayCone", "Jinlong, easy set cone radius", (void*) NULL, 0);
   G__memfunc_setup("setL0AdcThresh",1342,G__StWalgo2011_Cint_948_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setL2ClusterThresh",1818,G__StWalgo2011_Cint_948_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setL2SeedThresh",1465,G__StWalgo2011_Cint_948_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setJetTreeBranch",1613,G__StWalgo2011_Cint_948_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - jetTreeBranch u 'TString' - 0 - jetTreeBranch_noEEMC", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTreeName",1117,G__StWalgo2011_Cint_948_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("accessBarrelTrig",1632,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("accessEndcapTrig",1619,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("accessVertex",1264,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("accessTracks",1242,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("accessBTOW",942,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("accessBSMD",920,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("accessETOW",945,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("accessEPRS",940,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("accessESMD",923,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("analyzeESMD",1053,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("analyzeEPRS",1070,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("passes_L0",874,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("passes_L2",876,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_W_boson",1239,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findEndcap_W_boson",1826,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tag_Z_boson",1141,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("extendTrack2Barrel",1799,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("matchTrack2BtowCluster",2226,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("extendTrack2Endcap",1786,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("matchTrack2EtowCluster",2229,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findNearJet",1098,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findAwayJet",1110,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findPtBalance",1291,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("esmdAnalysis",1261,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getJetEvent",1125,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sumTpcCone",1025,(G__InterfaceMethod) NULL, 102, -1, -1, 0, 4, 1, 4, 0, 
"i - - 0 - vertID u 'TVector3' - 0 - refAxis "
"i - - 0 - flag i - - 0 - pointTowId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sumBtowCone",1142,(G__InterfaceMethod) NULL, 102, -1, -1, 0, 3, 1, 4, 0, 
"f - - 0 - zVert u 'TVector3' - 0 - refAxis "
"i - - 0 - flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sumEtowCone",1145,(G__InterfaceMethod) NULL, 102, -1, -1, 0, 3, 1, 4, 0, 
"f - - 0 - zVert u 'TVector3' - 0 - refAxis "
"i - - 0 - flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sumTpcConeFromTree",1829,(G__InterfaceMethod) NULL, 102, -1, -1, 0, 4, 1, 4, 0, 
"i - - 0 - vertID u 'TVector3' - 0 - refAxis "
"i - - 0 - flag i - - 0 - pointTowId", "uses track vector saved in tree", (void*) NULL, 0);
   G__memfunc_setup("maxBtow2x2",958,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveCluster), -1, 0, 3, 1, 4, 0, 
"i - - 0 - iEta i - - 0 - iPhi "
"f - - 0 - zVert", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sumBtowPatch",1249,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveCluster), -1, 0, 5, 1, 4, 0, 
"i - - 0 - iEta i - - 0 - iPhi "
"i - - 0 - Leta i - - 0 - Lphi "
"f - - 0 - zVert", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("maxEtow2x1",960,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveCluster), -1, 0, 3, 1, 4, 0, 
"i - - 0 - iEta i - - 0 - iPhi "
"f - - 0 - zVert", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("maxEtow2x2",961,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveCluster), -1, 0, 3, 1, 4, 0, 
"i - - 0 - iEta i - - 0 - iPhi "
"f - - 0 - zVert", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sumEtowPatch",1252,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__StWalgo2011_CintLN_WeveCluster), -1, 0, 5, 1, 4, 0, 
"i - - 0 - iEta i - - 0 - iPhi "
"i - - 0 - Leta i - - 0 - Lphi "
"f - - 0 - zVert", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("patchToEtaPhi",1294,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"i - - 0 - patch I - - 0 - eta "
"I - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initHistos",1070,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initEHistos",1139,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initGeom",828,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("L2algoEtaPhi2IJ",1313,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 4, 1, 4, 0, 
"f - - 0 - etaF f - - 0 - phiF "
"i - - 1 - kEta i - - 1 - kPhi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("St2011WMaker",978,G__StWalgo2011_Cint_948_0_53, 105, G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WMaker), -1, 0, 1, 1, 1, 0, "C - - 10 '\"2011Walgo\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Make",382,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finish",609,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitRun",713,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 0 - runumber", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FinishRun",918,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 0 - runumber", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setTrigID",879,G__StWalgo2011_Cint_948_0_60, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - l2bw i - - 0 - l2ew", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHList",816,G__StWalgo2011_Cint_948_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHListTpc",1111,G__StWalgo2011_Cint_948_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMC",476,G__StWalgo2011_Cint_948_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMaxDisplayEve",1640,G__StWalgo2011_Cint_948_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("attachSpinDb",1205,G__StWalgo2011_Cint_948_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StSpinDbMaker' - 0 - mk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chainFile",899,G__StWalgo2011_Cint_948_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chainJetFile",1190,G__StWalgo2011_Cint_948_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumberOfEvents",1747,G__StWalgo2011_Cint_948_0_68, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEvent",834,G__StWalgo2011_Cint_948_0_69, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - eventJet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCVS",524,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 0, 1, 2, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__StWalgo2011_Cint_948_0_71, 85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&St2011WMaker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StWalgo2011_Cint_948_0_72, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&St2011WMaker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StWalgo2011_Cint_948_0_73, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&St2011WMaker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StWalgo2011_Cint_948_0_74, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&St2011WMaker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StWalgo2011_Cint_948_0_78, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StWalgo2011_Cint_948_0_79, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&St2011WMaker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StWalgo2011_Cint_948_0_80, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&St2011WMaker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StWalgo2011_Cint_948_0_81, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&St2011WMaker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StWalgo2011_Cint_948_0_82, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&St2011WMaker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("St2011WMaker", 978, G__StWalgo2011_Cint_948_0_83, (int) ('i'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WMaker), -1, 0, 1, 1, 1, 0, "u 'St2011WMaker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~St2011WMaker", 1104, G__StWalgo2011_Cint_948_0_84, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSt2011WlumiMaker(void) {
   /* St2011WlumiMaker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WlumiMaker));
   G__memfunc_setup("initHistos",1070,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bXingSort",928,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("St2011WlumiMaker",1417,G__StWalgo2011_Cint_949_0_3, 105, G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WlumiMaker), -1, 0, 1, 1, 1, 0, "C - - 10 '\"2011Wlumi\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Make",382,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setHList",816,G__StWalgo2011_Cint_949_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("attachWalgoMaker",1631,G__StWalgo2011_Cint_949_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'St2011WMaker' - 0 - mk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitRun",713,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 0 - runumber", "Overload empty StMaker::InitRun ", (void*) NULL, 1);
   G__memfunc_setup("FinishRun",918,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 0 - runumber", "Overload empty StMaker::FinishRun ", (void*) NULL, 1);
   G__memfunc_setup("GetCVS",524,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__StWalgo2011_Cint_949_0_11, 85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&St2011WlumiMaker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StWalgo2011_Cint_949_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&St2011WlumiMaker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StWalgo2011_Cint_949_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&St2011WlumiMaker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StWalgo2011_Cint_949_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&St2011WlumiMaker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StWalgo2011_Cint_949_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StWalgo2011_Cint_949_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&St2011WlumiMaker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StWalgo2011_Cint_949_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&St2011WlumiMaker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StWalgo2011_Cint_949_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&St2011WlumiMaker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StWalgo2011_Cint_949_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&St2011WlumiMaker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("St2011WlumiMaker", 1417, G__StWalgo2011_Cint_949_0_23, (int) ('i'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011WlumiMaker), -1, 0, 1, 1, 1, 0, "u 'St2011WlumiMaker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~St2011WlumiMaker", 1543, G__StWalgo2011_Cint_949_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSt2011ZMaker(void) {
   /* St2011ZMaker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011ZMaker));
   G__memfunc_setup("initHistos",1070,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_Z_boson",1242,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findEndcap_Z_boson",1829,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("St2011ZMaker",981,G__StWalgo2011_Cint_950_0_4, 105, G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011ZMaker), -1, 0, 1, 1, 1, 0, "C - - 10 '\"2011Zalgo\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Make",382,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setHList",816,G__StWalgo2011_Cint_950_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("attachWalgoMaker",1631,G__StWalgo2011_Cint_950_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'St2011WMaker' - 0 - mk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("attachMuMaker",1319,G__StWalgo2011_Cint_950_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StMuDstMaker' - 0 - mk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNearEtFrac",1287,G__StWalgo2011_Cint_950_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setClusterMinEt",1547,G__StWalgo2011_Cint_950_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPhi12Min",1012,G__StWalgo2011_Cint_950_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMinZMass",1118,G__StWalgo2011_Cint_950_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMaxZMass",1120,G__StWalgo2011_Cint_950_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printJan",838,G__StWalgo2011_Cint_950_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WeveEleTrack' - 0 - T", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitRun",713,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 0 - runnumber", "Overload empty StMaker::InitRun ", (void*) NULL, 1);
   G__memfunc_setup("FinishRun",918,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 0 - runnumber", "Overload empty StMaker::FinishRun ", (void*) NULL, 1);
   G__memfunc_setup("GetCVS",524,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__StWalgo2011_Cint_950_0_19, 85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&St2011ZMaker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StWalgo2011_Cint_950_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&St2011ZMaker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StWalgo2011_Cint_950_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&St2011ZMaker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StWalgo2011_Cint_950_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&St2011ZMaker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StWalgo2011_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StWalgo2011_Cint_950_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StWalgo2011_Cint_950_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&St2011ZMaker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StWalgo2011_Cint_950_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&St2011ZMaker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StWalgo2011_Cint_950_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&St2011ZMaker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StWalgo2011_Cint_950_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&St2011ZMaker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("St2011ZMaker", 981, G__StWalgo2011_Cint_950_0_31, (int) ('i'), G__get_linked_tagnum(&G__StWalgo2011_CintLN_St2011ZMaker), -1, 0, 1, 1, 1, 0, "u 'St2011ZMaker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~St2011ZMaker", 1107, G__StWalgo2011_Cint_950_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncStWalgo2011_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {
}

static void G__cpp_setup_global8() {
}

static void G__cpp_setup_global9() {
}

static void G__cpp_setup_global10() {
}

static void G__cpp_setup_global11() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalStWalgo2011_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
  G__cpp_setup_global8();
  G__cpp_setup_global9();
  G__cpp_setup_global10();
  G__cpp_setup_global11();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcStWalgo2011_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__StWalgo2011_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TDataSet = { "TDataSet" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_StMaker = { "StMaker" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_StMuDstMaker = { "StMuDstMaker" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_StMuTrack = { "StMuTrack" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_vectorlETHelixKFitterAuxcOallocatorlETHelixKFitterAuxgRsPgR = { "vector<THelixKFitterAux,allocator<THelixKFitterAux> >" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_reverse_iteratorlEvectorlETHelixKFitterAuxcOallocatorlETHelixKFitterAuxgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<THelixKFitterAux,allocator<THelixKFitterAux> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_StEmcGeom = { "StEmcGeom" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_WeveCluster = { "WeveCluster" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_WevePointTower = { "WevePointTower" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_WeveEleTrack = { "WeveEleTrack" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_WeveVertex = { "WeveVertex" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_vectorlEWeveEleTrackcOallocatorlEWeveEleTrackgRsPgR = { "vector<WeveEleTrack,allocator<WeveEleTrack> >" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_reverse_iteratorlEvectorlEWeveEleTrackcOallocatorlEWeveEleTrackgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<WeveEleTrack,allocator<WeveEleTrack> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_vectorlEStMuTrackmUcOallocatorlEStMuTrackmUgRsPgR = { "vector<StMuTrack*,allocator<StMuTrack*> >" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_reverse_iteratorlEvectorlEStMuTrackmUcOallocatorlEStMuTrackmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<StMuTrack*,allocator<StMuTrack*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_WeveBEMC = { "WeveBEMC" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_WeveETOW = { "WeveETOW" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_WeveEPRS = { "WeveEPRS" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_WeveESMD = { "WeveESMD" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_Wevent2011 = { "Wevent2011" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_vectorlEWeveVertexcOallocatorlEWeveVertexgRsPgR = { "vector<WeveVertex,allocator<WeveVertex> >" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_reverse_iteratorlEvectorlEWeveVertexcOallocatorlEWeveVertexgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<WeveVertex,allocator<WeveVertex> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_WtpcFilter = { "WtpcFilter" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_StEmcDecoder = { "StEmcDecoder" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_StBemcTables = { "StBemcTables" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_StEEmcDb = { "StEEmcDb" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_StSpinDbMaker = { "StSpinDbMaker" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_EEmcGeomSimple = { "EEmcGeomSimple" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_EEmcSmdGeom = { "EEmcSmdGeom" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_WeventDisplay = { "WeventDisplay" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_St2011pubWanaMaker = { "St2011pubWanaMaker" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_St2011pubSpinMaker = { "St2011pubSpinMaker" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_St2011pubMcMaker = { "St2011pubMcMaker" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_StJetEvent = { "StJetEvent" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_St2011WMaker = { "St2011WMaker" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_St2011WlumiMaker = { "St2011WlumiMaker" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_St2011ZMaker = { "St2011ZMaker" , 99 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_St2011WMakercLcLdA = { "St2011WMaker::$" , 101 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_St2011WlumiMakercLcLdA = { "St2011WlumiMaker::$" , 101 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_St2011ZMakercLcLdA = { "St2011ZMaker::$" , 101 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_St2011pubMcMakercLcLdA = { "St2011pubMcMaker::$" , 101 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_St2011pubSpinMakercLcLdA = { "St2011pubSpinMaker::$" , 101 , -1 };
G__linked_taginfo G__StWalgo2011_CintLN_St2011pubWanaMakercLcLdA = { "St2011pubWanaMaker::$" , 101 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableStWalgo2011_Cint() {
  G__StWalgo2011_CintLN_TClass.tagnum = -1 ;
  G__StWalgo2011_CintLN_TBuffer.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMemberInspector.tagnum = -1 ;
  G__StWalgo2011_CintLN_TObject.tagnum = -1 ;
  G__StWalgo2011_CintLN_TNamed.tagnum = -1 ;
  G__StWalgo2011_CintLN_TString.tagnum = -1 ;
  G__StWalgo2011_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TObjArray.tagnum = -1 ;
  G__StWalgo2011_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TDataSet.tagnum = -1 ;
  G__StWalgo2011_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TH1.tagnum = -1 ;
  G__StWalgo2011_CintLN_TFile.tagnum = -1 ;
  G__StWalgo2011_CintLN_TChain.tagnum = -1 ;
  G__StWalgo2011_CintLN_TTree.tagnum = -1 ;
  G__StWalgo2011_CintLN_StMaker.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TVector3.tagnum = -1 ;
  G__StWalgo2011_CintLN_StMuDstMaker.tagnum = -1 ;
  G__StWalgo2011_CintLN_StMuTrack.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__StWalgo2011_CintLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__StWalgo2011_CintLN_vectorlETHelixKFitterAuxcOallocatorlETHelixKFitterAuxgRsPgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_reverse_iteratorlEvectorlETHelixKFitterAuxcOallocatorlETHelixKFitterAuxgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_StEmcGeom.tagnum = -1 ;
  G__StWalgo2011_CintLN_WeveCluster.tagnum = -1 ;
  G__StWalgo2011_CintLN_WevePointTower.tagnum = -1 ;
  G__StWalgo2011_CintLN_WeveEleTrack.tagnum = -1 ;
  G__StWalgo2011_CintLN_WeveVertex.tagnum = -1 ;
  G__StWalgo2011_CintLN_vectorlEWeveEleTrackcOallocatorlEWeveEleTrackgRsPgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_reverse_iteratorlEvectorlEWeveEleTrackcOallocatorlEWeveEleTrackgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_vectorlEStMuTrackmUcOallocatorlEStMuTrackmUgRsPgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_reverse_iteratorlEvectorlEStMuTrackmUcOallocatorlEStMuTrackmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_WeveBEMC.tagnum = -1 ;
  G__StWalgo2011_CintLN_WeveETOW.tagnum = -1 ;
  G__StWalgo2011_CintLN_WeveEPRS.tagnum = -1 ;
  G__StWalgo2011_CintLN_WeveESMD.tagnum = -1 ;
  G__StWalgo2011_CintLN_Wevent2011.tagnum = -1 ;
  G__StWalgo2011_CintLN_vectorlEWeveVertexcOallocatorlEWeveVertexgRsPgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_reverse_iteratorlEvectorlEWeveVertexcOallocatorlEWeveVertexgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StWalgo2011_CintLN_WtpcFilter.tagnum = -1 ;
  G__StWalgo2011_CintLN_StEmcDecoder.tagnum = -1 ;
  G__StWalgo2011_CintLN_StBemcTables.tagnum = -1 ;
  G__StWalgo2011_CintLN_StEEmcDb.tagnum = -1 ;
  G__StWalgo2011_CintLN_StSpinDbMaker.tagnum = -1 ;
  G__StWalgo2011_CintLN_EEmcGeomSimple.tagnum = -1 ;
  G__StWalgo2011_CintLN_EEmcSmdGeom.tagnum = -1 ;
  G__StWalgo2011_CintLN_WeventDisplay.tagnum = -1 ;
  G__StWalgo2011_CintLN_St2011pubWanaMaker.tagnum = -1 ;
  G__StWalgo2011_CintLN_St2011pubSpinMaker.tagnum = -1 ;
  G__StWalgo2011_CintLN_St2011pubMcMaker.tagnum = -1 ;
  G__StWalgo2011_CintLN_StJetEvent.tagnum = -1 ;
  G__StWalgo2011_CintLN_St2011WMaker.tagnum = -1 ;
  G__StWalgo2011_CintLN_St2011WlumiMaker.tagnum = -1 ;
  G__StWalgo2011_CintLN_St2011ZMaker.tagnum = -1 ;
  G__StWalgo2011_CintLN_St2011WMakercLcLdA.tagnum = -1 ;
  G__StWalgo2011_CintLN_St2011WlumiMakercLcLdA.tagnum = -1 ;
  G__StWalgo2011_CintLN_St2011ZMakercLcLdA.tagnum = -1 ;
  G__StWalgo2011_CintLN_St2011pubMcMakercLcLdA.tagnum = -1 ;
  G__StWalgo2011_CintLN_St2011pubSpinMakercLcLdA.tagnum = -1 ;
  G__StWalgo2011_CintLN_St2011pubWanaMakercLcLdA.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableStWalgo2011_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TNamed);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TString);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TDataSet);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TH1);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TFile);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TChain);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TTree);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_StMaker);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TVector3);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_StMuDstMaker);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_StMuTrack);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_vectorlETHelixKFitterAuxcOallocatorlETHelixKFitterAuxgRsPgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_reverse_iteratorlEvectorlETHelixKFitterAuxcOallocatorlETHelixKFitterAuxgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_StEmcGeom);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_WeveCluster),sizeof(WeveCluster),-1,262400,(char*)NULL,G__setup_memvarWeveCluster,G__setup_memfuncWeveCluster);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_WevePointTower),sizeof(WevePointTower),-1,262144,(char*)NULL,G__setup_memvarWevePointTower,G__setup_memfuncWevePointTower);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_WeveEleTrack),sizeof(WeveEleTrack),-1,262400,(char*)NULL,G__setup_memvarWeveEleTrack,G__setup_memfuncWeveEleTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_WeveVertex),sizeof(WeveVertex),-1,262144,(char*)NULL,G__setup_memvarWeveVertex,G__setup_memfuncWeveVertex);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_vectorlEWeveEleTrackcOallocatorlEWeveEleTrackgRsPgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_reverse_iteratorlEvectorlEWeveEleTrackcOallocatorlEWeveEleTrackgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_vectorlEStMuTrackmUcOallocatorlEStMuTrackmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_reverse_iteratorlEvectorlEStMuTrackmUcOallocatorlEStMuTrackmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_WeveBEMC),sizeof(WeveBEMC),-1,262144,(char*)NULL,G__setup_memvarWeveBEMC,G__setup_memfuncWeveBEMC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_WeveETOW),sizeof(WeveETOW),-1,262144,(char*)NULL,G__setup_memvarWeveETOW,G__setup_memfuncWeveETOW);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_WeveEPRS),sizeof(WeveEPRS),-1,262144,(char*)NULL,G__setup_memvarWeveEPRS,G__setup_memfuncWeveEPRS);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_WeveESMD),sizeof(WeveESMD),-1,262144,(char*)NULL,G__setup_memvarWeveESMD,G__setup_memfuncWeveESMD);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_Wevent2011),sizeof(Wevent2011),-1,291072,(char*)NULL,G__setup_memvarWevent2011,G__setup_memfuncWevent2011);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_vectorlEWeveVertexcOallocatorlEWeveVertexgRsPgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_reverse_iteratorlEvectorlEWeveVertexcOallocatorlEWeveVertexgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_WtpcFilter);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_StEmcDecoder);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_StBemcTables);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_StEEmcDb);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_StSpinDbMaker);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_EEmcGeomSimple);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_EEmcSmdGeom);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_WeventDisplay);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_St2011pubWanaMaker),sizeof(St2011pubWanaMaker),-1,324864,"StAF chain virtual base class for Makers",G__setup_memvarSt2011pubWanaMaker,G__setup_memfuncSt2011pubWanaMaker);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_St2011pubSpinMaker),sizeof(St2011pubSpinMaker),-1,324864,"StAF chain virtual base class for Makers",G__setup_memvarSt2011pubSpinMaker,G__setup_memfuncSt2011pubSpinMaker);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_St2011pubMcMaker),sizeof(St2011pubMcMaker),-1,324864,"StAF chain virtual base class for Makers",G__setup_memvarSt2011pubMcMaker,G__setup_memfuncSt2011pubMcMaker);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_StJetEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_St2011WMaker),sizeof(St2011WMaker),-1,324864,"StAF chain virtual base class for Makers",G__setup_memvarSt2011WMaker,G__setup_memfuncSt2011WMaker);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_St2011WlumiMaker),sizeof(St2011WlumiMaker),-1,324864,"StAF chain virtual base class for Makers",G__setup_memvarSt2011WlumiMaker,G__setup_memfuncSt2011WlumiMaker);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_St2011ZMaker),sizeof(St2011ZMaker),-1,324864,"StAF chain virtual base class for Makers",G__setup_memvarSt2011ZMaker,G__setup_memfuncSt2011ZMaker);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_St2011WMakercLcLdA);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_St2011WlumiMakercLcLdA);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_St2011ZMakercLcLdA);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_St2011pubMcMakercLcLdA);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_St2011pubSpinMakercLcLdA);
   G__get_linked_tagnum_fwd(&G__StWalgo2011_CintLN_St2011pubWanaMakercLcLdA);
}
extern "C" void G__cpp_setupStWalgo2011_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupStWalgo2011_Cint()");
  G__set_cpp_environmentStWalgo2011_Cint();
  G__cpp_setup_tagtableStWalgo2011_Cint();

  G__cpp_setup_inheritanceStWalgo2011_Cint();

  G__cpp_setup_typetableStWalgo2011_Cint();

  G__cpp_setup_memvarStWalgo2011_Cint();

  G__cpp_setup_memfuncStWalgo2011_Cint();
  G__cpp_setup_globalStWalgo2011_Cint();
  G__cpp_setup_funcStWalgo2011_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncStWalgo2011_Cint();
  return;
}
class G__cpp_setup_initStWalgo2011_Cint {
  public:
    G__cpp_setup_initStWalgo2011_Cint() { G__add_setup_func("StWalgo2011_Cint",(G__incsetup)(&G__cpp_setupStWalgo2011_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initStWalgo2011_Cint() { G__remove_setup_func("StWalgo2011_Cint"); }
};
G__cpp_setup_initStWalgo2011_Cint G__cpp_setup_initializerStWalgo2011_Cint;

